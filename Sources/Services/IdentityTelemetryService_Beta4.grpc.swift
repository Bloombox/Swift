//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: telemetry/v1beta4/IdentityTelemetryService_Beta4.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf
import OpenCannabis

public protocol Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.IdentityTelemetry/Action" }
}


/// Instantiate Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryServiceClient, then call methods of this protocol to make API calls.
public protocol Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryService: ServiceClient {
  /// Synchronous. Unary.
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  @discardableResult
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall

}

public extension Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryService {
  /// Synchronous. Unary.
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try self.action(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall {
    return try self.action(request, metadata: self.metadata, completion: completion)
  }

}

public final class Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryServiceClient: ServiceClientBase, Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryService {
  /// Synchronous. Unary.
  public func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, metadata customMetadata: Metadata) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  public func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, metadata customMetadata: Metadata, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall {
    return try Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

