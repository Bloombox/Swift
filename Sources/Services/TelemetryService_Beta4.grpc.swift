//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: telemetry/v1beta4/TelemetryService_Beta4.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf
import OpenCannabis

public protocol Bloombox_Services_Telemetry_V1beta4_EventTelemetryPingCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_EventTelemetryPingCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Request, Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Response>, Bloombox_Services_Telemetry_V1beta4_EventTelemetryPingCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.EventTelemetry/Ping" }
}

public protocol Bloombox_Services_Telemetry_V1beta4_EventTelemetryEventCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_EventTelemetryEventCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_Event.Request, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_EventTelemetryEventCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.EventTelemetry/Event" }
}

public protocol Bloombox_Services_Telemetry_V1beta4_EventTelemetryBatchCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_EventTelemetryBatchCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_Event.BatchRequest, Bloombox_Services_Telemetry_V1beta4_TelemetryResponse>, Bloombox_Services_Telemetry_V1beta4_EventTelemetryBatchCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.EventTelemetry/Batch" }
}

public protocol Bloombox_Services_Telemetry_V1beta4_EventTelemetryErrorCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_EventTelemetryErrorCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_Exception, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_EventTelemetryErrorCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.EventTelemetry/Error" }
}


/// Instantiate Bloombox_Services_Telemetry_V1beta4_EventTelemetryServiceClient, then call methods of this protocol to make API calls.
public protocol Bloombox_Services_Telemetry_V1beta4_EventTelemetryService: ServiceClient {
  /// Synchronous. Unary.
  func ping(_ request: Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Request) throws -> Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Response
  /// Asynchronous. Unary.
  func ping(_ request: Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Request, completion: @escaping (Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Response?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryPingCall

  /// Synchronous. Unary.
  func event(_ request: Bloombox_Services_Telemetry_V1beta4_Event.Request) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func event(_ request: Bloombox_Services_Telemetry_V1beta4_Event.Request, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryEventCall

  /// Synchronous. Unary.
  func batch(_ request: Bloombox_Services_Telemetry_V1beta4_Event.BatchRequest) throws -> Bloombox_Services_Telemetry_V1beta4_TelemetryResponse
  /// Asynchronous. Unary.
  func batch(_ request: Bloombox_Services_Telemetry_V1beta4_Event.BatchRequest, completion: @escaping (Bloombox_Services_Telemetry_V1beta4_TelemetryResponse?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryBatchCall

  /// Synchronous. Unary.
  func error(_ request: Bloombox_Services_Telemetry_V1beta4_Exception) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func error(_ request: Bloombox_Services_Telemetry_V1beta4_Exception, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryErrorCall

}

public final class Bloombox_Services_Telemetry_V1beta4_EventTelemetryServiceClient: ServiceClientBase, Bloombox_Services_Telemetry_V1beta4_EventTelemetryService {
  /// Synchronous. Unary.
  public func ping(_ request: Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Request) throws -> Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Response {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryPingCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func ping(_ request: Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Request, completion: @escaping (Bloombox_Services_Telemetry_V1beta4_TelemetryPing.Response?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryPingCall {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryPingCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func event(_ request: Bloombox_Services_Telemetry_V1beta4_Event.Request) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryEventCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func event(_ request: Bloombox_Services_Telemetry_V1beta4_Event.Request, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryEventCall {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryEventCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func batch(_ request: Bloombox_Services_Telemetry_V1beta4_Event.BatchRequest) throws -> Bloombox_Services_Telemetry_V1beta4_TelemetryResponse {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryBatchCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func batch(_ request: Bloombox_Services_Telemetry_V1beta4_Event.BatchRequest, completion: @escaping (Bloombox_Services_Telemetry_V1beta4_TelemetryResponse?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryBatchCall {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryBatchCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func error(_ request: Bloombox_Services_Telemetry_V1beta4_Exception) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryErrorCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func error(_ request: Bloombox_Services_Telemetry_V1beta4_Exception, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_EventTelemetryErrorCall {
    return try Bloombox_Services_Telemetry_V1beta4_EventTelemetryErrorCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}
public protocol Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryImpressionCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryImpressionCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Impression, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryImpressionCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.CommercialTelemetry/Impression" }
}

public protocol Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryViewCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryViewCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_CommercialEvent.View, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryViewCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.CommercialTelemetry/View" }
}

public protocol Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryActionCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryActionCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Action, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryActionCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.CommercialTelemetry/Action" }
}


/// Instantiate Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryServiceClient, then call methods of this protocol to make API calls.
public protocol Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryService: ServiceClient {
  /// Synchronous. Unary.
  func impression(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Impression) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func impression(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Impression, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryImpressionCall

  /// Synchronous. Unary.
  func view(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.View) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func view(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.View, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryViewCall

  /// Synchronous. Unary.
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Action) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Action, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryActionCall

}

public final class Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryServiceClient: ServiceClientBase, Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryService {
  /// Synchronous. Unary.
  public func impression(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Impression) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryImpressionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func impression(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Impression, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryImpressionCall {
    return try Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryImpressionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func view(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.View) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryViewCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func view(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.View, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryViewCall {
    return try Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryViewCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func action(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Action) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryActionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func action(_ request: Bloombox_Services_Telemetry_V1beta4_CommercialEvent.Action, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryActionCall {
    return try Bloombox_Services_Telemetry_V1beta4_CommercialTelemetryActionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}
public protocol Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.IdentityTelemetry/Action" }
}


/// Instantiate Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryServiceClient, then call methods of this protocol to make API calls.
public protocol Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryService: ServiceClient {
  /// Synchronous. Unary.
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall

}

public final class Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryServiceClient: ServiceClientBase, Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryService {
  /// Synchronous. Unary.
  public func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func action(_ request: Bloombox_Services_Telemetry_V1beta4_IdentityEvent.Action, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCall {
    return try Bloombox_Services_Telemetry_V1beta4_IdentityTelemetryActionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}
public protocol Bloombox_Services_Telemetry_V1beta4_SearchTelemetryQueryCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_SearchTelemetryQueryCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_SearchEvent.Query, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_SearchTelemetryQueryCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.SearchTelemetry/Query" }
}

public protocol Bloombox_Services_Telemetry_V1beta4_SearchTelemetryResultCall: ClientCallUnary {}

fileprivate final class Bloombox_Services_Telemetry_V1beta4_SearchTelemetryResultCallBase: ClientCallUnaryBase<Bloombox_Services_Telemetry_V1beta4_SearchEvent.Result, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Services_Telemetry_V1beta4_SearchTelemetryResultCall {
  override class var method: String { return "/bloombox.services.telemetry.v1beta4.SearchTelemetry/Result" }
}


/// Instantiate Bloombox_Services_Telemetry_V1beta4_SearchTelemetryServiceClient, then call methods of this protocol to make API calls.
public protocol Bloombox_Services_Telemetry_V1beta4_SearchTelemetryService: ServiceClient {
  /// Synchronous. Unary.
  func query(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Query) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func query(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Query, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_SearchTelemetryQueryCall

  /// Synchronous. Unary.
  func result(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Result) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func result(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Result, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_SearchTelemetryResultCall

}

public final class Bloombox_Services_Telemetry_V1beta4_SearchTelemetryServiceClient: ServiceClientBase, Bloombox_Services_Telemetry_V1beta4_SearchTelemetryService {
  /// Synchronous. Unary.
  public func query(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Query) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_SearchTelemetryQueryCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func query(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Query, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_SearchTelemetryQueryCall {
    return try Bloombox_Services_Telemetry_V1beta4_SearchTelemetryQueryCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func result(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Result) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Services_Telemetry_V1beta4_SearchTelemetryResultCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func result(_ request: Bloombox_Services_Telemetry_V1beta4_SearchEvent.Result, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Services_Telemetry_V1beta4_SearchTelemetryResultCall {
    return try Bloombox_Services_Telemetry_V1beta4_SearchTelemetryResultCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

