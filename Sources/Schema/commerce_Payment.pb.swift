// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: commerce/Payment.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

///*
/// Specifies structures and enumerates related to payments, payment information, and so on.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Enumerates recognized payment methods.
public enum Opencannabis_Commerce_PaymentMethod: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// Fiat or real-value cash currency.
  case cash // = 0

  /// Payment by check.
  case check // = 1

  /// Debit card payment.
  case debit // = 2

  /// Credit card payment.
  case credit // = 3

  /// Digital payment via something like Paypal or Venmo.
  case digital // = 4

  /// Bank account-based payment.
  case ach // = 5

  /// Payment by wire transfer.
  case wire // = 6

  /// Payment via Bitcoin or some other blockchain.
  case blockchain // = 7
  case UNRECOGNIZED(Int)

  public init() {
    self = .cash
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .cash
    case 1: self = .check
    case 2: self = .debit
    case 3: self = .credit
    case 4: self = .digital
    case 5: self = .ach
    case 6: self = .wire
    case 7: self = .blockchain
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .cash: return 0
    case .check: return 1
    case .debit: return 2
    case .credit: return 3
    case .digital: return 4
    case .ach: return 5
    case .wire: return 6
    case .blockchain: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

/// Enumerates recognized payment methods.
public enum Opencannabis_Commerce_PaymentCardType: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// Payment card type is not applicable.
  case noCardType // = 0

  /// Visa.
  case visa // = 1

  /// Mastercard.
  case mastercard // = 2

  /// Discover.
  case discover // = 3

  /// American Express.
  case amex // = 4

  /// Diners' Club.
  case dinersClub // = 5

  /// Maestro.
  case maestro // = 6
  case UNRECOGNIZED(Int)

  public init() {
    self = .noCardType
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .noCardType
    case 1: self = .visa
    case 2: self = .mastercard
    case 3: self = .discover
    case 4: self = .amex
    case 5: self = .dinersClub
    case 6: self = .maestro
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .noCardType: return 0
    case .visa: return 1
    case .mastercard: return 2
    case .discover: return 3
    case .amex: return 4
    case .dinersClub: return 5
    case .maestro: return 6
    case .UNRECOGNIZED(let i): return i
    }
  }

}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Opencannabis_Commerce_PaymentMethod: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "CASH"),
    1: .same(proto: "CHECK"),
    2: .same(proto: "DEBIT"),
    3: .same(proto: "CREDIT"),
    4: .same(proto: "DIGITAL"),
    5: .same(proto: "ACH"),
    6: .same(proto: "WIRE"),
    7: .same(proto: "BLOCKCHAIN"),
  ]
}

extension Opencannabis_Commerce_PaymentCardType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NO_CARD_TYPE"),
    1: .same(proto: "VISA"),
    2: .same(proto: "MASTERCARD"),
    3: .same(proto: "DISCOVER"),
    4: .same(proto: "AMEX"),
    5: .same(proto: "DINERS_CLUB"),
    6: .same(proto: "MAESTRO"),
  ]
}
