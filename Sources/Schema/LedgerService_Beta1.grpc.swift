//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: ledger/v1beta1/LedgerService_Beta1.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Request, Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAsset" }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Request, Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/GetTransaction" }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistoryCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistoryCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Request, Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistoryCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAssetHistory" }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Request, Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAccountHoldings" }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistoryCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistoryCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Request, Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistoryCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAccountHistory" }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Request, Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/Create" }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Request, Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/Transfer" }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactCall: ClientCallServerStreaming {
  /// Do not call this directly, call `receive()` in the protocol extension below instead.
  func _receive(timeout: DispatchTime) throws -> Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction?
  /// Call this to wait for a result. Nonblocking.
  func receive(completion: @escaping (ResultOrRPCError<Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction?>) -> Void) throws
}

public extension Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactCall {
  /// Call this to wait for a result. Blocking.
  func receive(timeout: DispatchTime = .distantFuture) throws -> Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction? { return try self._receive(timeout: timeout) }
}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactCallBase: ClientCallServerStreamingBase<Bloombox_Schema_Ledger_Transaction, Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactCall {
  override class var method: String { return "/bloombox.schema.services.ledger.v1beta1.Ledger/Transact" }
}


/// Instantiate Bloombox_Schema_Services_Ledger_V1beta1_LedgerServiceClient, then call methods of this protocol to make API calls.
public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerService: ServiceClient {
  /// Synchronous. Unary.
  func getAsset(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Response
  /// Asynchronous. Unary.
  func getAsset(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetCall

  /// Synchronous. Unary.
  func getTransaction(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Response
  /// Asynchronous. Unary.
  func getTransaction(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionCall

  /// Synchronous. Unary.
  func getAssetHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Response
  /// Asynchronous. Unary.
  func getAssetHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistoryCall

  /// Synchronous. Unary.
  func getAccountHoldings(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Response
  /// Asynchronous. Unary.
  func getAccountHoldings(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsCall

  /// Synchronous. Unary.
  func getAccountHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Response
  /// Asynchronous. Unary.
  func getAccountHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistoryCall

  /// Synchronous. Unary.
  func create(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Response
  /// Asynchronous. Unary.
  func create(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateCall

  /// Synchronous. Unary.
  func transfer(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Response
  /// Asynchronous. Unary.
  func transfer(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferCall

  /// Asynchronous. Server-streaming.
  /// Send the initial message.
  /// Use methods on the returned object to get streamed responses.
  func transact(_ request: Bloombox_Schema_Ledger_Transaction, completion: ((CallResult) -> Void)?) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactCall

}

public final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerServiceClient: ServiceClientBase, Bloombox_Schema_Services_Ledger_V1beta1_LedgerService {
  /// Synchronous. Unary.
  public func getAsset(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Response {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func getAsset(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func getTransaction(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Response {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func getTransaction(_ request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func getAssetHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Response {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistoryCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func getAssetHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistoryCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistoryCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func getAccountHoldings(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Response {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func getAccountHoldings(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func getAccountHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Response {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistoryCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func getAccountHistory(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistoryCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistoryCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func create(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Response {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func create(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func transfer(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Request) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Response {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func transfer(_ request: Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Request, completion: @escaping (Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Asynchronous. Server-streaming.
  /// Send the initial message.
  /// Use methods on the returned object to get streamed responses.
  public func transact(_ request: Bloombox_Schema_Ledger_Transaction, completion: ((CallResult) -> Void)?) throws -> Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactCall {
    return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerProvider: ServiceProvider {
  func getAsset(request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Request, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetSession) throws -> Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Response
  func getTransaction(request: Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Request, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionSession) throws -> Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Response
  func getAssetHistory(request: Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Request, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistorySession) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Response
  func getAccountHoldings(request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Request, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsSession) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Response
  func getAccountHistory(request: Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Request, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistorySession) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Response
  func create(request: Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Request, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateSession) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Response
  func transfer(request: Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Request, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferSession) throws -> Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Response
  func transact(request: Bloombox_Schema_Ledger_Transaction, session: Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactSession) throws -> ServerStatus?
}

extension Bloombox_Schema_Services_Ledger_V1beta1_LedgerProvider {
  public var serviceName: String { return "bloombox.schema.services.ledger.v1beta1.Ledger" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  public func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAsset":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetSessionBase(
        handler: handler,
        providerBlock: { try self.getAsset(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetSessionBase) })
          .run()
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/GetTransaction":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionSessionBase(
        handler: handler,
        providerBlock: { try self.getTransaction(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionSessionBase) })
          .run()
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAssetHistory":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistorySessionBase(
        handler: handler,
        providerBlock: { try self.getAssetHistory(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistorySessionBase) })
          .run()
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAccountHoldings":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsSessionBase(
        handler: handler,
        providerBlock: { try self.getAccountHoldings(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsSessionBase) })
          .run()
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/GetAccountHistory":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistorySessionBase(
        handler: handler,
        providerBlock: { try self.getAccountHistory(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistorySessionBase) })
          .run()
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/Create":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateSessionBase(
        handler: handler,
        providerBlock: { try self.create(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateSessionBase) })
          .run()
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/Transfer":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferSessionBase(
        handler: handler,
        providerBlock: { try self.transfer(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferSessionBase) })
          .run()
    case "/bloombox.schema.services.ledger.v1beta1.Ledger/Transact":
      return try Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactSessionBase(
        handler: handler,
        providerBlock: { try self.transact(request: $0, session: $1 as! Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Request, Bloombox_Schema_Services_Ledger_V1beta1_RetrieveAsset.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetSession {}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Request, Bloombox_Schema_Services_Ledger_V1beta1_RetrieveTransaction.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetTransactionSession {}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistorySession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistorySessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Request, Bloombox_Schema_Services_Ledger_V1beta1_AssetHistory.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAssetHistorySession {}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Request, Bloombox_Schema_Services_Ledger_V1beta1_AccountHoldings.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHoldingsSession {}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistorySession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistorySessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Request, Bloombox_Schema_Services_Ledger_V1beta1_AccountHistory.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerGetAccountHistorySession {}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Request, Bloombox_Schema_Services_Ledger_V1beta1_AssetCreate.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerCreateSession {}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Request, Bloombox_Schema_Services_Ledger_V1beta1_AssetTransfer.Response>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransferSession {}

public protocol Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactSession: ServerSessionServerStreaming {
  /// Send a message to the stream. Nonblocking.
  func send(_ message: Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction, completion: @escaping (Error?) -> Void) throws
  /// Do not call this directly, call `send()` in the protocol extension below instead.
  func _send(_ message: Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction, timeout: DispatchTime) throws

  /// Close the connection and send the status. Non-blocking.
  /// This method should be called if and only if your request handler returns a nil value instead of a server status;
  /// otherwise SwiftGRPC will take care of sending the status for you.
  func close(withStatus status: ServerStatus, completion: (() -> Void)?) throws
}

public extension Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactSession {
  /// Send a message to the stream and wait for the send operation to finish. Blocking.
  func send(_ message: Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction, timeout: DispatchTime = .distantFuture) throws { try self._send(message, timeout: timeout) }
}

fileprivate final class Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactSessionBase: ServerSessionServerStreamingBase<Bloombox_Schema_Ledger_Transaction, Bloombox_Schema_Services_Ledger_V1beta1_InflightTransaction>, Bloombox_Schema_Services_Ledger_V1beta1_LedgerTransactSession {}

