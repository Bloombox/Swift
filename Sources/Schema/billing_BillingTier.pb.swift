// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: billing/BillingTier.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

///*
/// Defines the notion of a "billing tier," on which a given partner organization, or partner location, can be set. It's
/// all or nothing with a billing tier - certain features are enabled or disabled, beyond the normal licensing limits.

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Enumerates different billing tiers at which a given partner, or partner location, can be enrolled. The billing tier
/// can be changed by the user to adjust the amount of functionality they pay for and have access to. The default tier is
/// the `FREE` tier, which all accounts start out on, until they are either upgraded by the user directly, or by Bloombox
/// staff on the backend.
public enum Bloombox_Billing_BillingTier: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// The billing account is enrolled at the basic tier, with access to the *Dashboard* (catalog manager and retail tools
  /// only), and access to the standard data tools. Other limitations, like stricter API quotas, may apply at the
  /// standard tier, but a user can enroll and activate a standard-tier account with no intervention from Bloombox staff.
  case standard // = 0

  /// The 'premium' account tier gains 8x5 phone support, access to TV menu interfaces via the web, and access to
  /// hardware solutions like tablet menus, check-in stations, and so on. Premium account service is required for all
  /// multi-location customers.
  case premium // = 1

  /// The 'enterprise' account tier gains 24/7 phone support and SLA, access to products like on-site networks, advanced
  /// analytics and reporting services, an SLA, and custom integration services. Enterprise accounts are essentially
  /// un-restricted when it comes to software licensing.
  case enterprise // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .standard
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .standard
    case 1: self = .premium
    case 2: self = .enterprise
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .standard: return 0
    case .premium: return 1
    case .enterprise: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

#if swift(>=4.2)

extension Bloombox_Billing_BillingTier: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Bloombox_Billing_BillingTier] = [
    .standard,
    .premium,
    .enterprise,
  ]
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Bloombox_Billing_BillingTier: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "STANDARD"),
    1: .same(proto: "PREMIUM"),
    2: .same(proto: "ENTERPRISE"),
  ]
}
