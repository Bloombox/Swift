//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: media/v1beta1/MediaService_Beta1.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaListCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaListCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Media_V1beta1_ListMedia.Request, Bloombox_Schema_Services_Media_V1beta1_ListMedia.Response>, Bloombox_Schema_Services_Media_V1beta1_MediaListCall {
  override class var method: String { return "/bloombox.schema.services.media.v1beta1.Media/List" }
}

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Media_V1beta1_GetMedia.Request, Bloombox_Schema_Services_Media_V1beta1_GetMedia.Response>, Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveCall {
  override class var method: String { return "/bloombox.schema.services.media.v1beta1.Media/Retrieve" }
}

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaUploadCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaUploadCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Request, Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Response>, Bloombox_Schema_Services_Media_V1beta1_MediaUploadCall {
  override class var method: String { return "/bloombox.schema.services.media.v1beta1.Media/Upload" }
}

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaAttachCall: ClientCallUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaAttachCallBase: ClientCallUnaryBase<Bloombox_Schema_Services_Media_V1beta1_AttachMedia.Request, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Schema_Services_Media_V1beta1_MediaAttachCall {
  override class var method: String { return "/bloombox.schema.services.media.v1beta1.Media/Attach" }
}


/// Instantiate Bloombox_Schema_Services_Media_V1beta1_MediaServiceClient, then call methods of this protocol to make API calls.
public protocol Bloombox_Schema_Services_Media_V1beta1_MediaService: ServiceClient {
  /// Synchronous. Unary.
  func list(_ request: Bloombox_Schema_Services_Media_V1beta1_ListMedia.Request) throws -> Bloombox_Schema_Services_Media_V1beta1_ListMedia.Response
  /// Asynchronous. Unary.
  func list(_ request: Bloombox_Schema_Services_Media_V1beta1_ListMedia.Request, completion: @escaping (Bloombox_Schema_Services_Media_V1beta1_ListMedia.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaListCall

  /// Synchronous. Unary.
  func retrieve(_ request: Bloombox_Schema_Services_Media_V1beta1_GetMedia.Request) throws -> Bloombox_Schema_Services_Media_V1beta1_GetMedia.Response
  /// Asynchronous. Unary.
  func retrieve(_ request: Bloombox_Schema_Services_Media_V1beta1_GetMedia.Request, completion: @escaping (Bloombox_Schema_Services_Media_V1beta1_GetMedia.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveCall

  /// Synchronous. Unary.
  func upload(_ request: Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Request) throws -> Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Response
  /// Asynchronous. Unary.
  func upload(_ request: Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Request, completion: @escaping (Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaUploadCall

  /// Synchronous. Unary.
  func attach(_ request: Bloombox_Schema_Services_Media_V1beta1_AttachMedia.Request) throws -> SwiftProtobuf.Google_Protobuf_Empty
  /// Asynchronous. Unary.
  func attach(_ request: Bloombox_Schema_Services_Media_V1beta1_AttachMedia.Request, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaAttachCall

}

public final class Bloombox_Schema_Services_Media_V1beta1_MediaServiceClient: ServiceClientBase, Bloombox_Schema_Services_Media_V1beta1_MediaService {
  /// Synchronous. Unary.
  public func list(_ request: Bloombox_Schema_Services_Media_V1beta1_ListMedia.Request) throws -> Bloombox_Schema_Services_Media_V1beta1_ListMedia.Response {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaListCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func list(_ request: Bloombox_Schema_Services_Media_V1beta1_ListMedia.Request, completion: @escaping (Bloombox_Schema_Services_Media_V1beta1_ListMedia.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaListCall {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaListCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func retrieve(_ request: Bloombox_Schema_Services_Media_V1beta1_GetMedia.Request) throws -> Bloombox_Schema_Services_Media_V1beta1_GetMedia.Response {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func retrieve(_ request: Bloombox_Schema_Services_Media_V1beta1_GetMedia.Request, completion: @escaping (Bloombox_Schema_Services_Media_V1beta1_GetMedia.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveCall {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func upload(_ request: Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Request) throws -> Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Response {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaUploadCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func upload(_ request: Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Request, completion: @escaping (Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Response?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaUploadCall {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaUploadCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  public func attach(_ request: Bloombox_Schema_Services_Media_V1beta1_AttachMedia.Request) throws -> SwiftProtobuf.Google_Protobuf_Empty {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaAttachCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  public func attach(_ request: Bloombox_Schema_Services_Media_V1beta1_AttachMedia.Request, completion: @escaping (SwiftProtobuf.Google_Protobuf_Empty?, CallResult) -> Void) throws -> Bloombox_Schema_Services_Media_V1beta1_MediaAttachCall {
    return try Bloombox_Schema_Services_Media_V1beta1_MediaAttachCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
public protocol Bloombox_Schema_Services_Media_V1beta1_MediaProvider: ServiceProvider {
  func list(request: Bloombox_Schema_Services_Media_V1beta1_ListMedia.Request, session: Bloombox_Schema_Services_Media_V1beta1_MediaListSession) throws -> Bloombox_Schema_Services_Media_V1beta1_ListMedia.Response
  func retrieve(request: Bloombox_Schema_Services_Media_V1beta1_GetMedia.Request, session: Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveSession) throws -> Bloombox_Schema_Services_Media_V1beta1_GetMedia.Response
  func upload(request: Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Request, session: Bloombox_Schema_Services_Media_V1beta1_MediaUploadSession) throws -> Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Response
  func attach(request: Bloombox_Schema_Services_Media_V1beta1_AttachMedia.Request, session: Bloombox_Schema_Services_Media_V1beta1_MediaAttachSession) throws -> SwiftProtobuf.Google_Protobuf_Empty
}

extension Bloombox_Schema_Services_Media_V1beta1_MediaProvider {
  public var serviceName: String { return "bloombox.schema.services.media.v1beta1.Media" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  public func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/bloombox.schema.services.media.v1beta1.Media/List":
      return try Bloombox_Schema_Services_Media_V1beta1_MediaListSessionBase(
        handler: handler,
        providerBlock: { try self.list(request: $0, session: $1 as! Bloombox_Schema_Services_Media_V1beta1_MediaListSessionBase) })
          .run()
    case "/bloombox.schema.services.media.v1beta1.Media/Retrieve":
      return try Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveSessionBase(
        handler: handler,
        providerBlock: { try self.retrieve(request: $0, session: $1 as! Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveSessionBase) })
          .run()
    case "/bloombox.schema.services.media.v1beta1.Media/Upload":
      return try Bloombox_Schema_Services_Media_V1beta1_MediaUploadSessionBase(
        handler: handler,
        providerBlock: { try self.upload(request: $0, session: $1 as! Bloombox_Schema_Services_Media_V1beta1_MediaUploadSessionBase) })
          .run()
    case "/bloombox.schema.services.media.v1beta1.Media/Attach":
      return try Bloombox_Schema_Services_Media_V1beta1_MediaAttachSessionBase(
        handler: handler,
        providerBlock: { try self.attach(request: $0, session: $1 as! Bloombox_Schema_Services_Media_V1beta1_MediaAttachSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaListSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaListSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Media_V1beta1_ListMedia.Request, Bloombox_Schema_Services_Media_V1beta1_ListMedia.Response>, Bloombox_Schema_Services_Media_V1beta1_MediaListSession {}

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Media_V1beta1_GetMedia.Request, Bloombox_Schema_Services_Media_V1beta1_GetMedia.Response>, Bloombox_Schema_Services_Media_V1beta1_MediaRetrieveSession {}

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaUploadSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaUploadSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Request, Bloombox_Schema_Services_Media_V1beta1_UploadMedia.Response>, Bloombox_Schema_Services_Media_V1beta1_MediaUploadSession {}

public protocol Bloombox_Schema_Services_Media_V1beta1_MediaAttachSession: ServerSessionUnary {}

fileprivate final class Bloombox_Schema_Services_Media_V1beta1_MediaAttachSessionBase: ServerSessionUnaryBase<Bloombox_Schema_Services_Media_V1beta1_AttachMedia.Request, SwiftProtobuf.Google_Protobuf_Empty>, Bloombox_Schema_Services_Media_V1beta1_MediaAttachSession {}

