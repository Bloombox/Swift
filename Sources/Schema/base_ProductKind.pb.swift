// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: base/ProductKind.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Enumerates types of products known to the spec.
public enum Base_ProductKind: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// Traditional buds or 'flower'-based products, essentially sold in bags or jars.
  case flowers // = 0

  /// Manufactured products that are edible, like drinks, snacks, candy, and food.
  case edibles // = 1

  /// Manufactured products that are concentrated from flowers in some manner, such as wax or oil.
  case extracts // = 2

  /// Pre-rolled items, generally made from flowers, like a cigarette - this would cover joints, etc.
  case prerolls // = 3

  /// Tinctures, topicals, capsules, and other forms of manufactured cannabis.
  case apothecary // = 4

  /// Vaporizor cartridges, batteries, and kits.
  case cartridges // = 5

  /// Plants sold direct, in various forms such as pre-grown (clones) or raw seeds.
  case plants // = 6

  /// Merchandise, usually branded in-house. Also covers glassware and miscellaneous items.
  case merchandise // = 7
  case UNRECOGNIZED(Int)

  public init() {
    self = .flowers
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .flowers
    case 1: self = .edibles
    case 2: self = .extracts
    case 3: self = .prerolls
    case 4: self = .apothecary
    case 5: self = .cartridges
    case 6: self = .plants
    case 7: self = .merchandise
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .flowers: return 0
    case .edibles: return 1
    case .extracts: return 2
    case .prerolls: return 3
    case .apothecary: return 4
    case .cartridges: return 5
    case .plants: return 6
    case .merchandise: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Base_ProductKind: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "FLOWERS"),
    1: .same(proto: "EDIBLES"),
    2: .same(proto: "EXTRACTS"),
    3: .same(proto: "PREROLLS"),
    4: .same(proto: "APOTHECARY"),
    5: .same(proto: "CARTRIDGES"),
    6: .same(proto: "PLANTS"),
    7: .same(proto: "MERCHANDISE"),
  ]
}
