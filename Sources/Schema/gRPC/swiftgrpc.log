File google/protobuf/descriptor.proto
File bq_field.proto
File bq_table.proto
File temporal/Date.proto
File geo/USState.proto
File identity/ids/USDL.proto
File identity/ids/Passport.proto
File identity/ID.proto
File media/MediaOrientation.proto
File identity/IDMedia.proto
File media/MediaKey.proto
File media/MediaType.proto
File media/MediaItem.proto
File google/protobuf/timestamp.proto
File temporal/Instant.proto
File geo/Point.proto
File geo/Address.proto
File content/Name.proto
File geo/Location.proto
File contact/PhoneNumber.proto
File contact/EmailAddress.proto
File contact/Website.proto
File contact/ContactInfo.proto
File person/PersonName.proto
File person/Person.proto
File identity/ids/UserDoctorRec.proto
File products/menu/Section.proto
File structs/Grow.proto
File structs/Species.proto
File base/Language.proto
File base/Compression.proto
File content/Content.proto
File structs/labtesting/TestValue.proto
File structs/labtesting/TestResults.proto
File security/access/PartnerPermissions.proto
File identity/User.proto
File identity/pass/PassKey.proto
File identity/pass/Pass.proto
File partner/Partner.proto
File device/Device.proto
File partner/PartnerLocation.proto
File partner/PartnerDevice.proto
File partner/PartnerScope.proto
File security/AuthToken.proto
File security/DeviceToken.proto
File security/IdentityToken.proto
File services/ServiceStatus.proto
File google/api/http.proto
File google/api/annotations.proto
File pos/v1beta1/POSService.proto
Service PointOfSale
 Method Ping
  input .services.pos.v1beta1.Ping.Request
  output .services.pos.v1beta1.Ping.Response
  client_streaming false
  server_streaming false
File base/ProductKind.proto
File base/ProductType.proto
File base/ProductKey.proto
File commerce/Item.proto
File commerce/Delivery.proto
File commerce/Customer.proto
File commerce/Order.proto
File shop/v1/ShopService_v1.proto
Service Shop
 Method Ping
  input .services.shop.v1.Ping.Request
  output .services.shop.v1.Ping.Response
  client_streaming false
  server_streaming false
 Method ShopInfo
  input .services.shop.v1.ShopInfo.Request
  output .services.shop.v1.ShopInfo.Response
  client_streaming false
  server_streaming false
 Method EnrollMember
  input .services.shop.v1.EnrollMember.Request
  output .services.shop.v1.EnrollMember.Response
  client_streaming false
  server_streaming false
 Method CheckZipcode
  input .services.shop.v1.CheckZipcode.Request
  output .services.shop.v1.CheckZipcode.Response
  client_streaming false
  server_streaming false
 Method VerifyMember
  input .services.shop.v1.VerifyMember.Request
  output .services.shop.v1.VerifyMember.Response
  client_streaming false
  server_streaming false
 Method SubmitOrder
  input .services.shop.v1.SubmitOrder.Request
  output .services.shop.v1.SubmitOrder.Response
  client_streaming false
  server_streaming false
 Method GetOrder
  input .services.shop.v1.GetOrder.Request
  output .services.shop.v1.GetOrder.Response
  client_streaming false
  server_streaming false
File structs/Version.proto
File analytics/Scope.proto
File analytics/context/OS.proto
File analytics/context/Library.proto
File analytics/context/Application.proto
File proximity/BluetoothBeacon.proto
File analytics/context/NativeDevice.proto
File analytics/context/Browser.proto
File analytics/context/Collection.proto
File analytics/Context.proto
File google/protobuf/struct.proto
File analytics/generic/Event.proto
File analytics/generic/Exception.proto
File telemetry/v1beta2/generic/GenericEvents_Beta2.proto
File analytics/identity/UserAnalytics.proto
File telemetry/v1beta2/identity/UserEvents_Beta2.proto
File analytics/commerce/ShopAnalytics.proto
File telemetry/v1beta2/commerce/ShopEvents_Beta2.proto
File analytics/commerce/OrderAnalytics.proto
File telemetry/v1beta2/commerce/OrderEvents_Beta2.proto
File analytics/commerce/SectionAnalytics.proto
File telemetry/v1beta2/commerce/SectionEvents_Beta2.proto
File analytics/commerce/ProductAnalytics.proto
File telemetry/v1beta2/commerce/ProductEvents_Beta2.proto
File google/protobuf/empty.proto
File telemetry/v1beta2/TelemetryService_Beta2.proto
Service EventTelemetry
 Method Ping
  input .services.telemetry.v1beta2.TelemetryPing.Request
  output .services.telemetry.v1beta2.TelemetryPing.Response
  client_streaming false
  server_streaming false
 Method Event
  input .services.telemetry.v1beta2.Event.Request
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
 Method Batch
  input .services.telemetry.v1beta2.Event.BatchRequest
  output .services.telemetry.v1beta2.TelemetryResponse
  client_streaming false
  server_streaming false
 Method Error
  input .services.telemetry.v1beta2.Exception
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
Service CommercialTelemetry
 Method Impression
  input .services.telemetry.v1beta2.CommercialEvent.Impression
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
 Method View
  input .services.telemetry.v1beta2.CommercialEvent.View
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
 Method Action
  input .services.telemetry.v1beta2.CommercialEvent.Action
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
Service IdentityTelemetry
 Method Action
  input .services.telemetry.v1beta2.IdentityEvent.Action
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
File telemetry/v1beta2/TelemetryEvent_Beta2.proto
File telemetry/v1beta3/GenericEvents_Beta3.proto
File telemetry/v1beta3/TelemetryService_Beta3.proto
Service EventTelemetry
 Method Ping
  input .services.telemetry.v1beta3.TelemetryPing.Request
  output .services.telemetry.v1beta3.TelemetryPing.Response
  client_streaming false
  server_streaming false
 Method Event
  input .services.telemetry.v1beta3.Event.Request
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
 Method Batch
  input .services.telemetry.v1beta3.Event.BatchRequest
  output .services.telemetry.v1beta3.TelemetryResponse
  client_streaming false
  server_streaming false
 Method Error
  input .services.telemetry.v1beta3.Exception
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
Service CommercialTelemetry
 Method Impression
  input .services.telemetry.v1beta3.CommercialEvent.Impression
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
 Method View
  input .services.telemetry.v1beta3.CommercialEvent.View
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
 Method Action
  input .services.telemetry.v1beta3.CommercialEvent.Action
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
Service IdentityTelemetry
 Method Action
  input .services.telemetry.v1beta3.IdentityEvent.Action
  output .google.protobuf.Empty
  client_streaming false
  server_streaming false
File telemetry/v1beta3/TelemetryEvent_Beta3.proto
File accounting/Discounts.proto
File accounting/Taxes.proto
File commerce/pos/Purchase.proto
File content/Brand.proto
File structs/Shelf.proto
File structs/Genetics.proto
File products/distribution/DistributionChannel.proto
File content/MaterialsData.proto
File structs/ProductFlags.proto
File structs/pricing/SaleDescriptor.proto
File structs/pricing/PricingDescriptor.proto
File content/ProductContent.proto
File oauth/AuthorizationScope.proto
File oauth/Client.proto
File products/Apothecary.proto
File products/Cartridge.proto
File products/Edible.proto
File products/Extract.proto
File products/Flower.proto
File products/Merchandise.proto
File products/Plant.proto
File products/Preroll.proto
File products/menu/Menu.proto
File structs/labtesting/BasicTestResults.proto
File temporal/Time.proto
PluginLibrary.Google_Protobuf_Compiler_CodeGeneratorRequest:
file_to_generate: "bq_field.proto"
file_to_generate: "bq_table.proto"
file_to_generate: "identity/ID.proto"
file_to_generate: "identity/IDMedia.proto"
file_to_generate: "identity/User.proto"
file_to_generate: "identity/ids/Passport.proto"
file_to_generate: "identity/ids/USDL.proto"
file_to_generate: "identity/ids/UserDoctorRec.proto"
file_to_generate: "identity/pass/Pass.proto"
file_to_generate: "identity/pass/PassKey.proto"
file_to_generate: "partner/Partner.proto"
file_to_generate: "partner/PartnerDevice.proto"
file_to_generate: "partner/PartnerLocation.proto"
file_to_generate: "partner/PartnerScope.proto"
file_to_generate: "security/AuthToken.proto"
file_to_generate: "security/DeviceToken.proto"
file_to_generate: "security/IdentityToken.proto"
file_to_generate: "security/access/PartnerPermissions.proto"
file_to_generate: "services/ServiceStatus.proto"
file_to_generate: "pos/v1beta1/POSService.proto"
file_to_generate: "shop/v1/ShopService_v1.proto"
file_to_generate: "telemetry/v1beta2/TelemetryEvent_Beta2.proto"
file_to_generate: "telemetry/v1beta2/TelemetryService_Beta2.proto"
file_to_generate: "telemetry/v1beta2/commerce/OrderEvents_Beta2.proto"
file_to_generate: "telemetry/v1beta2/commerce/ProductEvents_Beta2.proto"
file_to_generate: "telemetry/v1beta2/commerce/SectionEvents_Beta2.proto"
file_to_generate: "telemetry/v1beta2/commerce/ShopEvents_Beta2.proto"
file_to_generate: "telemetry/v1beta2/generic/GenericEvents_Beta2.proto"
file_to_generate: "telemetry/v1beta2/identity/UserEvents_Beta2.proto"
file_to_generate: "telemetry/v1beta3/GenericEvents_Beta3.proto"
file_to_generate: "telemetry/v1beta3/TelemetryEvent_Beta3.proto"
file_to_generate: "telemetry/v1beta3/TelemetryService_Beta3.proto"
file_to_generate: "accounting/Discounts.proto"
file_to_generate: "accounting/Taxes.proto"
file_to_generate: "analytics/Context.proto"
file_to_generate: "analytics/Scope.proto"
file_to_generate: "analytics/commerce/OrderAnalytics.proto"
file_to_generate: "analytics/commerce/ProductAnalytics.proto"
file_to_generate: "analytics/commerce/SectionAnalytics.proto"
file_to_generate: "analytics/commerce/ShopAnalytics.proto"
file_to_generate: "analytics/context/Application.proto"
file_to_generate: "analytics/context/Browser.proto"
file_to_generate: "analytics/context/Collection.proto"
file_to_generate: "analytics/context/Library.proto"
file_to_generate: "analytics/context/NativeDevice.proto"
file_to_generate: "analytics/context/OS.proto"
file_to_generate: "analytics/generic/Event.proto"
file_to_generate: "analytics/generic/Exception.proto"
file_to_generate: "analytics/identity/UserAnalytics.proto"
file_to_generate: "base/Compression.proto"
file_to_generate: "base/Language.proto"
file_to_generate: "base/ProductKey.proto"
file_to_generate: "base/ProductKind.proto"
file_to_generate: "base/ProductType.proto"
file_to_generate: "commerce/Customer.proto"
file_to_generate: "commerce/Delivery.proto"
file_to_generate: "commerce/Item.proto"
file_to_generate: "commerce/Order.proto"
file_to_generate: "commerce/pos/Purchase.proto"
file_to_generate: "contact/ContactInfo.proto"
file_to_generate: "contact/EmailAddress.proto"
file_to_generate: "contact/PhoneNumber.proto"
file_to_generate: "contact/Website.proto"
file_to_generate: "content/Brand.proto"
file_to_generate: "content/Content.proto"
file_to_generate: "content/MaterialsData.proto"
file_to_generate: "content/Name.proto"
file_to_generate: "content/ProductContent.proto"
file_to_generate: "device/Device.proto"
file_to_generate: "geo/Address.proto"
file_to_generate: "geo/Location.proto"
file_to_generate: "geo/Point.proto"
file_to_generate: "geo/USState.proto"
file_to_generate: "media/MediaItem.proto"
file_to_generate: "media/MediaKey.proto"
file_to_generate: "media/MediaOrientation.proto"
file_to_generate: "media/MediaType.proto"
file_to_generate: "oauth/AuthorizationScope.proto"
file_to_generate: "oauth/Client.proto"
file_to_generate: "person/Person.proto"
file_to_generate: "person/PersonName.proto"
file_to_generate: "products/Apothecary.proto"
file_to_generate: "products/Cartridge.proto"
file_to_generate: "products/Edible.proto"
file_to_generate: "products/Extract.proto"
file_to_generate: "products/Flower.proto"
file_to_generate: "products/Merchandise.proto"
file_to_generate: "products/Plant.proto"
file_to_generate: "products/Preroll.proto"
file_to_generate: "products/distribution/DistributionChannel.proto"
file_to_generate: "products/menu/Menu.proto"
file_to_generate: "products/menu/Section.proto"
file_to_generate: "proximity/BluetoothBeacon.proto"
file_to_generate: "structs/Genetics.proto"
file_to_generate: "structs/Grow.proto"
file_to_generate: "structs/ProductFlags.proto"
file_to_generate: "structs/Shelf.proto"
file_to_generate: "structs/Species.proto"
file_to_generate: "structs/Version.proto"
file_to_generate: "structs/labtesting/BasicTestResults.proto"
file_to_generate: "structs/labtesting/TestResults.proto"
file_to_generate: "structs/labtesting/TestValue.proto"
file_to_generate: "structs/pricing/PricingDescriptor.proto"
file_to_generate: "structs/pricing/SaleDescriptor.proto"
file_to_generate: "temporal/Date.proto"
file_to_generate: "temporal/Instant.proto"
file_to_generate: "temporal/Time.proto"
compiler_version {
  major: 3
  minor: 4
  patch: 0
  suffix: ""
}
proto_file {
  name: "google/protobuf/descriptor.proto"
  package: "google.protobuf"
  message_type {
    name: "FileDescriptorSet"
    field {
      name: "file"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FileDescriptorProto"
      json_name: "file"
    }
  }
  message_type {
    name: "FileDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "package"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "package"
    }
    field {
      name: "dependency"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "dependency"
    }
    field {
      name: "public_dependency"
      number: 10
      label: LABEL_REPEATED
      type: TYPE_INT32
      json_name: "publicDependency"
    }
    field {
      name: "weak_dependency"
      number: 11
      label: LABEL_REPEATED
      type: TYPE_INT32
      json_name: "weakDependency"
    }
    field {
      name: "message_type"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto"
      json_name: "messageType"
    }
    field {
      name: "enum_type"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto"
      json_name: "enumType"
    }
    field {
      name: "service"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.ServiceDescriptorProto"
      json_name: "service"
    }
    field {
      name: "extension"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "extension"
    }
    field {
      name: "options"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FileOptions"
      json_name: "options"
    }
    field {
      name: "source_code_info"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.SourceCodeInfo"
      json_name: "sourceCodeInfo"
    }
    field {
      name: "syntax"
      number: 12
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "syntax"
    }
  }
  message_type {
    name: "DescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "field"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "field"
    }
    field {
      name: "extension"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldDescriptorProto"
      json_name: "extension"
    }
    field {
      name: "nested_type"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto"
      json_name: "nestedType"
    }
    field {
      name: "enum_type"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumDescriptorProto"
      json_name: "enumType"
    }
    field {
      name: "extension_range"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto.ExtensionRange"
      json_name: "extensionRange"
    }
    field {
      name: "oneof_decl"
      number: 8
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.OneofDescriptorProto"
      json_name: "oneofDecl"
    }
    field {
      name: "options"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MessageOptions"
      json_name: "options"
    }
    field {
      name: "reserved_range"
      number: 9
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.DescriptorProto.ReservedRange"
      json_name: "reservedRange"
    }
    field {
      name: "reserved_name"
      number: 10
      label: LABEL_REPEATED
      type: TYPE_STRING
      json_name: "reservedName"
    }
    nested_type {
      name: "ExtensionRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
      field {
        name: "options"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".google.protobuf.ExtensionRangeOptions"
        json_name: "options"
      }
    }
    nested_type {
      name: "ReservedRange"
      field {
        name: "start"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "start"
      }
      field {
        name: "end"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  message_type {
    name: "ExtensionRangeOptions"
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "FieldDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "number"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "number"
    }
    field {
      name: "label"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldDescriptorProto.Label"
      json_name: "label"
    }
    field {
      name: "type"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldDescriptorProto.Type"
      json_name: "type"
    }
    field {
      name: "type_name"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "typeName"
    }
    field {
      name: "extendee"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "extendee"
    }
    field {
      name: "default_value"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "defaultValue"
    }
    field {
      name: "oneof_index"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "oneofIndex"
    }
    field {
      name: "json_name"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "jsonName"
    }
    field {
      name: "options"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.FieldOptions"
      json_name: "options"
    }
    enum_type {
      name: "Type"
      value {
        name: "TYPE_DOUBLE"
        number: 1
      }
      value {
        name: "TYPE_FLOAT"
        number: 2
      }
      value {
        name: "TYPE_INT64"
        number: 3
      }
      value {
        name: "TYPE_UINT64"
        number: 4
      }
      value {
        name: "TYPE_INT32"
        number: 5
      }
      value {
        name: "TYPE_FIXED64"
        number: 6
      }
      value {
        name: "TYPE_FIXED32"
        number: 7
      }
      value {
        name: "TYPE_BOOL"
        number: 8
      }
      value {
        name: "TYPE_STRING"
        number: 9
      }
      value {
        name: "TYPE_GROUP"
        number: 10
      }
      value {
        name: "TYPE_MESSAGE"
        number: 11
      }
      value {
        name: "TYPE_BYTES"
        number: 12
      }
      value {
        name: "TYPE_UINT32"
        number: 13
      }
      value {
        name: "TYPE_ENUM"
        number: 14
      }
      value {
        name: "TYPE_SFIXED32"
        number: 15
      }
      value {
        name: "TYPE_SFIXED64"
        number: 16
      }
      value {
        name: "TYPE_SINT32"
        number: 17
      }
      value {
        name: "TYPE_SINT64"
        number: 18
      }
    }
    enum_type {
      name: "Label"
      value {
        name: "LABEL_OPTIONAL"
        number: 1
      }
      value {
        name: "LABEL_REQUIRED"
        number: 2
      }
      value {
        name: "LABEL_REPEATED"
        number: 3
      }
    }
  }
  message_type {
    name: "OneofDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "options"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.OneofOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "EnumDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumValueDescriptorProto"
      json_name: "value"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "EnumValueDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "number"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "number"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.EnumValueOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "ServiceDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "method"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MethodDescriptorProto"
      json_name: "method"
    }
    field {
      name: "options"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.ServiceOptions"
      json_name: "options"
    }
  }
  message_type {
    name: "MethodDescriptorProto"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "input_type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "inputType"
    }
    field {
      name: "output_type"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "outputType"
    }
    field {
      name: "options"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.MethodOptions"
      json_name: "options"
    }
    field {
      name: "client_streaming"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "clientStreaming"
    }
    field {
      name: "server_streaming"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "serverStreaming"
    }
  }
  message_type {
    name: "FileOptions"
    field {
      name: "java_package"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "javaPackage"
    }
    field {
      name: "java_outer_classname"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "javaOuterClassname"
    }
    field {
      name: "java_multiple_files"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaMultipleFiles"
    }
    field {
      name: "java_generate_equals_and_hash"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        deprecated: true
      }
      json_name: "javaGenerateEqualsAndHash"
    }
    field {
      name: "java_string_check_utf8"
      number: 27
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaStringCheckUtf8"
    }
    field {
      name: "optimize_for"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FileOptions.OptimizeMode"
      default_value: "SPEED"
      json_name: "optimizeFor"
    }
    field {
      name: "go_package"
      number: 11
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "goPackage"
    }
    field {
      name: "cc_generic_services"
      number: 16
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "ccGenericServices"
    }
    field {
      name: "java_generic_services"
      number: 17
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "javaGenericServices"
    }
    field {
      name: "py_generic_services"
      number: 18
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "pyGenericServices"
    }
    field {
      name: "php_generic_services"
      number: 19
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "phpGenericServices"
    }
    field {
      name: "deprecated"
      number: 23
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "cc_enable_arenas"
      number: 31
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "ccEnableArenas"
    }
    field {
      name: "objc_class_prefix"
      number: 36
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "objcClassPrefix"
    }
    field {
      name: "csharp_namespace"
      number: 37
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "csharpNamespace"
    }
    field {
      name: "swift_prefix"
      number: 39
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "swiftPrefix"
    }
    field {
      name: "php_class_prefix"
      number: 40
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpClassPrefix"
    }
    field {
      name: "php_namespace"
      number: 41
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "phpNamespace"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "OptimizeMode"
      value {
        name: "SPEED"
        number: 1
      }
      value {
        name: "CODE_SIZE"
        number: 2
      }
      value {
        name: "LITE_RUNTIME"
        number: 3
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 38
      end: 39
    }
  }
  message_type {
    name: "MessageOptions"
    field {
      name: "message_set_wire_format"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "messageSetWireFormat"
    }
    field {
      name: "no_standard_descriptor_accessor"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "noStandardDescriptorAccessor"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "map_entry"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "mapEntry"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 8
      end: 9
    }
    reserved_range {
      start: 9
      end: 10
    }
  }
  message_type {
    name: "FieldOptions"
    field {
      name: "ctype"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.CType"
      default_value: "STRING"
      json_name: "ctype"
    }
    field {
      name: "packed"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "packed"
    }
    field {
      name: "jstype"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.FieldOptions.JSType"
      default_value: "JS_NORMAL"
      json_name: "jstype"
    }
    field {
      name: "lazy"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "lazy"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "weak"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "weak"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "CType"
      value {
        name: "STRING"
        number: 0
      }
      value {
        name: "CORD"
        number: 1
      }
      value {
        name: "STRING_PIECE"
        number: 2
      }
    }
    enum_type {
      name: "JSType"
      value {
        name: "JS_NORMAL"
        number: 0
      }
      value {
        name: "JS_STRING"
        number: 1
      }
      value {
        name: "JS_NUMBER"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 4
      end: 5
    }
  }
  message_type {
    name: "OneofOptions"
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "EnumOptions"
    field {
      name: "allow_alias"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "allowAlias"
    }
    field {
      name: "deprecated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
    reserved_range {
      start: 5
      end: 6
    }
  }
  message_type {
    name: "EnumValueOptions"
    field {
      name: "deprecated"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "ServiceOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "MethodOptions"
    field {
      name: "deprecated"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      default_value: "false"
      json_name: "deprecated"
    }
    field {
      name: "idempotency_level"
      number: 34
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.MethodOptions.IdempotencyLevel"
      default_value: "IDEMPOTENCY_UNKNOWN"
      json_name: "idempotencyLevel"
    }
    field {
      name: "uninterpreted_option"
      number: 999
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption"
      json_name: "uninterpretedOption"
    }
    enum_type {
      name: "IdempotencyLevel"
      value {
        name: "IDEMPOTENCY_UNKNOWN"
        number: 0
      }
      value {
        name: "NO_SIDE_EFFECTS"
        number: 1
      }
      value {
        name: "IDEMPOTENT"
        number: 2
      }
    }
    extension_range {
      start: 1000
      end: 536870912
    }
  }
  message_type {
    name: "UninterpretedOption"
    field {
      name: "name"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.UninterpretedOption.NamePart"
      json_name: "name"
    }
    field {
      name: "identifier_value"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "identifierValue"
    }
    field {
      name: "positive_int_value"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      json_name: "positiveIntValue"
    }
    field {
      name: "negative_int_value"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      json_name: "negativeIntValue"
    }
    field {
      name: "double_value"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "doubleValue"
    }
    field {
      name: "string_value"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "stringValue"
    }
    field {
      name: "aggregate_value"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "aggregateValue"
    }
    nested_type {
      name: "NamePart"
      field {
        name: "name_part"
        number: 1
        label: LABEL_REQUIRED
        type: TYPE_STRING
        json_name: "namePart"
      }
      field {
        name: "is_extension"
        number: 2
        label: LABEL_REQUIRED
        type: TYPE_BOOL
        json_name: "isExtension"
      }
    }
  }
  message_type {
    name: "SourceCodeInfo"
    field {
      name: "location"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.SourceCodeInfo.Location"
      json_name: "location"
    }
    nested_type {
      name: "Location"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "span"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "span"
      }
      field {
        name: "leading_comments"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "leadingComments"
      }
      field {
        name: "trailing_comments"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "trailingComments"
      }
      field {
        name: "leading_detached_comments"
        number: 6
        label: LABEL_REPEATED
        type: TYPE_STRING
        json_name: "leadingDetachedComments"
      }
    }
  }
  message_type {
    name: "GeneratedCodeInfo"
    field {
      name: "annotation"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.GeneratedCodeInfo.Annotation"
      json_name: "annotation"
    }
    nested_type {
      name: "Annotation"
      field {
        name: "path"
        number: 1
        label: LABEL_REPEATED
        type: TYPE_INT32
        options {
          packed: true
        }
        json_name: "path"
      }
      field {
        name: "source_file"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "sourceFile"
      }
      field {
        name: "begin"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "begin"
      }
      field {
        name: "end"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_INT32
        json_name: "end"
      }
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "DescriptorProtos"
    optimize_for: SPEED
    go_package: "github.com/golang/protobuf/protoc-gen-go/descriptor;descriptor"
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.Reflection"
  }
  source_code_info {
    location {
      span: [39, 0, 848, 1]
    }
    location {
      path: [12]
      span: [39, 0, 18]
      leading_detached_comments: " Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
      leading_detached_comments: " Author: kenton@google.com (Kenton Varda)\n  Based on original Protocol Buffers design by\n  Sanjay Ghemawat, Jeff Dean, and others.\n\n The messages in this file describe the definitions found in .proto files.\n A valid .proto file can be translated directly to a FileDescriptorProto\n without any other information (e.g. without reading its imports).\n"
    }
    location {
      path: [2]
      span: [41, 8, 23]
    }
    location {
      path: [8]
      span: [42, 0, 85]
    }
    location {
      path: [8, 999, 0]
      span: [42, 0, 85]
    }
    location {
      path: [8, 999, 0, 2]
      span: [42, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [42, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [42, 7, 17]
    }
    location {
      path: [8, 999, 0, 7]
      span: [42, 20, 84]
    }
    location {
      path: [8]
      span: [43, 0, 44]
    }
    location {
      path: [8, 999, 1]
      span: [43, 0, 44]
    }
    location {
      path: [8, 999, 1, 2]
      span: [43, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [43, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [43, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [43, 22, 43]
    }
    location {
      path: [8]
      span: [44, 0, 49]
    }
    location {
      path: [8, 999, 2]
      span: [44, 0, 49]
    }
    location {
      path: [8, 999, 2, 2]
      span: [44, 7, 27]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [44, 7, 27]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [44, 7, 27]
    }
    location {
      path: [8, 999, 2, 7]
      span: [44, 30, 48]
    }
    location {
      path: [8]
      span: [45, 0, 55]
    }
    location {
      path: [8, 999, 3]
      span: [45, 0, 55]
    }
    location {
      path: [8, 999, 3, 2]
      span: [45, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [45, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [45, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [45, 26, 54]
    }
    location {
      path: [8]
      span: [46, 0, 33]
    }
    location {
      path: [8, 999, 4]
      span: [46, 0, 33]
    }
    location {
      path: [8, 999, 4, 2]
      span: [46, 7, 24]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [46, 7, 24]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [46, 7, 24]
    }
    location {
      path: [8, 999, 4, 7]
      span: [46, 27, 32]
    }
    location {
      path: [8]
      span: [50, 0, 28]
    }
    location {
      path: [8, 999, 5]
      span: [50, 0, 28]
      leading_comments: " descriptor.proto must be optimized for speed because reflection-based\n algorithms don't work during bootstrapping.\n"
    }
    location {
      path: [8, 999, 5, 2]
      span: [50, 7, 19]
    }
    location {
      path: [8, 999, 5, 2, 0]
      span: [50, 7, 19]
    }
    location {
      path: [8, 999, 5, 2, 0, 1]
      span: [50, 7, 19]
    }
    location {
      path: [8, 999, 5, 3]
      span: [50, 22, 27]
    }
    location {
      path: [4, 0]
      span: [54, 0, 56, 1]
      leading_comments: " The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n"
    }
    location {
      path: [4, 0, 1]
      span: [54, 8, 25]
    }
    location {
      path: [4, 0, 2, 0]
      span: [55, 2, 40]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [55, 2, 10]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [55, 11, 30]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [55, 31, 35]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [55, 38, 39]
    }
    location {
      path: [4, 1]
      span: [59, 0, 88, 1]
      leading_comments: " Describes a complete .proto file.\n"
    }
    location {
      path: [4, 1, 1]
      span: [59, 8, 27]
    }
    location {
      path: [4, 1, 2, 0]
      span: [60, 2, 27]
      trailing_comments: " file name, relative to root of source tree\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [60, 2, 10]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [60, 11, 17]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [60, 18, 22]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [60, 25, 26]
    }
    location {
      path: [4, 1, 2, 1]
      span: [61, 2, 30]
      trailing_comments: " e.g. \"foo\", \"foo.bar\", etc.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [61, 2, 10]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [61, 11, 17]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [61, 18, 25]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [61, 28, 29]
    }
    location {
      path: [4, 1, 2, 2]
      span: [64, 2, 33]
      leading_comments: " Names of files imported by this file.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [64, 2, 10]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [64, 11, 17]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [64, 18, 28]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [64, 31, 32]
    }
    location {
      path: [4, 1, 2, 3]
      span: [66, 2, 40]
      leading_comments: " Indexes of the public imported files in the dependency list above.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [66, 2, 10]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [66, 11, 16]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [66, 17, 34]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [66, 37, 39]
    }
    location {
      path: [4, 1, 2, 4]
      span: [69, 2, 38]
      leading_comments: " Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [69, 2, 10]
    }
    location {
      path: [4, 1, 2, 4, 5]
      span: [69, 11, 16]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [69, 17, 32]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [69, 35, 37]
    }
    location {
      path: [4, 1, 2, 5]
      span: [72, 2, 44]
      leading_comments: " All top-level definitions in this file.\n"
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [72, 2, 10]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [72, 11, 26]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [72, 27, 39]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [72, 42, 43]
    }
    location {
      path: [4, 1, 2, 6]
      span: [73, 2, 45]
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [73, 2, 10]
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [73, 11, 30]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [73, 31, 40]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [73, 43, 44]
    }
    location {
      path: [4, 1, 2, 7]
      span: [74, 2, 46]
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [74, 2, 10]
    }
    location {
      path: [4, 1, 2, 7, 6]
      span: [74, 11, 33]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [74, 34, 41]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [74, 44, 45]
    }
    location {
      path: [4, 1, 2, 8]
      span: [75, 2, 46]
    }
    location {
      path: [4, 1, 2, 8, 4]
      span: [75, 2, 10]
    }
    location {
      path: [4, 1, 2, 8, 6]
      span: [75, 11, 31]
    }
    location {
      path: [4, 1, 2, 8, 1]
      span: [75, 32, 41]
    }
    location {
      path: [4, 1, 2, 8, 3]
      span: [75, 44, 45]
    }
    location {
      path: [4, 1, 2, 9]
      span: [77, 2, 35]
    }
    location {
      path: [4, 1, 2, 9, 4]
      span: [77, 2, 10]
    }
    location {
      path: [4, 1, 2, 9, 6]
      span: [77, 11, 22]
    }
    location {
      path: [4, 1, 2, 9, 1]
      span: [77, 23, 30]
    }
    location {
      path: [4, 1, 2, 9, 3]
      span: [77, 33, 34]
    }
    location {
      path: [4, 1, 2, 10]
      span: [83, 2, 47]
      leading_comments: " This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n"
    }
    location {
      path: [4, 1, 2, 10, 4]
      span: [83, 2, 10]
    }
    location {
      path: [4, 1, 2, 10, 6]
      span: [83, 11, 25]
    }
    location {
      path: [4, 1, 2, 10, 1]
      span: [83, 26, 42]
    }
    location {
      path: [4, 1, 2, 10, 3]
      span: [83, 45, 46]
    }
    location {
      path: [4, 1, 2, 11]
      span: [87, 2, 30]
      leading_comments: " The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n"
    }
    location {
      path: [4, 1, 2, 11, 4]
      span: [87, 2, 10]
    }
    location {
      path: [4, 1, 2, 11, 5]
      span: [87, 11, 17]
    }
    location {
      path: [4, 1, 2, 11, 1]
      span: [87, 18, 24]
    }
    location {
      path: [4, 1, 2, 11, 3]
      span: [87, 27, 29]
    }
    location {
      path: [4, 2]
      span: [91, 0, 123, 1]
      leading_comments: " Describes a message type.\n"
    }
    location {
      path: [4, 2, 1]
      span: [91, 8, 23]
    }
    location {
      path: [4, 2, 2, 0]
      span: [92, 2, 27]
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [92, 2, 10]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [92, 11, 17]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [92, 18, 22]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [92, 25, 26]
    }
    location {
      path: [4, 2, 2, 1]
      span: [94, 2, 42]
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [94, 2, 10]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [94, 11, 31]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [94, 32, 37]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [94, 40, 41]
    }
    location {
      path: [4, 2, 2, 2]
      span: [95, 2, 46]
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [95, 2, 10]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [95, 11, 31]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [95, 32, 41]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [95, 44, 45]
    }
    location {
      path: [4, 2, 2, 3]
      span: [97, 2, 43]
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [97, 2, 10]
    }
    location {
      path: [4, 2, 2, 3, 6]
      span: [97, 11, 26]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [97, 27, 38]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [97, 41, 42]
    }
    location {
      path: [4, 2, 2, 4]
      span: [98, 2, 45]
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [98, 2, 10]
    }
    location {
      path: [4, 2, 2, 4, 6]
      span: [98, 11, 30]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [98, 31, 40]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [98, 43, 44]
    }
    location {
      path: [4, 2, 3, 0]
      span: [100, 2, 105, 3]
    }
    location {
      path: [4, 2, 3, 0, 1]
      span: [100, 10, 24]
    }
    location {
      path: [4, 2, 3, 0, 2, 0]
      span: [101, 4, 29]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 4]
      span: [101, 4, 12]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 5]
      span: [101, 13, 18]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 1]
      span: [101, 19, 24]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 3]
      span: [101, 27, 28]
    }
    location {
      path: [4, 2, 3, 0, 2, 1]
      span: [102, 4, 27]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 4]
      span: [102, 4, 12]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 5]
      span: [102, 13, 18]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 1]
      span: [102, 19, 22]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 3]
      span: [102, 25, 26]
    }
    location {
      path: [4, 2, 3, 0, 2, 2]
      span: [104, 4, 47]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 4]
      span: [104, 4, 12]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 6]
      span: [104, 13, 34]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 1]
      span: [104, 35, 42]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 3]
      span: [104, 45, 46]
    }
    location {
      path: [4, 2, 2, 5]
      span: [106, 2, 46]
    }
    location {
      path: [4, 2, 2, 5, 4]
      span: [106, 2, 10]
    }
    location {
      path: [4, 2, 2, 5, 6]
      span: [106, 11, 25]
    }
    location {
      path: [4, 2, 2, 5, 1]
      span: [106, 26, 41]
    }
    location {
      path: [4, 2, 2, 5, 3]
      span: [106, 44, 45]
    }
    location {
      path: [4, 2, 2, 6]
      span: [108, 2, 47]
    }
    location {
      path: [4, 2, 2, 6, 4]
      span: [108, 2, 10]
    }
    location {
      path: [4, 2, 2, 6, 6]
      span: [108, 11, 31]
    }
    location {
      path: [4, 2, 2, 6, 1]
      span: [108, 32, 42]
    }
    location {
      path: [4, 2, 2, 6, 3]
      span: [108, 45, 46]
    }
    location {
      path: [4, 2, 2, 7]
      span: [110, 2, 38]
    }
    location {
      path: [4, 2, 2, 7, 4]
      span: [110, 2, 10]
    }
    location {
      path: [4, 2, 2, 7, 6]
      span: [110, 11, 25]
    }
    location {
      path: [4, 2, 2, 7, 1]
      span: [110, 26, 33]
    }
    location {
      path: [4, 2, 2, 7, 3]
      span: [110, 36, 37]
    }
    location {
      path: [4, 2, 3, 1]
      span: [115, 2, 118, 3]
      leading_comments: " Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n"
    }
    location {
      path: [4, 2, 3, 1, 1]
      span: [115, 10, 23]
    }
    location {
      path: [4, 2, 3, 1, 2, 0]
      span: [116, 4, 29]
      trailing_comments: " Inclusive.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 4]
      span: [116, 4, 12]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 5]
      span: [116, 13, 18]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 1]
      span: [116, 19, 24]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 3]
      span: [116, 27, 28]
    }
    location {
      path: [4, 2, 3, 1, 2, 1]
      span: [117, 4, 27]
      trailing_comments: " Exclusive.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 4]
      span: [117, 4, 12]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 5]
      span: [117, 13, 18]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 1]
      span: [117, 19, 22]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 3]
      span: [117, 25, 26]
    }
    location {
      path: [4, 2, 2, 8]
      span: [119, 2, 44]
    }
    location {
      path: [4, 2, 2, 8, 4]
      span: [119, 2, 10]
    }
    location {
      path: [4, 2, 2, 8, 6]
      span: [119, 11, 24]
    }
    location {
      path: [4, 2, 2, 8, 1]
      span: [119, 25, 39]
    }
    location {
      path: [4, 2, 2, 8, 3]
      span: [119, 42, 43]
    }
    location {
      path: [4, 2, 2, 9]
      span: [122, 2, 37]
      leading_comments: " Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n"
    }
    location {
      path: [4, 2, 2, 9, 4]
      span: [122, 2, 10]
    }
    location {
      path: [4, 2, 2, 9, 5]
      span: [122, 11, 17]
    }
    location {
      path: [4, 2, 2, 9, 1]
      span: [122, 18, 31]
    }
    location {
      path: [4, 2, 2, 9, 3]
      span: [122, 34, 36]
    }
    location {
      path: [4, 3]
      span: [125, 0, 131, 1]
    }
    location {
      path: [4, 3, 1]
      span: [125, 8, 29]
    }
    location {
      path: [4, 3, 2, 0]
      span: [127, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [127, 2, 10]
    }
    location {
      path: [4, 3, 2, 0, 6]
      span: [127, 11, 30]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [127, 31, 51]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [127, 54, 57]
    }
    location {
      path: [4, 3, 5]
      span: [130, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 3, 5, 0]
      span: [130, 13, 24]
    }
    location {
      path: [4, 3, 5, 0, 1]
      span: [130, 13, 17]
    }
    location {
      path: [4, 3, 5, 0, 2]
      span: [130, 21, 24]
    }
    location {
      path: [4, 4]
      span: [134, 0, 212, 1]
      leading_comments: " Describes a field within a message.\n"
    }
    location {
      path: [4, 4, 1]
      span: [134, 8, 28]
    }
    location {
      path: [4, 4, 4, 0]
      span: [135, 2, 166, 3]
    }
    location {
      path: [4, 4, 4, 0, 1]
      span: [135, 7, 11]
    }
    location {
      path: [4, 4, 4, 0, 2, 0]
      span: [138, 4, 28]
      leading_comments: " 0 is reserved for errors.\n Order is weird for historical reasons.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 0, 1]
      span: [138, 4, 15]
    }
    location {
      path: [4, 4, 4, 0, 2, 0, 2]
      span: [138, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 1]
      span: [139, 4, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 1, 1]
      span: [139, 4, 14]
    }
    location {
      path: [4, 4, 4, 0, 2, 1, 2]
      span: [139, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 2]
      span: [142, 4, 28]
      leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 2, 1]
      span: [142, 4, 14]
    }
    location {
      path: [4, 4, 4, 0, 2, 2, 2]
      span: [142, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 3]
      span: [143, 4, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 3, 1]
      span: [143, 4, 15]
    }
    location {
      path: [4, 4, 4, 0, 2, 3, 2]
      span: [143, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 4]
      span: [146, 4, 28]
      leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 4, 1]
      span: [146, 4, 14]
    }
    location {
      path: [4, 4, 4, 0, 2, 4, 2]
      span: [146, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 5]
      span: [147, 4, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 5, 1]
      span: [147, 4, 16]
    }
    location {
      path: [4, 4, 4, 0, 2, 5, 2]
      span: [147, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 6]
      span: [148, 4, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 6, 1]
      span: [148, 4, 16]
    }
    location {
      path: [4, 4, 4, 0, 2, 6, 2]
      span: [148, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 7]
      span: [149, 4, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 7, 1]
      span: [149, 4, 13]
    }
    location {
      path: [4, 4, 4, 0, 2, 7, 2]
      span: [149, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 8]
      span: [150, 4, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 8, 1]
      span: [150, 4, 15]
    }
    location {
      path: [4, 4, 4, 0, 2, 8, 2]
      span: [150, 26, 27]
    }
    location {
      path: [4, 4, 4, 0, 2, 9]
      span: [155, 4, 29]
      leading_comments: " Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 9, 1]
      span: [155, 4, 14]
    }
    location {
      path: [4, 4, 4, 0, 2, 9, 2]
      span: [155, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 10]
      span: [156, 4, 29]
      trailing_comments: " Length-delimited aggregate.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 10, 1]
      span: [156, 4, 16]
    }
    location {
      path: [4, 4, 4, 0, 2, 10, 2]
      span: [156, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 11]
      span: [159, 4, 29]
      leading_comments: " New in version 2.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 11, 1]
      span: [159, 4, 14]
    }
    location {
      path: [4, 4, 4, 0, 2, 11, 2]
      span: [159, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 12]
      span: [160, 4, 29]
    }
    location {
      path: [4, 4, 4, 0, 2, 12, 1]
      span: [160, 4, 15]
    }
    location {
      path: [4, 4, 4, 0, 2, 12, 2]
      span: [160, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 13]
      span: [161, 4, 29]
    }
    location {
      path: [4, 4, 4, 0, 2, 13, 1]
      span: [161, 4, 13]
    }
    location {
      path: [4, 4, 4, 0, 2, 13, 2]
      span: [161, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 14]
      span: [162, 4, 29]
    }
    location {
      path: [4, 4, 4, 0, 2, 14, 1]
      span: [162, 4, 17]
    }
    location {
      path: [4, 4, 4, 0, 2, 14, 2]
      span: [162, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 15]
      span: [163, 4, 29]
    }
    location {
      path: [4, 4, 4, 0, 2, 15, 1]
      span: [163, 4, 17]
    }
    location {
      path: [4, 4, 4, 0, 2, 15, 2]
      span: [163, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 16]
      span: [164, 4, 29]
      trailing_comments: " Uses ZigZag encoding.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 16, 1]
      span: [164, 4, 15]
    }
    location {
      path: [4, 4, 4, 0, 2, 16, 2]
      span: [164, 26, 28]
    }
    location {
      path: [4, 4, 4, 0, 2, 17]
      span: [165, 4, 29]
      trailing_comments: " Uses ZigZag encoding.\n"
    }
    location {
      path: [4, 4, 4, 0, 2, 17, 1]
      span: [165, 4, 15]
    }
    location {
      path: [4, 4, 4, 0, 2, 17, 2]
      span: [165, 26, 28]
    }
    location {
      path: [4, 4, 4, 1]
      span: [168, 2, 173, 3]
    }
    location {
      path: [4, 4, 4, 1, 1]
      span: [168, 7, 12]
    }
    location {
      path: [4, 4, 4, 1, 2, 0]
      span: [170, 4, 28]
      leading_comments: " 0 is reserved for errors\n"
    }
    location {
      path: [4, 4, 4, 1, 2, 0, 1]
      span: [170, 4, 18]
    }
    location {
      path: [4, 4, 4, 1, 2, 0, 2]
      span: [170, 26, 27]
    }
    location {
      path: [4, 4, 4, 1, 2, 1]
      span: [171, 4, 28]
    }
    location {
      path: [4, 4, 4, 1, 2, 1, 1]
      span: [171, 4, 18]
    }
    location {
      path: [4, 4, 4, 1, 2, 1, 2]
      span: [171, 26, 27]
    }
    location {
      path: [4, 4, 4, 1, 2, 2]
      span: [172, 4, 28]
    }
    location {
      path: [4, 4, 4, 1, 2, 2, 1]
      span: [172, 4, 18]
    }
    location {
      path: [4, 4, 4, 1, 2, 2, 2]
      span: [172, 26, 27]
    }
    location {
      path: [4, 4, 2, 0]
      span: [175, 2, 27]
    }
    location {
      path: [4, 4, 2, 0, 4]
      span: [175, 2, 10]
    }
    location {
      path: [4, 4, 2, 0, 5]
      span: [175, 11, 17]
    }
    location {
      path: [4, 4, 2, 0, 1]
      span: [175, 18, 22]
    }
    location {
      path: [4, 4, 2, 0, 3]
      span: [175, 25, 26]
    }
    location {
      path: [4, 4, 2, 1]
      span: [176, 2, 28]
    }
    location {
      path: [4, 4, 2, 1, 4]
      span: [176, 2, 10]
    }
    location {
      path: [4, 4, 2, 1, 5]
      span: [176, 11, 16]
    }
    location {
      path: [4, 4, 2, 1, 1]
      span: [176, 17, 23]
    }
    location {
      path: [4, 4, 2, 1, 3]
      span: [176, 26, 27]
    }
    location {
      path: [4, 4, 2, 2]
      span: [177, 2, 27]
    }
    location {
      path: [4, 4, 2, 2, 4]
      span: [177, 2, 10]
    }
    location {
      path: [4, 4, 2, 2, 6]
      span: [177, 11, 16]
    }
    location {
      path: [4, 4, 2, 2, 1]
      span: [177, 17, 22]
    }
    location {
      path: [4, 4, 2, 2, 3]
      span: [177, 25, 26]
    }
    location {
      path: [4, 4, 2, 3]
      span: [181, 2, 25]
      leading_comments: " If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n"
    }
    location {
      path: [4, 4, 2, 3, 4]
      span: [181, 2, 10]
    }
    location {
      path: [4, 4, 2, 3, 6]
      span: [181, 11, 15]
    }
    location {
      path: [4, 4, 2, 3, 1]
      span: [181, 16, 20]
    }
    location {
      path: [4, 4, 2, 3, 3]
      span: [181, 23, 24]
    }
    location {
      path: [4, 4, 2, 4]
      span: [188, 2, 32]
      leading_comments: " For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n"
    }
    location {
      path: [4, 4, 2, 4, 4]
      span: [188, 2, 10]
    }
    location {
      path: [4, 4, 2, 4, 5]
      span: [188, 11, 17]
    }
    location {
      path: [4, 4, 2, 4, 1]
      span: [188, 18, 27]
    }
    location {
      path: [4, 4, 2, 4, 3]
      span: [188, 30, 31]
    }
    location {
      path: [4, 4, 2, 5]
      span: [192, 2, 31]
      leading_comments: " For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n"
    }
    location {
      path: [4, 4, 2, 5, 4]
      span: [192, 2, 10]
    }
    location {
      path: [4, 4, 2, 5, 5]
      span: [192, 11, 17]
    }
    location {
      path: [4, 4, 2, 5, 1]
      span: [192, 18, 26]
    }
    location {
      path: [4, 4, 2, 5, 3]
      span: [192, 29, 30]
    }
    location {
      path: [4, 4, 2, 6]
      span: [199, 2, 36]
      leading_comments: " For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n TODO(kenton):  Base-64 encode?\n"
    }
    location {
      path: [4, 4, 2, 6, 4]
      span: [199, 2, 10]
    }
    location {
      path: [4, 4, 2, 6, 5]
      span: [199, 11, 17]
    }
    location {
      path: [4, 4, 2, 6, 1]
      span: [199, 18, 31]
    }
    location {
      path: [4, 4, 2, 6, 3]
      span: [199, 34, 35]
    }
    location {
      path: [4, 4, 2, 7]
      span: [203, 2, 33]
      leading_comments: " If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n"
    }
    location {
      path: [4, 4, 2, 7, 4]
      span: [203, 2, 10]
    }
    location {
      path: [4, 4, 2, 7, 5]
      span: [203, 11, 16]
    }
    location {
      path: [4, 4, 2, 7, 1]
      span: [203, 17, 28]
    }
    location {
      path: [4, 4, 2, 7, 3]
      span: [203, 31, 32]
    }
    location {
      path: [4, 4, 2, 8]
      span: [209, 2, 33]
      leading_comments: " JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n"
    }
    location {
      path: [4, 4, 2, 8, 4]
      span: [209, 2, 10]
    }
    location {
      path: [4, 4, 2, 8, 5]
      span: [209, 11, 17]
    }
    location {
      path: [4, 4, 2, 8, 1]
      span: [209, 18, 27]
    }
    location {
      path: [4, 4, 2, 8, 3]
      span: [209, 30, 32]
    }
    location {
      path: [4, 4, 2, 9]
      span: [211, 2, 36]
    }
    location {
      path: [4, 4, 2, 9, 4]
      span: [211, 2, 10]
    }
    location {
      path: [4, 4, 2, 9, 6]
      span: [211, 11, 23]
    }
    location {
      path: [4, 4, 2, 9, 1]
      span: [211, 24, 31]
    }
    location {
      path: [4, 4, 2, 9, 3]
      span: [211, 34, 35]
    }
    location {
      path: [4, 5]
      span: [215, 0, 218, 1]
      leading_comments: " Describes a oneof.\n"
    }
    location {
      path: [4, 5, 1]
      span: [215, 8, 28]
    }
    location {
      path: [4, 5, 2, 0]
      span: [216, 2, 27]
    }
    location {
      path: [4, 5, 2, 0, 4]
      span: [216, 2, 10]
    }
    location {
      path: [4, 5, 2, 0, 5]
      span: [216, 11, 17]
    }
    location {
      path: [4, 5, 2, 0, 1]
      span: [216, 18, 22]
    }
    location {
      path: [4, 5, 2, 0, 3]
      span: [216, 25, 26]
    }
    location {
      path: [4, 5, 2, 1]
      span: [217, 2, 36]
    }
    location {
      path: [4, 5, 2, 1, 4]
      span: [217, 2, 10]
    }
    location {
      path: [4, 5, 2, 1, 6]
      span: [217, 11, 23]
    }
    location {
      path: [4, 5, 2, 1, 1]
      span: [217, 24, 31]
    }
    location {
      path: [4, 5, 2, 1, 3]
      span: [217, 34, 35]
    }
    location {
      path: [4, 6]
      span: [221, 0, 227, 1]
      leading_comments: " Describes an enum type.\n"
    }
    location {
      path: [4, 6, 1]
      span: [221, 8, 27]
    }
    location {
      path: [4, 6, 2, 0]
      span: [222, 2, 27]
    }
    location {
      path: [4, 6, 2, 0, 4]
      span: [222, 2, 10]
    }
    location {
      path: [4, 6, 2, 0, 5]
      span: [222, 11, 17]
    }
    location {
      path: [4, 6, 2, 0, 1]
      span: [222, 18, 22]
    }
    location {
      path: [4, 6, 2, 0, 3]
      span: [222, 25, 26]
    }
    location {
      path: [4, 6, 2, 1]
      span: [224, 2, 46]
    }
    location {
      path: [4, 6, 2, 1, 4]
      span: [224, 2, 10]
    }
    location {
      path: [4, 6, 2, 1, 6]
      span: [224, 11, 35]
    }
    location {
      path: [4, 6, 2, 1, 1]
      span: [224, 36, 41]
    }
    location {
      path: [4, 6, 2, 1, 3]
      span: [224, 44, 45]
    }
    location {
      path: [4, 6, 2, 2]
      span: [226, 2, 35]
    }
    location {
      path: [4, 6, 2, 2, 4]
      span: [226, 2, 10]
    }
    location {
      path: [4, 6, 2, 2, 6]
      span: [226, 11, 22]
    }
    location {
      path: [4, 6, 2, 2, 1]
      span: [226, 23, 30]
    }
    location {
      path: [4, 6, 2, 2, 3]
      span: [226, 33, 34]
    }
    location {
      path: [4, 7]
      span: [230, 0, 235, 1]
      leading_comments: " Describes a value within an enum.\n"
    }
    location {
      path: [4, 7, 1]
      span: [230, 8, 32]
    }
    location {
      path: [4, 7, 2, 0]
      span: [231, 2, 27]
    }
    location {
      path: [4, 7, 2, 0, 4]
      span: [231, 2, 10]
    }
    location {
      path: [4, 7, 2, 0, 5]
      span: [231, 11, 17]
    }
    location {
      path: [4, 7, 2, 0, 1]
      span: [231, 18, 22]
    }
    location {
      path: [4, 7, 2, 0, 3]
      span: [231, 25, 26]
    }
    location {
      path: [4, 7, 2, 1]
      span: [232, 2, 28]
    }
    location {
      path: [4, 7, 2, 1, 4]
      span: [232, 2, 10]
    }
    location {
      path: [4, 7, 2, 1, 5]
      span: [232, 11, 16]
    }
    location {
      path: [4, 7, 2, 1, 1]
      span: [232, 17, 23]
    }
    location {
      path: [4, 7, 2, 1, 3]
      span: [232, 26, 27]
    }
    location {
      path: [4, 7, 2, 2]
      span: [234, 2, 40]
    }
    location {
      path: [4, 7, 2, 2, 4]
      span: [234, 2, 10]
    }
    location {
      path: [4, 7, 2, 2, 6]
      span: [234, 11, 27]
    }
    location {
      path: [4, 7, 2, 2, 1]
      span: [234, 28, 35]
    }
    location {
      path: [4, 7, 2, 2, 3]
      span: [234, 38, 39]
    }
    location {
      path: [4, 8]
      span: [238, 0, 243, 1]
      leading_comments: " Describes a service.\n"
    }
    location {
      path: [4, 8, 1]
      span: [238, 8, 30]
    }
    location {
      path: [4, 8, 2, 0]
      span: [239, 2, 27]
    }
    location {
      path: [4, 8, 2, 0, 4]
      span: [239, 2, 10]
    }
    location {
      path: [4, 8, 2, 0, 5]
      span: [239, 11, 17]
    }
    location {
      path: [4, 8, 2, 0, 1]
      span: [239, 18, 22]
    }
    location {
      path: [4, 8, 2, 0, 3]
      span: [239, 25, 26]
    }
    location {
      path: [4, 8, 2, 1]
      span: [240, 2, 44]
    }
    location {
      path: [4, 8, 2, 1, 4]
      span: [240, 2, 10]
    }
    location {
      path: [4, 8, 2, 1, 6]
      span: [240, 11, 32]
    }
    location {
      path: [4, 8, 2, 1, 1]
      span: [240, 33, 39]
    }
    location {
      path: [4, 8, 2, 1, 3]
      span: [240, 42, 43]
    }
    location {
      path: [4, 8, 2, 2]
      span: [242, 2, 38]
    }
    location {
      path: [4, 8, 2, 2, 4]
      span: [242, 2, 10]
    }
    location {
      path: [4, 8, 2, 2, 6]
      span: [242, 11, 25]
    }
    location {
      path: [4, 8, 2, 2, 1]
      span: [242, 26, 33]
    }
    location {
      path: [4, 8, 2, 2, 3]
      span: [242, 36, 37]
    }
    location {
      path: [4, 9]
      span: [246, 0, 260, 1]
      leading_comments: " Describes a method of a service.\n"
    }
    location {
      path: [4, 9, 1]
      span: [246, 8, 29]
    }
    location {
      path: [4, 9, 2, 0]
      span: [247, 2, 27]
    }
    location {
      path: [4, 9, 2, 0, 4]
      span: [247, 2, 10]
    }
    location {
      path: [4, 9, 2, 0, 5]
      span: [247, 11, 17]
    }
    location {
      path: [4, 9, 2, 0, 1]
      span: [247, 18, 22]
    }
    location {
      path: [4, 9, 2, 0, 3]
      span: [247, 25, 26]
    }
    location {
      path: [4, 9, 2, 1]
      span: [251, 2, 33]
      leading_comments: " Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n"
    }
    location {
      path: [4, 9, 2, 1, 4]
      span: [251, 2, 10]
    }
    location {
      path: [4, 9, 2, 1, 5]
      span: [251, 11, 17]
    }
    location {
      path: [4, 9, 2, 1, 1]
      span: [251, 18, 28]
    }
    location {
      path: [4, 9, 2, 1, 3]
      span: [251, 31, 32]
    }
    location {
      path: [4, 9, 2, 2]
      span: [252, 2, 34]
    }
    location {
      path: [4, 9, 2, 2, 4]
      span: [252, 2, 10]
    }
    location {
      path: [4, 9, 2, 2, 5]
      span: [252, 11, 17]
    }
    location {
      path: [4, 9, 2, 2, 1]
      span: [252, 18, 29]
    }
    location {
      path: [4, 9, 2, 2, 3]
      span: [252, 32, 33]
    }
    location {
      path: [4, 9, 2, 3]
      span: [254, 2, 37]
    }
    location {
      path: [4, 9, 2, 3, 4]
      span: [254, 2, 10]
    }
    location {
      path: [4, 9, 2, 3, 6]
      span: [254, 11, 24]
    }
    location {
      path: [4, 9, 2, 3, 1]
      span: [254, 25, 32]
    }
    location {
      path: [4, 9, 2, 3, 3]
      span: [254, 35, 36]
    }
    location {
      path: [4, 9, 2, 4]
      span: [257, 2, 53]
      leading_comments: " Identifies if client streams multiple client messages\n"
    }
    location {
      path: [4, 9, 2, 4, 4]
      span: [257, 2, 10]
    }
    location {
      path: [4, 9, 2, 4, 5]
      span: [257, 11, 15]
    }
    location {
      path: [4, 9, 2, 4, 1]
      span: [257, 16, 32]
    }
    location {
      path: [4, 9, 2, 4, 3]
      span: [257, 35, 36]
    }
    location {
      path: [4, 9, 2, 4, 8]
      span: [257, 37, 52]
    }
    location {
      path: [4, 9, 2, 4, 7]
      span: [257, 46, 51]
    }
    location {
      path: [4, 9, 2, 5]
      span: [259, 2, 53]
      leading_comments: " Identifies if server streams multiple server messages\n"
    }
    location {
      path: [4, 9, 2, 5, 4]
      span: [259, 2, 10]
    }
    location {
      path: [4, 9, 2, 5, 5]
      span: [259, 11, 15]
    }
    location {
      path: [4, 9, 2, 5, 1]
      span: [259, 16, 32]
    }
    location {
      path: [4, 9, 2, 5, 3]
      span: [259, 35, 36]
    }
    location {
      path: [4, 9, 2, 5, 8]
      span: [259, 37, 52]
    }
    location {
      path: [4, 9, 2, 5, 7]
      span: [259, 46, 51]
    }
    location {
      path: [4, 10]
      span: [296, 0, 405, 1]
      leading_detached_comments: " ===================================================================\n Options\n"
      leading_detached_comments: " Each of the definitions above may have \"options\" attached.  These are\n just annotations which may cause code to be generated slightly differently\n or may contain hints for code that manipulates protocol messages.\n\n Clients may define custom options as extensions of the *Options messages.\n These extensions may not yet be known at parsing time, so the parser cannot\n store the values in them.  Instead it stores them in a field in the *Options\n message called uninterpreted_option. This field must have the same name\n across all *Options messages. We then use this field to populate the\n extensions when we build a descriptor, at which point all protos have been\n parsed and so all extensions are known.\n\n Extension numbers for custom options may be chosen as follows:\n * For options which will only be used within a single application or\n   organization, or for experimental options, use field numbers 50000\n   through 99999.  It is up to you to ensure that you do not use the\n   same number for multiple options.\n * For options which will be published and used publicly by multiple\n   independent entities, e-mail protobuf-global-extension-registry@google.com\n   to reserve extension numbers. Simply provide your project name (e.g.\n   Objective-C plugin) and your project website (if available) -- there's no\n   need to explain how you intend to use them. Usually you only need one\n   extension number. You can declare multiple options with only one extension\n   number by putting them in a sub-message. See the Custom Options section of\n   the docs for examples:\n   https://developers.google.com/protocol-buffers/docs/proto#options\n   If this turns out to be popular, a web service will be set up\n   to automatically assign option numbers.\n"
    }
    location {
      path: [4, 10, 1]
      span: [296, 8, 19]
    }
    location {
      path: [4, 10, 2, 0]
      span: [302, 2, 35]
      leading_comments: " Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n"
    }
    location {
      path: [4, 10, 2, 0, 4]
      span: [302, 2, 10]
    }
    location {
      path: [4, 10, 2, 0, 5]
      span: [302, 11, 17]
    }
    location {
      path: [4, 10, 2, 0, 1]
      span: [302, 18, 30]
    }
    location {
      path: [4, 10, 2, 0, 3]
      span: [302, 33, 34]
    }
    location {
      path: [4, 10, 2, 1]
      span: [310, 2, 43]
      leading_comments: " If set, all the classes from the .proto file are wrapped in a single\n outer class with the given name.  This applies to both Proto1\n (equivalent to the old \"--one_java_file\" option) and Proto2 (where\n a .proto always translates to a single class, but you may want to\n explicitly choose the class name).\n"
    }
    location {
      path: [4, 10, 2, 1, 4]
      span: [310, 2, 10]
    }
    location {
      path: [4, 10, 2, 1, 5]
      span: [310, 11, 17]
    }
    location {
      path: [4, 10, 2, 1, 1]
      span: [310, 18, 38]
    }
    location {
      path: [4, 10, 2, 1, 3]
      span: [310, 41, 42]
    }
    location {
      path: [4, 10, 2, 2]
      span: [318, 2, 57]
      leading_comments: " If set true, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the outer class\n named by java_outer_classname.  However, the outer class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n"
    }
    location {
      path: [4, 10, 2, 2, 4]
      span: [318, 2, 10]
    }
    location {
      path: [4, 10, 2, 2, 5]
      span: [318, 11, 15]
    }
    location {
      path: [4, 10, 2, 2, 1]
      span: [318, 16, 35]
    }
    location {
      path: [4, 10, 2, 2, 3]
      span: [318, 38, 40]
    }
    location {
      path: [4, 10, 2, 2, 8]
      span: [318, 41, 56]
    }
    location {
      path: [4, 10, 2, 2, 7]
      span: [318, 50, 55]
    }
    location {
      path: [4, 10, 2, 3]
      span: [321, 2, 69]
      leading_comments: " This option does nothing.\n"
    }
    location {
      path: [4, 10, 2, 3, 4]
      span: [321, 2, 10]
    }
    location {
      path: [4, 10, 2, 3, 5]
      span: [321, 11, 15]
    }
    location {
      path: [4, 10, 2, 3, 1]
      span: [321, 16, 45]
    }
    location {
      path: [4, 10, 2, 3, 3]
      span: [321, 48, 50]
    }
    location {
      path: [4, 10, 2, 3, 8]
      span: [321, 51, 68]
    }
    location {
      path: [4, 10, 2, 3, 8, 999, 0]
      span: [321, 52, 67]
    }
    location {
      path: [4, 10, 2, 3, 8, 999, 0, 2]
      span: [321, 52, 62]
    }
    location {
      path: [4, 10, 2, 3, 8, 999, 0, 2, 0]
      span: [321, 52, 62]
    }
    location {
      path: [4, 10, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [321, 52, 62]
    }
    location {
      path: [4, 10, 2, 3, 8, 999, 0, 3]
      span: [321, 63, 67]
    }
    location {
      path: [4, 10, 2, 4]
      span: [329, 2, 60]
      leading_comments: " If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n"
    }
    location {
      path: [4, 10, 2, 4, 4]
      span: [329, 2, 10]
    }
    location {
      path: [4, 10, 2, 4, 5]
      span: [329, 11, 15]
    }
    location {
      path: [4, 10, 2, 4, 1]
      span: [329, 16, 38]
    }
    location {
      path: [4, 10, 2, 4, 3]
      span: [329, 41, 43]
    }
    location {
      path: [4, 10, 2, 4, 8]
      span: [329, 44, 59]
    }
    location {
      path: [4, 10, 2, 4, 7]
      span: [329, 53, 58]
    }
    location {
      path: [4, 10, 4, 0]
      span: [333, 2, 338, 3]
      leading_comments: " Generated classes can be optimized for speed or code size.\n"
    }
    location {
      path: [4, 10, 4, 0, 1]
      span: [333, 7, 19]
    }
    location {
      path: [4, 10, 4, 0, 2, 0]
      span: [334, 4, 14]
      trailing_comments: " Generate complete code for parsing, serialization,\n"
    }
    location {
      path: [4, 10, 4, 0, 2, 0, 1]
      span: [334, 4, 9]
    }
    location {
      path: [4, 10, 4, 0, 2, 0, 2]
      span: [334, 12, 13]
    }
    location {
      path: [4, 10, 4, 0, 2, 1]
      span: [336, 4, 18]
      leading_comments: " etc.\n"
      trailing_comments: " Use ReflectionOps to implement these methods.\n"
    }
    location {
      path: [4, 10, 4, 0, 2, 1, 1]
      span: [336, 4, 13]
    }
    location {
      path: [4, 10, 4, 0, 2, 1, 2]
      span: [336, 16, 17]
    }
    location {
      path: [4, 10, 4, 0, 2, 2]
      span: [337, 4, 21]
      trailing_comments: " Generate code using MessageLite and the lite runtime.\n"
    }
    location {
      path: [4, 10, 4, 0, 2, 2, 1]
      span: [337, 4, 16]
    }
    location {
      path: [4, 10, 4, 0, 2, 2, 2]
      span: [337, 19, 20]
    }
    location {
      path: [4, 10, 2, 5]
      span: [339, 2, 57]
    }
    location {
      path: [4, 10, 2, 5, 4]
      span: [339, 2, 10]
    }
    location {
      path: [4, 10, 2, 5, 6]
      span: [339, 11, 23]
    }
    location {
      path: [4, 10, 2, 5, 1]
      span: [339, 24, 36]
    }
    location {
      path: [4, 10, 2, 5, 3]
      span: [339, 39, 40]
    }
    location {
      path: [4, 10, 2, 5, 8]
      span: [339, 41, 56]
    }
    location {
      path: [4, 10, 2, 5, 7]
      span: [339, 50, 55]
    }
    location {
      path: [4, 10, 2, 6]
      span: [346, 2, 34]
      leading_comments: " Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n"
    }
    location {
      path: [4, 10, 2, 6, 4]
      span: [346, 2, 10]
    }
    location {
      path: [4, 10, 2, 6, 5]
      span: [346, 11, 17]
    }
    location {
      path: [4, 10, 2, 6, 1]
      span: [346, 18, 28]
    }
    location {
      path: [4, 10, 2, 6, 3]
      span: [346, 31, 33]
    }
    location {
      path: [4, 10, 2, 7]
      span: [360, 2, 57]
      leading_comments: " Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.\n\n Generic services are now considered deprecated in favor of using plugins\n that generate code specific to your particular RPC system.  Therefore,\n these default to false.  Old code which depends on generic services should\n explicitly set them to true.\n"
    }
    location {
      path: [4, 10, 2, 7, 4]
      span: [360, 2, 10]
    }
    location {
      path: [4, 10, 2, 7, 5]
      span: [360, 11, 15]
    }
    location {
      path: [4, 10, 2, 7, 1]
      span: [360, 16, 35]
    }
    location {
      path: [4, 10, 2, 7, 3]
      span: [360, 38, 40]
    }
    location {
      path: [4, 10, 2, 7, 8]
      span: [360, 41, 56]
    }
    location {
      path: [4, 10, 2, 7, 7]
      span: [360, 50, 55]
    }
    location {
      path: [4, 10, 2, 8]
      span: [361, 2, 59]
    }
    location {
      path: [4, 10, 2, 8, 4]
      span: [361, 2, 10]
    }
    location {
      path: [4, 10, 2, 8, 5]
      span: [361, 11, 15]
    }
    location {
      path: [4, 10, 2, 8, 1]
      span: [361, 16, 37]
    }
    location {
      path: [4, 10, 2, 8, 3]
      span: [361, 40, 42]
    }
    location {
      path: [4, 10, 2, 8, 8]
      span: [361, 43, 58]
    }
    location {
      path: [4, 10, 2, 8, 7]
      span: [361, 52, 57]
    }
    location {
      path: [4, 10, 2, 9]
      span: [362, 2, 57]
    }
    location {
      path: [4, 10, 2, 9, 4]
      span: [362, 2, 10]
    }
    location {
      path: [4, 10, 2, 9, 5]
      span: [362, 11, 15]
    }
    location {
      path: [4, 10, 2, 9, 1]
      span: [362, 16, 35]
    }
    location {
      path: [4, 10, 2, 9, 3]
      span: [362, 38, 40]
    }
    location {
      path: [4, 10, 2, 9, 8]
      span: [362, 41, 56]
    }
    location {
      path: [4, 10, 2, 9, 7]
      span: [362, 50, 55]
    }
    location {
      path: [4, 10, 2, 10]
      span: [363, 2, 58]
    }
    location {
      path: [4, 10, 2, 10, 4]
      span: [363, 2, 10]
    }
    location {
      path: [4, 10, 2, 10, 5]
      span: [363, 11, 15]
    }
    location {
      path: [4, 10, 2, 10, 1]
      span: [363, 16, 36]
    }
    location {
      path: [4, 10, 2, 10, 3]
      span: [363, 39, 41]
    }
    location {
      path: [4, 10, 2, 10, 8]
      span: [363, 42, 57]
    }
    location {
      path: [4, 10, 2, 10, 7]
      span: [363, 51, 56]
    }
    location {
      path: [4, 10, 2, 11]
      span: [369, 2, 48]
      leading_comments: " Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n"
    }
    location {
      path: [4, 10, 2, 11, 4]
      span: [369, 2, 10]
    }
    location {
      path: [4, 10, 2, 11, 5]
      span: [369, 11, 15]
    }
    location {
      path: [4, 10, 2, 11, 1]
      span: [369, 16, 26]
    }
    location {
      path: [4, 10, 2, 11, 3]
      span: [369, 29, 31]
    }
    location {
      path: [4, 10, 2, 11, 8]
      span: [369, 32, 47]
    }
    location {
      path: [4, 10, 2, 11, 7]
      span: [369, 41, 46]
    }
    location {
      path: [4, 10, 2, 12]
      span: [373, 2, 54]
      leading_comments: " Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n"
    }
    location {
      path: [4, 10, 2, 12, 4]
      span: [373, 2, 10]
    }
    location {
      path: [4, 10, 2, 12, 5]
      span: [373, 11, 15]
    }
    location {
      path: [4, 10, 2, 12, 1]
      span: [373, 16, 32]
    }
    location {
      path: [4, 10, 2, 12, 3]
      span: [373, 35, 37]
    }
    location {
      path: [4, 10, 2, 12, 8]
      span: [373, 38, 53]
    }
    location {
      path: [4, 10, 2, 12, 7]
      span: [373, 47, 52]
    }
    location {
      path: [4, 10, 2, 13]
      span: [378, 2, 41]
      leading_comments: " Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n"
    }
    location {
      path: [4, 10, 2, 13, 4]
      span: [378, 2, 10]
    }
    location {
      path: [4, 10, 2, 13, 5]
      span: [378, 11, 17]
    }
    location {
      path: [4, 10, 2, 13, 1]
      span: [378, 18, 35]
    }
    location {
      path: [4, 10, 2, 13, 3]
      span: [378, 38, 40]
    }
    location {
      path: [4, 10, 2, 14]
      span: [381, 2, 40]
      leading_comments: " Namespace for generated classes; defaults to the package.\n"
    }
    location {
      path: [4, 10, 2, 14, 4]
      span: [381, 2, 10]
    }
    location {
      path: [4, 10, 2, 14, 5]
      span: [381, 11, 17]
    }
    location {
      path: [4, 10, 2, 14, 1]
      span: [381, 18, 34]
    }
    location {
      path: [4, 10, 2, 14, 3]
      span: [381, 37, 39]
    }
    location {
      path: [4, 10, 2, 15]
      span: [387, 2, 36]
      leading_comments: " By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n"
    }
    location {
      path: [4, 10, 2, 15, 4]
      span: [387, 2, 10]
    }
    location {
      path: [4, 10, 2, 15, 5]
      span: [387, 11, 17]
    }
    location {
      path: [4, 10, 2, 15, 1]
      span: [387, 18, 30]
    }
    location {
      path: [4, 10, 2, 15, 3]
      span: [387, 33, 35]
    }
    location {
      path: [4, 10, 2, 16]
      span: [391, 2, 40]
      leading_comments: " Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n"
    }
    location {
      path: [4, 10, 2, 16, 4]
      span: [391, 2, 10]
    }
    location {
      path: [4, 10, 2, 16, 5]
      span: [391, 11, 17]
    }
    location {
      path: [4, 10, 2, 16, 1]
      span: [391, 18, 34]
    }
    location {
      path: [4, 10, 2, 16, 3]
      span: [391, 37, 39]
    }
    location {
      path: [4, 10, 2, 17]
      span: [396, 2, 37]
      leading_comments: " Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n"
    }
    location {
      path: [4, 10, 2, 17, 4]
      span: [396, 2, 10]
    }
    location {
      path: [4, 10, 2, 17, 5]
      span: [396, 11, 17]
    }
    location {
      path: [4, 10, 2, 17, 1]
      span: [396, 18, 31]
    }
    location {
      path: [4, 10, 2, 17, 3]
      span: [396, 34, 36]
    }
    location {
      path: [4, 10, 2, 18]
      span: [399, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 10, 2, 18, 4]
      span: [399, 2, 10]
    }
    location {
      path: [4, 10, 2, 18, 6]
      span: [399, 11, 30]
    }
    location {
      path: [4, 10, 2, 18, 1]
      span: [399, 31, 51]
    }
    location {
      path: [4, 10, 2, 18, 3]
      span: [399, 54, 57]
    }
    location {
      path: [4, 10, 5]
      span: [402, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 10, 5, 0]
      span: [402, 13, 24]
    }
    location {
      path: [4, 10, 5, 0, 1]
      span: [402, 13, 17]
    }
    location {
      path: [4, 10, 5, 0, 2]
      span: [402, 21, 24]
    }
    location {
      path: [4, 10, 9]
      span: [404, 11, 14]
    }
    location {
      path: [4, 10, 9, 0]
      span: [404, 11, 13]
    }
    location {
      path: [4, 10, 9, 0, 1]
      span: [404, 11, 13]
    }
    location {
      path: [4, 10, 9, 0, 2]
      span: [404, 11, 13]
    }
    location {
      path: [4, 11]
      span: [407, 0, 470, 1]
    }
    location {
      path: [4, 11, 1]
      span: [407, 8, 22]
    }
    location {
      path: [4, 11, 2, 0]
      span: [426, 2, 60]
      leading_comments: " Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.\n\n The message must be defined exactly as follows:\n   message Foo {\n     option message_set_wire_format = true;\n     extensions 4 to max;\n   }\n Note that the message cannot have any defined fields; MessageSets only\n have extensions.\n\n All extensions of your type must be singular messages; e.g. they cannot\n be int32s, enums, or repeated messages.\n\n Because this is an option, the above two restrictions are not enforced by\n the protocol compiler.\n"
    }
    location {
      path: [4, 11, 2, 0, 4]
      span: [426, 2, 10]
    }
    location {
      path: [4, 11, 2, 0, 5]
      span: [426, 11, 15]
    }
    location {
      path: [4, 11, 2, 0, 1]
      span: [426, 16, 39]
    }
    location {
      path: [4, 11, 2, 0, 3]
      span: [426, 42, 43]
    }
    location {
      path: [4, 11, 2, 0, 8]
      span: [426, 44, 59]
    }
    location {
      path: [4, 11, 2, 0, 7]
      span: [426, 53, 58]
    }
    location {
      path: [4, 11, 2, 1]
      span: [431, 2, 68]
      leading_comments: " Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n"
    }
    location {
      path: [4, 11, 2, 1, 4]
      span: [431, 2, 10]
    }
    location {
      path: [4, 11, 2, 1, 5]
      span: [431, 11, 15]
    }
    location {
      path: [4, 11, 2, 1, 1]
      span: [431, 16, 47]
    }
    location {
      path: [4, 11, 2, 1, 3]
      span: [431, 50, 51]
    }
    location {
      path: [4, 11, 2, 1, 8]
      span: [431, 52, 67]
    }
    location {
      path: [4, 11, 2, 1, 7]
      span: [431, 61, 66]
    }
    location {
      path: [4, 11, 2, 2]
      span: [437, 2, 47]
      leading_comments: " Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n"
    }
    location {
      path: [4, 11, 2, 2, 4]
      span: [437, 2, 10]
    }
    location {
      path: [4, 11, 2, 2, 5]
      span: [437, 11, 15]
    }
    location {
      path: [4, 11, 2, 2, 1]
      span: [437, 16, 26]
    }
    location {
      path: [4, 11, 2, 2, 3]
      span: [437, 29, 30]
    }
    location {
      path: [4, 11, 2, 2, 8]
      span: [437, 31, 46]
    }
    location {
      path: [4, 11, 2, 2, 7]
      span: [437, 40, 45]
    }
    location {
      path: [4, 11, 2, 3]
      span: [460, 2, 30]
      leading_comments: " Whether the message is an automatically generated map entry type for the\n maps field.\n\n For maps fields:\n     map<KeyType, ValueType> map_field = 1;\n The parsed descriptor looks like:\n     message MapFieldEntry {\n         option map_entry = true;\n         optional KeyType key = 1;\n         optional ValueType value = 2;\n     }\n     repeated MapFieldEntry map_field = 1;\n\n Implementations may choose not to generate the map_entry=true message, but\n use a native map in the target language to hold the keys and values.\n The reflection APIs in such implementions still need to work as\n if the field is a repeated message field.\n\n NOTE: Do not set the option in .proto files. Always use the maps syntax\n instead. The option should only be implicitly set by the proto compiler\n parser.\n"
    }
    location {
      path: [4, 11, 2, 3, 4]
      span: [460, 2, 10]
    }
    location {
      path: [4, 11, 2, 3, 5]
      span: [460, 11, 15]
    }
    location {
      path: [4, 11, 2, 3, 1]
      span: [460, 16, 25]
    }
    location {
      path: [4, 11, 2, 3, 3]
      span: [460, 28, 29]
    }
    location {
      path: [4, 11, 9]
      span: [462, 11, 13]
      trailing_comments: " javalite_serializable\n"
    }
    location {
      path: [4, 11, 9, 0]
      span: [462, 11, 12]
    }
    location {
      path: [4, 11, 9, 0, 1]
      span: [462, 11, 12]
    }
    location {
      path: [4, 11, 9, 0, 2]
      span: [462, 11, 12]
    }
    location {
      path: [4, 11, 9]
      span: [463, 11, 13]
      trailing_comments: " javanano_as_lite\n"
    }
    location {
      path: [4, 11, 9, 1]
      span: [463, 11, 12]
    }
    location {
      path: [4, 11, 9, 1, 1]
      span: [463, 11, 12]
    }
    location {
      path: [4, 11, 9, 1, 2]
      span: [463, 11, 12]
    }
    location {
      path: [4, 11, 2, 4]
      span: [466, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 11, 2, 4, 4]
      span: [466, 2, 10]
    }
    location {
      path: [4, 11, 2, 4, 6]
      span: [466, 11, 30]
    }
    location {
      path: [4, 11, 2, 4, 1]
      span: [466, 31, 51]
    }
    location {
      path: [4, 11, 2, 4, 3]
      span: [466, 54, 57]
    }
    location {
      path: [4, 11, 5]
      span: [469, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 11, 5, 0]
      span: [469, 13, 24]
    }
    location {
      path: [4, 11, 5, 0, 1]
      span: [469, 13, 17]
    }
    location {
      path: [4, 11, 5, 0, 2]
      span: [469, 21, 24]
    }
    location {
      path: [4, 12]
      span: [472, 0, 563, 1]
    }
    location {
      path: [4, 12, 1]
      span: [472, 8, 20]
    }
    location {
      path: [4, 12, 2, 0]
      span: [477, 2, 46]
      leading_comments: " The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we'll try to include it in a future version!\n"
    }
    location {
      path: [4, 12, 2, 0, 4]
      span: [477, 2, 10]
    }
    location {
      path: [4, 12, 2, 0, 6]
      span: [477, 11, 16]
    }
    location {
      path: [4, 12, 2, 0, 1]
      span: [477, 17, 22]
    }
    location {
      path: [4, 12, 2, 0, 3]
      span: [477, 25, 26]
    }
    location {
      path: [4, 12, 2, 0, 8]
      span: [477, 27, 45]
    }
    location {
      path: [4, 12, 2, 0, 7]
      span: [477, 38, 44]
    }
    location {
      path: [4, 12, 4, 0]
      span: [478, 2, 485, 3]
    }
    location {
      path: [4, 12, 4, 0, 1]
      span: [478, 7, 12]
    }
    location {
      path: [4, 12, 4, 0, 2, 0]
      span: [480, 4, 15]
      leading_comments: " Default mode.\n"
    }
    location {
      path: [4, 12, 4, 0, 2, 0, 1]
      span: [480, 4, 10]
    }
    location {
      path: [4, 12, 4, 0, 2, 0, 2]
      span: [480, 13, 14]
    }
    location {
      path: [4, 12, 4, 0, 2, 1]
      span: [482, 4, 13]
    }
    location {
      path: [4, 12, 4, 0, 2, 1, 1]
      span: [482, 4, 8]
    }
    location {
      path: [4, 12, 4, 0, 2, 1, 2]
      span: [482, 11, 12]
    }
    location {
      path: [4, 12, 4, 0, 2, 2]
      span: [484, 4, 21]
    }
    location {
      path: [4, 12, 4, 0, 2, 2, 1]
      span: [484, 4, 16]
    }
    location {
      path: [4, 12, 4, 0, 2, 2, 2]
      span: [484, 19, 20]
    }
    location {
      path: [4, 12, 2, 1]
      span: [491, 2, 27]
      leading_comments: " The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n"
    }
    location {
      path: [4, 12, 2, 1, 4]
      span: [491, 2, 10]
    }
    location {
      path: [4, 12, 2, 1, 5]
      span: [491, 11, 15]
    }
    location {
      path: [4, 12, 2, 1, 1]
      span: [491, 16, 22]
    }
    location {
      path: [4, 12, 2, 1, 3]
      span: [491, 25, 26]
    }
    location {
      path: [4, 12, 2, 2]
      span: [504, 2, 51]
      leading_comments: " The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.\n\n This option is an enum to permit additional types to be added, e.g.\n goog.math.Integer.\n"
    }
    location {
      path: [4, 12, 2, 2, 4]
      span: [504, 2, 10]
    }
    location {
      path: [4, 12, 2, 2, 6]
      span: [504, 11, 17]
    }
    location {
      path: [4, 12, 2, 2, 1]
      span: [504, 18, 24]
    }
    location {
      path: [4, 12, 2, 2, 3]
      span: [504, 27, 28]
    }
    location {
      path: [4, 12, 2, 2, 8]
      span: [504, 29, 50]
    }
    location {
      path: [4, 12, 2, 2, 7]
      span: [504, 40, 49]
    }
    location {
      path: [4, 12, 4, 1]
      span: [505, 2, 514, 3]
    }
    location {
      path: [4, 12, 4, 1, 1]
      span: [505, 7, 13]
    }
    location {
      path: [4, 12, 4, 1, 2, 0]
      span: [507, 4, 18]
      leading_comments: " Use the default type.\n"
    }
    location {
      path: [4, 12, 4, 1, 2, 0, 1]
      span: [507, 4, 13]
    }
    location {
      path: [4, 12, 4, 1, 2, 0, 2]
      span: [507, 16, 17]
    }
    location {
      path: [4, 12, 4, 1, 2, 1]
      span: [510, 4, 18]
      leading_comments: " Use JavaScript strings.\n"
    }
    location {
      path: [4, 12, 4, 1, 2, 1, 1]
      span: [510, 4, 13]
    }
    location {
      path: [4, 12, 4, 1, 2, 1, 2]
      span: [510, 16, 17]
    }
    location {
      path: [4, 12, 4, 1, 2, 2]
      span: [513, 4, 18]
      leading_comments: " Use JavaScript numbers.\n"
    }
    location {
      path: [4, 12, 4, 1, 2, 2, 1]
      span: [513, 4, 13]
    }
    location {
      path: [4, 12, 4, 1, 2, 2, 2]
      span: [513, 16, 17]
    }
    location {
      path: [4, 12, 2, 3]
      span: [544, 2, 41]
      leading_comments: " Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.\n\n This is only a hint.  Implementations are free to choose whether to use\n eager or lazy parsing regardless of the value of this option.  However,\n setting this option true suggests that the protocol author believes that\n using lazy parsing on this field is worth the additional bookkeeping\n overhead typically needed to implement it.\n\n This option does not affect the public interface of any generated code;\n all method signatures remain the same.  Furthermore, thread-safety of the\n interface is not affected by this option; const methods remain safe to\n call from multiple threads concurrently, while non-const methods continue\n to require exclusive access.\n\n\n Note that implementations may choose not to check required fields within\n a lazy sub-message.  That is, calling IsInitialized() on the outer message\n may return true even if the inner message has missing required fields.\n This is necessary because otherwise the inner message would have to be\n parsed in order to perform the check, defeating the purpose of lazy\n parsing.  An implementation which chooses not to check required fields\n must be consistent about it.  That is, for any particular sub-message, the\n implementation must either *always* check its required fields, or *never*\n check its required fields, regardless of whether or not the message has\n been parsed.\n"
    }
    location {
      path: [4, 12, 2, 3, 4]
      span: [544, 2, 10]
    }
    location {
      path: [4, 12, 2, 3, 5]
      span: [544, 11, 15]
    }
    location {
      path: [4, 12, 2, 3, 1]
      span: [544, 16, 20]
    }
    location {
      path: [4, 12, 2, 3, 3]
      span: [544, 23, 24]
    }
    location {
      path: [4, 12, 2, 3, 8]
      span: [544, 25, 40]
    }
    location {
      path: [4, 12, 2, 3, 7]
      span: [544, 34, 39]
    }
    location {
      path: [4, 12, 2, 4]
      span: [550, 2, 47]
      leading_comments: " Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n"
    }
    location {
      path: [4, 12, 2, 4, 4]
      span: [550, 2, 10]
    }
    location {
      path: [4, 12, 2, 4, 5]
      span: [550, 11, 15]
    }
    location {
      path: [4, 12, 2, 4, 1]
      span: [550, 16, 26]
    }
    location {
      path: [4, 12, 2, 4, 3]
      span: [550, 29, 30]
    }
    location {
      path: [4, 12, 2, 4, 8]
      span: [550, 31, 46]
    }
    location {
      path: [4, 12, 2, 4, 7]
      span: [550, 40, 45]
    }
    location {
      path: [4, 12, 2, 5]
      span: [553, 2, 42]
      leading_comments: " For Google-internal migration only. Do not use.\n"
    }
    location {
      path: [4, 12, 2, 5, 4]
      span: [553, 2, 10]
    }
    location {
      path: [4, 12, 2, 5, 5]
      span: [553, 11, 15]
    }
    location {
      path: [4, 12, 2, 5, 1]
      span: [553, 16, 20]
    }
    location {
      path: [4, 12, 2, 5, 3]
      span: [553, 23, 25]
    }
    location {
      path: [4, 12, 2, 5, 8]
      span: [553, 26, 41]
    }
    location {
      path: [4, 12, 2, 5, 7]
      span: [553, 35, 40]
    }
    location {
      path: [4, 12, 2, 6]
      span: [557, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 12, 2, 6, 4]
      span: [557, 2, 10]
    }
    location {
      path: [4, 12, 2, 6, 6]
      span: [557, 11, 30]
    }
    location {
      path: [4, 12, 2, 6, 1]
      span: [557, 31, 51]
    }
    location {
      path: [4, 12, 2, 6, 3]
      span: [557, 54, 57]
    }
    location {
      path: [4, 12, 5]
      span: [560, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 12, 5, 0]
      span: [560, 13, 24]
    }
    location {
      path: [4, 12, 5, 0, 1]
      span: [560, 13, 17]
    }
    location {
      path: [4, 12, 5, 0, 2]
      span: [560, 21, 24]
    }
    location {
      path: [4, 12, 9]
      span: [562, 11, 13]
      trailing_comments: " removed jtype\n"
    }
    location {
      path: [4, 12, 9, 0]
      span: [562, 11, 12]
    }
    location {
      path: [4, 12, 9, 0, 1]
      span: [562, 11, 12]
    }
    location {
      path: [4, 12, 9, 0, 2]
      span: [562, 11, 12]
    }
    location {
      path: [4, 13]
      span: [565, 0, 571, 1]
    }
    location {
      path: [4, 13, 1]
      span: [565, 8, 20]
    }
    location {
      path: [4, 13, 2, 0]
      span: [567, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 13, 2, 0, 4]
      span: [567, 2, 10]
    }
    location {
      path: [4, 13, 2, 0, 6]
      span: [567, 11, 30]
    }
    location {
      path: [4, 13, 2, 0, 1]
      span: [567, 31, 51]
    }
    location {
      path: [4, 13, 2, 0, 3]
      span: [567, 54, 57]
    }
    location {
      path: [4, 13, 5]
      span: [570, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 13, 5, 0]
      span: [570, 13, 24]
    }
    location {
      path: [4, 13, 5, 0, 1]
      span: [570, 13, 17]
    }
    location {
      path: [4, 13, 5, 0, 2]
      span: [570, 21, 24]
    }
    location {
      path: [4, 14]
      span: [573, 0, 592, 1]
    }
    location {
      path: [4, 14, 1]
      span: [573, 8, 19]
    }
    location {
      path: [4, 14, 2, 0]
      span: [577, 2, 32]
      leading_comments: " Set this option to true to allow mapping different tag names to the same\n value.\n"
    }
    location {
      path: [4, 14, 2, 0, 4]
      span: [577, 2, 10]
    }
    location {
      path: [4, 14, 2, 0, 5]
      span: [577, 11, 15]
    }
    location {
      path: [4, 14, 2, 0, 1]
      span: [577, 16, 27]
    }
    location {
      path: [4, 14, 2, 0, 3]
      span: [577, 30, 31]
    }
    location {
      path: [4, 14, 2, 1]
      span: [583, 2, 47]
      leading_comments: " Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n"
    }
    location {
      path: [4, 14, 2, 1, 4]
      span: [583, 2, 10]
    }
    location {
      path: [4, 14, 2, 1, 5]
      span: [583, 11, 15]
    }
    location {
      path: [4, 14, 2, 1, 1]
      span: [583, 16, 26]
    }
    location {
      path: [4, 14, 2, 1, 3]
      span: [583, 29, 30]
    }
    location {
      path: [4, 14, 2, 1, 8]
      span: [583, 31, 46]
    }
    location {
      path: [4, 14, 2, 1, 7]
      span: [583, 40, 45]
    }
    location {
      path: [4, 14, 9]
      span: [585, 11, 13]
      trailing_comments: " javanano_as_lite\n"
    }
    location {
      path: [4, 14, 9, 0]
      span: [585, 11, 12]
    }
    location {
      path: [4, 14, 9, 0, 1]
      span: [585, 11, 12]
    }
    location {
      path: [4, 14, 9, 0, 2]
      span: [585, 11, 12]
    }
    location {
      path: [4, 14, 2, 2]
      span: [588, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 14, 2, 2, 4]
      span: [588, 2, 10]
    }
    location {
      path: [4, 14, 2, 2, 6]
      span: [588, 11, 30]
    }
    location {
      path: [4, 14, 2, 2, 1]
      span: [588, 31, 51]
    }
    location {
      path: [4, 14, 2, 2, 3]
      span: [588, 54, 57]
    }
    location {
      path: [4, 14, 5]
      span: [591, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 14, 5, 0]
      span: [591, 13, 24]
    }
    location {
      path: [4, 14, 5, 0, 1]
      span: [591, 13, 17]
    }
    location {
      path: [4, 14, 5, 0, 2]
      span: [591, 21, 24]
    }
    location {
      path: [4, 15]
      span: [594, 0, 606, 1]
    }
    location {
      path: [4, 15, 1]
      span: [594, 8, 24]
    }
    location {
      path: [4, 15, 2, 0]
      span: [599, 2, 47]
      leading_comments: " Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n"
    }
    location {
      path: [4, 15, 2, 0, 4]
      span: [599, 2, 10]
    }
    location {
      path: [4, 15, 2, 0, 5]
      span: [599, 11, 15]
    }
    location {
      path: [4, 15, 2, 0, 1]
      span: [599, 16, 26]
    }
    location {
      path: [4, 15, 2, 0, 3]
      span: [599, 29, 30]
    }
    location {
      path: [4, 15, 2, 0, 8]
      span: [599, 31, 46]
    }
    location {
      path: [4, 15, 2, 0, 7]
      span: [599, 40, 45]
    }
    location {
      path: [4, 15, 2, 1]
      span: [602, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 15, 2, 1, 4]
      span: [602, 2, 10]
    }
    location {
      path: [4, 15, 2, 1, 6]
      span: [602, 11, 30]
    }
    location {
      path: [4, 15, 2, 1, 1]
      span: [602, 31, 51]
    }
    location {
      path: [4, 15, 2, 1, 3]
      span: [602, 54, 57]
    }
    location {
      path: [4, 15, 5]
      span: [605, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 15, 5, 0]
      span: [605, 13, 24]
    }
    location {
      path: [4, 15, 5, 0, 1]
      span: [605, 13, 17]
    }
    location {
      path: [4, 15, 5, 0, 2]
      span: [605, 21, 24]
    }
    location {
      path: [4, 16]
      span: [608, 0, 626, 1]
    }
    location {
      path: [4, 16, 1]
      span: [608, 8, 22]
    }
    location {
      path: [4, 16, 2, 0]
      span: [619, 2, 48]
      leading_comments: " Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n"
      leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"
    }
    location {
      path: [4, 16, 2, 0, 4]
      span: [619, 2, 10]
    }
    location {
      path: [4, 16, 2, 0, 5]
      span: [619, 11, 15]
    }
    location {
      path: [4, 16, 2, 0, 1]
      span: [619, 16, 26]
    }
    location {
      path: [4, 16, 2, 0, 3]
      span: [619, 29, 31]
    }
    location {
      path: [4, 16, 2, 0, 8]
      span: [619, 32, 47]
    }
    location {
      path: [4, 16, 2, 0, 7]
      span: [619, 41, 46]
    }
    location {
      path: [4, 16, 2, 1]
      span: [622, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 16, 2, 1, 4]
      span: [622, 2, 10]
    }
    location {
      path: [4, 16, 2, 1, 6]
      span: [622, 11, 30]
    }
    location {
      path: [4, 16, 2, 1, 1]
      span: [622, 31, 51]
    }
    location {
      path: [4, 16, 2, 1, 3]
      span: [622, 54, 57]
    }
    location {
      path: [4, 16, 5]
      span: [625, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 16, 5, 0]
      span: [625, 13, 24]
    }
    location {
      path: [4, 16, 5, 0, 1]
      span: [625, 13, 17]
    }
    location {
      path: [4, 16, 5, 0, 2]
      span: [625, 21, 24]
    }
    location {
      path: [4, 17]
      span: [628, 0, 657, 1]
    }
    location {
      path: [4, 17, 1]
      span: [628, 8, 21]
    }
    location {
      path: [4, 17, 2, 0]
      span: [639, 2, 48]
      leading_comments: " Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n"
      leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"
    }
    location {
      path: [4, 17, 2, 0, 4]
      span: [639, 2, 10]
    }
    location {
      path: [4, 17, 2, 0, 5]
      span: [639, 11, 15]
    }
    location {
      path: [4, 17, 2, 0, 1]
      span: [639, 16, 26]
    }
    location {
      path: [4, 17, 2, 0, 3]
      span: [639, 29, 31]
    }
    location {
      path: [4, 17, 2, 0, 8]
      span: [639, 32, 47]
    }
    location {
      path: [4, 17, 2, 0, 7]
      span: [639, 41, 46]
    }
    location {
      path: [4, 17, 4, 0]
      span: [644, 2, 648, 3]
      leading_comments: " Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n"
    }
    location {
      path: [4, 17, 4, 0, 1]
      span: [644, 7, 23]
    }
    location {
      path: [4, 17, 4, 0, 2, 0]
      span: [645, 4, 28]
    }
    location {
      path: [4, 17, 4, 0, 2, 0, 1]
      span: [645, 4, 23]
    }
    location {
      path: [4, 17, 4, 0, 2, 0, 2]
      span: [645, 26, 27]
    }
    location {
      path: [4, 17, 4, 0, 2, 1]
      span: [646, 4, 28]
      trailing_comments: " implies idempotent\n"
    }
    location {
      path: [4, 17, 4, 0, 2, 1, 1]
      span: [646, 4, 19]
    }
    location {
      path: [4, 17, 4, 0, 2, 1, 2]
      span: [646, 26, 27]
    }
    location {
      path: [4, 17, 4, 0, 2, 2]
      span: [647, 4, 28]
      trailing_comments: " idempotent, but may have side effects\n"
    }
    location {
      path: [4, 17, 4, 0, 2, 2, 1]
      span: [647, 4, 14]
    }
    location {
      path: [4, 17, 4, 0, 2, 2, 2]
      span: [647, 26, 27]
    }
    location {
      path: [4, 17, 2, 1]
      span: [649, 2, 650, 39]
    }
    location {
      path: [4, 17, 2, 1, 4]
      span: [649, 2, 10]
    }
    location {
      path: [4, 17, 2, 1, 6]
      span: [649, 11, 27]
    }
    location {
      path: [4, 17, 2, 1, 1]
      span: [649, 28, 45]
    }
    location {
      path: [4, 17, 2, 1, 3]
      span: [650, 6, 8]
    }
    location {
      path: [4, 17, 2, 1, 8]
      span: [650, 9, 38]
    }
    location {
      path: [4, 17, 2, 1, 7]
      span: [650, 18, 37]
    }
    location {
      path: [4, 17, 2, 2]
      span: [653, 2, 58]
      leading_comments: " The parser stores options it doesn't recognize here. See above.\n"
    }
    location {
      path: [4, 17, 2, 2, 4]
      span: [653, 2, 10]
    }
    location {
      path: [4, 17, 2, 2, 6]
      span: [653, 11, 30]
    }
    location {
      path: [4, 17, 2, 2, 1]
      span: [653, 31, 51]
    }
    location {
      path: [4, 17, 2, 2, 3]
      span: [653, 54, 57]
    }
    location {
      path: [4, 17, 5]
      span: [656, 2, 25]
      leading_comments: " Clients can define custom options in extensions of this message. See above.\n"
    }
    location {
      path: [4, 17, 5, 0]
      span: [656, 13, 24]
    }
    location {
      path: [4, 17, 5, 0, 1]
      span: [656, 13, 17]
    }
    location {
      path: [4, 17, 5, 0, 2]
      span: [656, 21, 24]
    }
    location {
      path: [4, 18]
      span: [666, 0, 686, 1]
      leading_comments: " A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n"
    }
    location {
      path: [4, 18, 1]
      span: [666, 8, 27]
    }
    location {
      path: [4, 18, 3, 0]
      span: [672, 2, 675, 3]
      leading_comments: " The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n \"foo.(bar.baz).qux\".\n"
    }
    location {
      path: [4, 18, 3, 0, 1]
      span: [672, 10, 18]
    }
    location {
      path: [4, 18, 3, 0, 2, 0]
      span: [673, 4, 34]
    }
    location {
      path: [4, 18, 3, 0, 2, 0, 4]
      span: [673, 4, 12]
    }
    location {
      path: [4, 18, 3, 0, 2, 0, 5]
      span: [673, 13, 19]
    }
    location {
      path: [4, 18, 3, 0, 2, 0, 1]
      span: [673, 20, 29]
    }
    location {
      path: [4, 18, 3, 0, 2, 0, 3]
      span: [673, 32, 33]
    }
    location {
      path: [4, 18, 3, 0, 2, 1]
      span: [674, 4, 35]
    }
    location {
      path: [4, 18, 3, 0, 2, 1, 4]
      span: [674, 4, 12]
    }
    location {
      path: [4, 18, 3, 0, 2, 1, 5]
      span: [674, 13, 17]
    }
    location {
      path: [4, 18, 3, 0, 2, 1, 1]
      span: [674, 18, 30]
    }
    location {
      path: [4, 18, 3, 0, 2, 1, 3]
      span: [674, 33, 34]
    }
    location {
      path: [4, 18, 2, 0]
      span: [676, 2, 29]
    }
    location {
      path: [4, 18, 2, 0, 4]
      span: [676, 2, 10]
    }
    location {
      path: [4, 18, 2, 0, 6]
      span: [676, 11, 19]
    }
    location {
      path: [4, 18, 2, 0, 1]
      span: [676, 20, 24]
    }
    location {
      path: [4, 18, 2, 0, 3]
      span: [676, 27, 28]
    }
    location {
      path: [4, 18, 2, 1]
      span: [680, 2, 39]
      leading_comments: " The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n"
    }
    location {
      path: [4, 18, 2, 1, 4]
      span: [680, 2, 10]
    }
    location {
      path: [4, 18, 2, 1, 5]
      span: [680, 11, 17]
    }
    location {
      path: [4, 18, 2, 1, 1]
      span: [680, 18, 34]
    }
    location {
      path: [4, 18, 2, 1, 3]
      span: [680, 37, 38]
    }
    location {
      path: [4, 18, 2, 2]
      span: [681, 2, 41]
    }
    location {
      path: [4, 18, 2, 2, 4]
      span: [681, 2, 10]
    }
    location {
      path: [4, 18, 2, 2, 5]
      span: [681, 11, 17]
    }
    location {
      path: [4, 18, 2, 2, 1]
      span: [681, 18, 36]
    }
    location {
      path: [4, 18, 2, 2, 3]
      span: [681, 39, 40]
    }
    location {
      path: [4, 18, 2, 3]
      span: [682, 2, 40]
    }
    location {
      path: [4, 18, 2, 3, 4]
      span: [682, 2, 10]
    }
    location {
      path: [4, 18, 2, 3, 5]
      span: [682, 11, 16]
    }
    location {
      path: [4, 18, 2, 3, 1]
      span: [682, 17, 35]
    }
    location {
      path: [4, 18, 2, 3, 3]
      span: [682, 38, 39]
    }
    location {
      path: [4, 18, 2, 4]
      span: [683, 2, 35]
    }
    location {
      path: [4, 18, 2, 4, 4]
      span: [683, 2, 10]
    }
    location {
      path: [4, 18, 2, 4, 5]
      span: [683, 11, 17]
    }
    location {
      path: [4, 18, 2, 4, 1]
      span: [683, 18, 30]
    }
    location {
      path: [4, 18, 2, 4, 3]
      span: [683, 33, 34]
    }
    location {
      path: [4, 18, 2, 5]
      span: [684, 2, 34]
    }
    location {
      path: [4, 18, 2, 5, 4]
      span: [684, 2, 10]
    }
    location {
      path: [4, 18, 2, 5, 5]
      span: [684, 11, 16]
    }
    location {
      path: [4, 18, 2, 5, 1]
      span: [684, 17, 29]
    }
    location {
      path: [4, 18, 2, 5, 3]
      span: [684, 32, 33]
    }
    location {
      path: [4, 18, 2, 6]
      span: [685, 2, 38]
    }
    location {
      path: [4, 18, 2, 6, 4]
      span: [685, 2, 10]
    }
    location {
      path: [4, 18, 2, 6, 5]
      span: [685, 11, 17]
    }
    location {
      path: [4, 18, 2, 6, 1]
      span: [685, 18, 33]
    }
    location {
      path: [4, 18, 2, 6, 3]
      span: [685, 36, 37]
    }
    location {
      path: [4, 19]
      span: [693, 0, 822, 1]
      leading_comments: " Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n"
      leading_detached_comments: " ===================================================================\n Optional source code info\n"
    }
    location {
      path: [4, 19, 1]
      span: [693, 8, 22]
    }
    location {
      path: [4, 19, 2, 0]
      span: [737, 2, 33]
      leading_comments: " A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.\n\n For example, say we have a file like:\n   message Foo {\n     optional string foo = 1;\n   }\n Let's look at just the field definition:\n   optional string foo = 1;\n   ^       ^^     ^^  ^  ^^^\n   a       bc     de  f  ghi\n We have the following locations:\n   span   path               represents\n   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n\n Notes:\n - A location may refer to a repeated field itself (i.e. not to any\n   particular index within it).  This is used whenever a set of elements are\n   logically enclosed in a single code segment.  For example, an entire\n   extend block (possibly containing multiple extension definitions) will\n   have an outer location whose path refers to the \"extensions\" repeated\n   field without an index.\n - Multiple locations may have the same path.  This happens when a single\n   logical declaration is spread out across multiple places.  The most\n   obvious example is the \"extend\" block again -- there may be multiple\n   extend blocks in the same scope, each of which will have the same path.\n - A location's span is not always a subset of its parent's span.  For\n   example, the \"extendee\" of an extension declaration appears at the\n   beginning of the \"extend\" block and is shared by all extensions within\n   the block.\n - Just because a location's span is a subset of some other location's span\n   does not mean that it is a descendent.  For example, a \"group\" defines\n   both a type and a field in a single declaration.  Thus, the locations\n   corresponding to the type and field and their components will overlap.\n - Code which tries to interpret locations should probably be designed to\n   ignore those that it doesn't understand, as more types of locations could\n   be recorded in the future.\n"
    }
    location {
      path: [4, 19, 2, 0, 4]
      span: [737, 2, 10]
    }
    location {
      path: [4, 19, 2, 0, 6]
      span: [737, 11, 19]
    }
    location {
      path: [4, 19, 2, 0, 1]
      span: [737, 20, 28]
    }
    location {
      path: [4, 19, 2, 0, 3]
      span: [737, 31, 32]
    }
    location {
      path: [4, 19, 3, 0]
      span: [738, 2, 821, 3]
    }
    location {
      path: [4, 19, 3, 0, 1]
      span: [738, 10, 18]
    }
    location {
      path: [4, 19, 3, 0, 2, 0]
      span: [762, 4, 42]
      leading_comments: " Identifies which part of the FileDescriptorProto was defined at this\n location.\n\n Each element is a field number or an index.  They form a path from\n the root FileDescriptorProto to the place where the definition.  For\n example, this path:\n   [ 4, 3, 2, 7, 1 ]\n refers to:\n   file.message_type(3)  // 4, 3\n       .field(7)         // 2, 7\n       .name()           // 1\n This is because FileDescriptorProto.message_type has field number 4:\n   repeated DescriptorProto message_type = 4;\n and DescriptorProto.field has field number 2:\n   repeated FieldDescriptorProto field = 2;\n and FieldDescriptorProto.name has field number 1:\n   optional string name = 1;\n\n Thus, the above path gives the location of a field name.  If we removed\n the last element:\n   [ 4, 3, 2, 7 ]\n this path refers to the whole field declaration (from the beginning\n of the label to the terminating semicolon).\n"
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 4]
      span: [762, 4, 12]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 5]
      span: [762, 13, 18]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 1]
      span: [762, 19, 23]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 3]
      span: [762, 26, 27]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 8]
      span: [762, 28, 41]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 8, 999, 0]
      span: [762, 29, 40]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 8, 999, 0, 2]
      span: [762, 29, 35]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [762, 29, 35]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [762, 29, 35]
    }
    location {
      path: [4, 19, 3, 0, 2, 0, 8, 999, 0, 3]
      span: [762, 36, 40]
    }
    location {
      path: [4, 19, 3, 0, 2, 1]
      span: [769, 4, 42]
      leading_comments: " Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n"
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 4]
      span: [769, 4, 12]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 5]
      span: [769, 13, 18]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 1]
      span: [769, 19, 23]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 3]
      span: [769, 26, 27]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 8]
      span: [769, 28, 41]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 8, 999, 0]
      span: [769, 29, 40]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 8, 999, 0, 2]
      span: [769, 29, 35]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [769, 29, 35]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [769, 29, 35]
    }
    location {
      path: [4, 19, 3, 0, 2, 1, 8, 999, 0, 3]
      span: [769, 36, 40]
    }
    location {
      path: [4, 19, 3, 0, 2, 2]
      span: [818, 4, 41]
      leading_comments: " If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.\n\n A series of line comments appearing on consecutive lines, with no other\n tokens appearing on those lines, will be treated as a single comment.\n\n leading_detached_comments will keep paragraphs of comments that appear\n before (but not connected to) the current element. Each paragraph,\n separated by empty lines, will be one comment element in the repeated\n field.\n\n Only the comment content is provided; comment markers (e.g. //) are\n stripped out.  For block comments, leading whitespace and an asterisk\n will be stripped from the beginning of each line other than the first.\n Newlines are included in the output.\n\n Examples:\n\n   optional int32 foo = 1;  // Comment attached to foo.\n   // Comment attached to bar.\n   optional int32 bar = 2;\n\n   optional string baz = 3;\n   // Comment attached to baz.\n   // Another line attached to baz.\n\n   // Comment attached to qux.\n   //\n   // Another line attached to qux.\n   optional double qux = 4;\n\n   // Detached comment for corge. This is not leading or trailing comments\n   // to qux or corge because there are blank lines separating it from\n   // both.\n\n   // Detached comment for corge paragraph 2.\n\n   optional string corge = 5;\n   /* Block comment attached\n    * to corge.  Leading asterisks\n    * will be removed. */\n   /* Block comment attached to\n    * grault. */\n   optional int32 grault = 6;\n\n   // ignored detached comments.\n"
    }
    location {
      path: [4, 19, 3, 0, 2, 2, 4]
      span: [818, 4, 12]
    }
    location {
      path: [4, 19, 3, 0, 2, 2, 5]
      span: [818, 13, 19]
    }
    location {
      path: [4, 19, 3, 0, 2, 2, 1]
      span: [818, 20, 36]
    }
    location {
      path: [4, 19, 3, 0, 2, 2, 3]
      span: [818, 39, 40]
    }
    location {
      path: [4, 19, 3, 0, 2, 3]
      span: [819, 4, 42]
    }
    location {
      path: [4, 19, 3, 0, 2, 3, 4]
      span: [819, 4, 12]
    }
    location {
      path: [4, 19, 3, 0, 2, 3, 5]
      span: [819, 13, 19]
    }
    location {
      path: [4, 19, 3, 0, 2, 3, 1]
      span: [819, 20, 37]
    }
    location {
      path: [4, 19, 3, 0, 2, 3, 3]
      span: [819, 40, 41]
    }
    location {
      path: [4, 19, 3, 0, 2, 4]
      span: [820, 4, 50]
    }
    location {
      path: [4, 19, 3, 0, 2, 4, 4]
      span: [820, 4, 12]
    }
    location {
      path: [4, 19, 3, 0, 2, 4, 5]
      span: [820, 13, 19]
    }
    location {
      path: [4, 19, 3, 0, 2, 4, 1]
      span: [820, 20, 45]
    }
    location {
      path: [4, 19, 3, 0, 2, 4, 3]
      span: [820, 48, 49]
    }
    location {
      path: [4, 20]
      span: [827, 0, 848, 1]
      leading_comments: " Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n"
    }
    location {
      path: [4, 20, 1]
      span: [827, 8, 25]
    }
    location {
      path: [4, 20, 2, 0]
      span: [830, 2, 37]
      leading_comments: " An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n"
    }
    location {
      path: [4, 20, 2, 0, 4]
      span: [830, 2, 10]
    }
    location {
      path: [4, 20, 2, 0, 6]
      span: [830, 11, 21]
    }
    location {
      path: [4, 20, 2, 0, 1]
      span: [830, 22, 32]
    }
    location {
      path: [4, 20, 2, 0, 3]
      span: [830, 35, 36]
    }
    location {
      path: [4, 20, 3, 0]
      span: [831, 2, 847, 3]
    }
    location {
      path: [4, 20, 3, 0, 1]
      span: [831, 10, 20]
    }
    location {
      path: [4, 20, 3, 0, 2, 0]
      span: [834, 4, 42]
      leading_comments: " Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n"
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 4]
      span: [834, 4, 12]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 5]
      span: [834, 13, 18]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 1]
      span: [834, 19, 23]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 3]
      span: [834, 26, 27]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 8]
      span: [834, 28, 41]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 8, 999, 0]
      span: [834, 29, 40]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 8, 999, 0, 2]
      span: [834, 29, 35]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [834, 29, 35]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [834, 29, 35]
    }
    location {
      path: [4, 20, 3, 0, 2, 0, 8, 999, 0, 3]
      span: [834, 36, 40]
    }
    location {
      path: [4, 20, 3, 0, 2, 1]
      span: [837, 4, 36]
      leading_comments: " Identifies the filesystem path to the original source .proto.\n"
    }
    location {
      path: [4, 20, 3, 0, 2, 1, 4]
      span: [837, 4, 12]
    }
    location {
      path: [4, 20, 3, 0, 2, 1, 5]
      span: [837, 13, 19]
    }
    location {
      path: [4, 20, 3, 0, 2, 1, 1]
      span: [837, 20, 31]
    }
    location {
      path: [4, 20, 3, 0, 2, 1, 3]
      span: [837, 34, 35]
    }
    location {
      path: [4, 20, 3, 0, 2, 2]
      span: [841, 4, 29]
      leading_comments: " Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n"
    }
    location {
      path: [4, 20, 3, 0, 2, 2, 4]
      span: [841, 4, 12]
    }
    location {
      path: [4, 20, 3, 0, 2, 2, 5]
      span: [841, 13, 18]
    }
    location {
      path: [4, 20, 3, 0, 2, 2, 1]
      span: [841, 19, 24]
    }
    location {
      path: [4, 20, 3, 0, 2, 2, 3]
      span: [841, 27, 28]
    }
    location {
      path: [4, 20, 3, 0, 2, 3]
      span: [846, 4, 27]
      leading_comments: " Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n"
    }
    location {
      path: [4, 20, 3, 0, 2, 3, 4]
      span: [846, 4, 12]
    }
    location {
      path: [4, 20, 3, 0, 2, 3, 5]
      span: [846, 13, 18]
    }
    location {
      path: [4, 20, 3, 0, 2, 3, 1]
      span: [846, 19, 22]
    }
    location {
      path: [4, 20, 3, 0, 2, 3, 3]
      span: [846, 25, 26]
    }
  }
}
proto_file {
  name: "bq_field.proto"
  package: "gen_bq_schema"
  dependency: "google/protobuf/descriptor.proto"
  extension {
    name: "require"
    extendee: ".google.protobuf.FieldOptions"
    number: 1022
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "require"
  }
  extension {
    name: "type_override"
    extendee: ".google.protobuf.FieldOptions"
    number: 1023
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "typeOverride"
  }
  extension {
    name: "ignore"
    extendee: ".google.protobuf.FieldOptions"
    number: 1024
    label: LABEL_OPTIONAL
    type: TYPE_BOOL
    json_name: "ignore"
  }
  extension {
    name: "description"
    extendee: ".google.protobuf.FieldOptions"
    number: 1025
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "description"
  }
  options {
    go_package: "protos"
  }
  source_code_info {
    location {
      span: [14, 0, 45, 1]
    }
    location {
      path: [12]
      span: [14, 0, 18]
      leading_detached_comments: " Copyright 2014 Google Inc. All rights reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
    }
    location {
      path: [2]
      span: [15, 8, 21]
    }
    location {
      path: [8]
      span: [17, 0, 29]
    }
    location {
      path: [8, 999, 0]
      span: [17, 0, 29]
    }
    location {
      path: [8, 999, 0, 2]
      span: [17, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [17, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [17, 7, 17]
    }
    location {
      path: [8, 999, 0, 7]
      span: [17, 20, 28]
    }
    location {
      path: [3, 0]
      span: [19, 7, 41]
    }
    location {
      path: [7]
      span: [21, 0, 45, 1]
    }
    location {
      path: [7, 0]
      span: [26, 2, 22]
      leading_comments: " Flag to specify that a field should be marked as 'REQUIRED' when\n used to generate schema for BigQuery.\n\n TODO: register with protobuf-global-extension-registry@google.com\n"
    }
    location {
      path: [7, 0, 2]
      span: [21, 7, 35]
    }
    location {
      path: [7, 0, 4]
      span: [26, 2, 21, 37]
    }
    location {
      path: [7, 0, 5]
      span: [26, 2, 6]
    }
    location {
      path: [7, 0, 1]
      span: [26, 7, 14]
    }
    location {
      path: [7, 0, 3]
      span: [26, 17, 21]
    }
    location {
      path: [7, 1]
      span: [34, 2, 30]
      leading_comments: " Optionally override whatever type is resolved by the schema\n generator. This is useful, for example, to store epoch timestamps\n with the underlying 'TIMESTAMP' type, when normally, they would\n be structured as 'INTEGER' fields.\n\n TODO: register with protobuf-global-extension-registry@google.com\n"
    }
    location {
      path: [7, 1, 2]
      span: [21, 7, 35]
    }
    location {
      path: [7, 1, 4]
      span: [34, 2, 26, 22]
    }
    location {
      path: [7, 1, 5]
      span: [34, 2, 8]
    }
    location {
      path: [7, 1, 1]
      span: [34, 9, 22]
    }
    location {
      path: [7, 1, 3]
      span: [34, 25, 29]
    }
    location {
      path: [7, 2]
      span: [39, 2, 21]
      leading_comments: " Optionally omit a field from BigQuery schema.\n\n TODO: register with protobuf-global-extension-registry@google.com\n"
    }
    location {
      path: [7, 2, 2]
      span: [21, 7, 35]
    }
    location {
      path: [7, 2, 4]
      span: [39, 2, 34, 30]
    }
    location {
      path: [7, 2, 5]
      span: [39, 2, 6]
    }
    location {
      path: [7, 2, 1]
      span: [39, 7, 13]
    }
    location {
      path: [7, 2, 3]
      span: [39, 16, 20]
    }
    location {
      path: [7, 3]
      span: [44, 2, 28]
      leading_comments: " Set the description for a field in BigQuery schema.\n\n TODO: register with protobuf-global-extension-registry@google.com\n"
    }
    location {
      path: [7, 3, 2]
      span: [21, 7, 35]
    }
    location {
      path: [7, 3, 4]
      span: [44, 2, 39, 21]
    }
    location {
      path: [7, 3, 5]
      span: [44, 2, 8]
    }
    location {
      path: [7, 3, 1]
      span: [44, 9, 20]
    }
    location {
      path: [7, 3, 3]
      span: [44, 23, 27]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "bq_table.proto"
  package: "gen_bq_schema"
  dependency: "google/protobuf/descriptor.proto"
  extension {
    name: "table_name"
    extendee: ".google.protobuf.MessageOptions"
    number: 1021
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "tableName"
  }
  extension {
    name: "table_description"
    extendee: ".google.protobuf.MessageOptions"
    number: 1026
    label: LABEL_OPTIONAL
    type: TYPE_STRING
    json_name: "tableDescription"
  }
  options {
    go_package: "protos"
  }
  source_code_info {
    location {
      span: [14, 0, 33, 1]
    }
    location {
      path: [12]
      span: [14, 0, 18]
      leading_detached_comments: " Copyright 2014 Google Inc. All rights reserved.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
    }
    location {
      path: [2]
      span: [15, 8, 21]
    }
    location {
      path: [8]
      span: [17, 0, 29]
    }
    location {
      path: [8, 999, 0]
      span: [17, 0, 29]
    }
    location {
      path: [8, 999, 0, 2]
      span: [17, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [17, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [17, 7, 17]
    }
    location {
      path: [8, 999, 0, 7]
      span: [17, 20, 28]
    }
    location {
      path: [3, 0]
      span: [19, 7, 41]
    }
    location {
      path: [7]
      span: [21, 0, 33, 1]
    }
    location {
      path: [7, 0]
      span: [27, 2, 27]
      leading_comments: " Specified a name of table in BigQuery for the message.\n Indicates the message is a type of record to be stored into BigQuery.\n\n The field number is a globally unique id for this option, assigned by\n protobuf-global-extension-registry@google.com\n"
    }
    location {
      path: [7, 0, 2]
      span: [21, 7, 37]
    }
    location {
      path: [7, 0, 4]
      span: [27, 2, 21, 39]
    }
    location {
      path: [7, 0, 5]
      span: [27, 2, 8]
    }
    location {
      path: [7, 0, 1]
      span: [27, 9, 19]
    }
    location {
      path: [7, 0, 3]
      span: [27, 22, 26]
    }
    location {
      path: [7, 1]
      span: [32, 2, 34]
      leading_comments: " Description for a table in BigQuery.\n\n TODO: register with protobuf-global-extension-registry@google.com\n"
    }
    location {
      path: [7, 1, 2]
      span: [21, 7, 37]
    }
    location {
      path: [7, 1, 4]
      span: [32, 2, 27, 27]
    }
    location {
      path: [7, 1, 5]
      span: [32, 2, 8]
    }
    location {
      path: [7, 1, 1]
      span: [32, 9, 26]
    }
    location {
      path: [7, 1, 3]
      span: [32, 29, 33]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "temporal/Date.proto"
  package: "temporal"
  dependency: "bq_field.proto"
  message_type {
    name: "Date"
    field {
      name: "iso8601"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "ISO8601-formatted calendar date value, like YYYY-MM-DD."
      }
      oneof_index: 0
      json_name: "iso8601"
    }
    oneof_decl {
      name: "spec"
    }
  }
  options {
    java_package: "io.bloombox.schema.temporal"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 21, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [4, 0]
      span: [13, 0, 21, 1]
      leading_comments: " Specifies a particular calendar date.\n"
    }
    location {
      path: [4, 0, 1]
      span: [13, 8, 12]
    }
    location {
      path: [4, 0, 8, 0]
      span: [15, 2, 20, 3]
      leading_comments: " Date specification option.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [15, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [17, 4, 19, 6]
      leading_comments: " ISO8601-formatted calendar date value, like YYYY-MM-DD.\n"
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [17, 4, 10]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [17, 11, 18]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [17, 21, 22]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [17, 23, 19, 5]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [18, 6, 93]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [18, 6, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [18, 6, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [18, 7, 32]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [18, 36, 93]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "geo/USState.proto"
  package: "geo.usa"
  enum_type {
    name: "USState"
    value {
      name: "UNSPECIFIED"
      number: 0
    }
    value {
      name: "AL"
      number: 1
    }
    value {
      name: "ALABAMA"
      number: 1
    }
    value {
      name: "AK"
      number: 2
    }
    value {
      name: "ALASKA"
      number: 2
    }
    value {
      name: "AZ"
      number: 3
    }
    value {
      name: "ARIZONA"
      number: 3
    }
    value {
      name: "AR"
      number: 4
    }
    value {
      name: "ARKANSAS"
      number: 4
    }
    value {
      name: "CA"
      number: 5
    }
    value {
      name: "CALIFORNIA"
      number: 5
    }
    value {
      name: "CO"
      number: 6
    }
    value {
      name: "COLORADO"
      number: 6
    }
    value {
      name: "CT"
      number: 7
    }
    value {
      name: "CONNECTICUT"
      number: 7
    }
    value {
      name: "DE"
      number: 8
    }
    value {
      name: "Delaware"
      number: 8
    }
    value {
      name: "DC"
      number: 9
    }
    value {
      name: "DISTRICT_OF_COLUMBIA"
      number: 9
    }
    value {
      name: "FL"
      number: 10
    }
    value {
      name: "FLORIDA"
      number: 10
    }
    value {
      name: "GA"
      number: 11
    }
    value {
      name: "GEORGIA"
      number: 11
    }
    value {
      name: "HI"
      number: 12
    }
    value {
      name: "HAWAII"
      number: 12
    }
    value {
      name: "ID"
      number: 13
    }
    value {
      name: "IDAHO"
      number: 13
    }
    value {
      name: "IL"
      number: 14
    }
    value {
      name: "ILLINOIS"
      number: 14
    }
    value {
      name: "IN"
      number: 15
    }
    value {
      name: "INDIANA"
      number: 15
    }
    value {
      name: "IA"
      number: 16
    }
    value {
      name: "IOWA"
      number: 16
    }
    value {
      name: "KS"
      number: 17
    }
    value {
      name: "KANSAS"
      number: 17
    }
    value {
      name: "KY"
      number: 18
    }
    value {
      name: "KENTUCKY"
      number: 18
    }
    value {
      name: "LA"
      number: 19
    }
    value {
      name: "LOISIANA"
      number: 19
    }
    value {
      name: "ME"
      number: 20
    }
    value {
      name: "MAINE"
      number: 20
    }
    value {
      name: "MD"
      number: 21
    }
    value {
      name: "MARYLAND"
      number: 21
    }
    value {
      name: "MA"
      number: 22
    }
    value {
      name: "MASSACHUSETTS"
      number: 22
    }
    value {
      name: "MI"
      number: 23
    }
    value {
      name: "MICHIGAN"
      number: 23
    }
    value {
      name: "MN"
      number: 24
    }
    value {
      name: "MINNESOTA"
      number: 24
    }
    value {
      name: "MS"
      number: 25
    }
    value {
      name: "MISSISSIPPI"
      number: 25
    }
    value {
      name: "MO"
      number: 26
    }
    value {
      name: "MISSOURI"
      number: 26
    }
    value {
      name: "MT"
      number: 27
    }
    value {
      name: "MONTANA"
      number: 27
    }
    value {
      name: "NE"
      number: 28
    }
    value {
      name: "NEBRASKA"
      number: 28
    }
    value {
      name: "NV"
      number: 29
    }
    value {
      name: "NEVADA"
      number: 29
    }
    value {
      name: "NH"
      number: 30
    }
    value {
      name: "NEW_HAMPSHIRE"
      number: 30
    }
    value {
      name: "NJ"
      number: 31
    }
    value {
      name: "NEW_JERSEY"
      number: 31
    }
    value {
      name: "NM"
      number: 32
    }
    value {
      name: "NEW_MEXICO"
      number: 32
    }
    value {
      name: "NY"
      number: 33
    }
    value {
      name: "NEW_YORK"
      number: 33
    }
    value {
      name: "NC"
      number: 34
    }
    value {
      name: "NORTH_CAROLINA"
      number: 34
    }
    value {
      name: "ND"
      number: 35
    }
    value {
      name: "NORTH_DAKOTA"
      number: 35
    }
    value {
      name: "OH"
      number: 36
    }
    value {
      name: "OHIO"
      number: 36
    }
    value {
      name: "OK"
      number: 37
    }
    value {
      name: "OKLAHOMA"
      number: 37
    }
    value {
      name: "OR"
      number: 38
    }
    value {
      name: "OREGON"
      number: 38
    }
    value {
      name: "PA"
      number: 39
    }
    value {
      name: "PENNSYLVANIA"
      number: 39
    }
    value {
      name: "RI"
      number: 40
    }
    value {
      name: "RHODE_ISLAND"
      number: 40
    }
    value {
      name: "SC"
      number: 41
    }
    value {
      name: "SOUTH_CAROLINA"
      number: 41
    }
    value {
      name: "SD"
      number: 42
    }
    value {
      name: "SOUTH_DAKOTA"
      number: 42
    }
    value {
      name: "TN"
      number: 43
    }
    value {
      name: "TENNESSEE"
      number: 43
    }
    value {
      name: "TX"
      number: 44
    }
    value {
      name: "TEXAS"
      number: 44
    }
    value {
      name: "UT"
      number: 45
    }
    value {
      name: "UTAH"
      number: 45
    }
    value {
      name: "VT"
      number: 46
    }
    value {
      name: "VERMONT"
      number: 46
    }
    value {
      name: "VA"
      number: 47
    }
    value {
      name: "VIRGINIA"
      number: 47
    }
    value {
      name: "WA"
      number: 48
    }
    value {
      name: "WASHINGTON"
      number: 48
    }
    value {
      name: "WV"
      number: 49
    }
    value {
      name: "WEST_VIRGINIA"
      number: 49
    }
    value {
      name: "WI"
      number: 50
    }
    value {
      name: "WISCONSIN"
      number: 50
    }
    value {
      name: "WYOMING"
      number: 51
    }
    value {
      name: "WY"
      number: 51
    }
    options {
      allow_alias: true
    }
  }
  options {
    java_package: "io.bloombox.schema.geo.usa"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 169, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [5, 0]
      span: [11, 0, 169, 1]
      leading_comments: " Enumerates USA member states and territories by their full name.\n"
    }
    location {
      path: [5, 0, 1]
      span: [11, 5, 12]
    }
    location {
      path: [5, 0, 3]
      span: [12, 2, 28]
    }
    location {
      path: [5, 0, 3, 999, 0]
      span: [12, 2, 28]
    }
    location {
      path: [5, 0, 3, 999, 0, 2]
      span: [12, 9, 20]
    }
    location {
      path: [5, 0, 3, 999, 0, 2, 0]
      span: [12, 9, 20]
    }
    location {
      path: [5, 0, 3, 999, 0, 2, 0, 1]
      span: [12, 9, 20]
    }
    location {
      path: [5, 0, 3, 999, 0, 3]
      span: [12, 23, 27]
    }
    location {
      path: [5, 0, 2, 0]
      span: [15, 2, 18]
      leading_comments: " Default: Unspecified.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [15, 2, 13]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [15, 16, 17]
    }
    location {
      path: [5, 0, 2, 1]
      span: [17, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [17, 2, 4]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [17, 7, 8]
    }
    location {
      path: [5, 0, 2, 2]
      span: [18, 2, 14]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [18, 2, 9]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [18, 12, 13]
    }
    location {
      path: [5, 0, 2, 3]
      span: [20, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [20, 2, 4]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [20, 7, 8]
    }
    location {
      path: [5, 0, 2, 4]
      span: [21, 2, 13]
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [21, 2, 8]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [21, 11, 12]
    }
    location {
      path: [5, 0, 2, 5]
      span: [23, 2, 9]
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [23, 2, 4]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [23, 7, 8]
    }
    location {
      path: [5, 0, 2, 6]
      span: [24, 2, 14]
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [24, 2, 9]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [24, 12, 13]
    }
    location {
      path: [5, 0, 2, 7]
      span: [26, 2, 9]
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [26, 2, 4]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [26, 7, 8]
    }
    location {
      path: [5, 0, 2, 8]
      span: [27, 2, 15]
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [27, 2, 10]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [27, 13, 14]
    }
    location {
      path: [5, 0, 2, 9]
      span: [29, 2, 9]
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [29, 2, 4]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [29, 7, 8]
    }
    location {
      path: [5, 0, 2, 10]
      span: [30, 2, 17]
    }
    location {
      path: [5, 0, 2, 10, 1]
      span: [30, 2, 12]
    }
    location {
      path: [5, 0, 2, 10, 2]
      span: [30, 15, 16]
    }
    location {
      path: [5, 0, 2, 11]
      span: [32, 2, 9]
    }
    location {
      path: [5, 0, 2, 11, 1]
      span: [32, 2, 4]
    }
    location {
      path: [5, 0, 2, 11, 2]
      span: [32, 7, 8]
    }
    location {
      path: [5, 0, 2, 12]
      span: [33, 2, 15]
    }
    location {
      path: [5, 0, 2, 12, 1]
      span: [33, 2, 10]
    }
    location {
      path: [5, 0, 2, 12, 2]
      span: [33, 13, 14]
    }
    location {
      path: [5, 0, 2, 13]
      span: [35, 2, 9]
    }
    location {
      path: [5, 0, 2, 13, 1]
      span: [35, 2, 4]
    }
    location {
      path: [5, 0, 2, 13, 2]
      span: [35, 7, 8]
    }
    location {
      path: [5, 0, 2, 14]
      span: [36, 2, 18]
    }
    location {
      path: [5, 0, 2, 14, 1]
      span: [36, 2, 13]
    }
    location {
      path: [5, 0, 2, 14, 2]
      span: [36, 16, 17]
    }
    location {
      path: [5, 0, 2, 15]
      span: [38, 2, 9]
    }
    location {
      path: [5, 0, 2, 15, 1]
      span: [38, 2, 4]
    }
    location {
      path: [5, 0, 2, 15, 2]
      span: [38, 7, 8]
    }
    location {
      path: [5, 0, 2, 16]
      span: [39, 2, 15]
    }
    location {
      path: [5, 0, 2, 16, 1]
      span: [39, 2, 10]
    }
    location {
      path: [5, 0, 2, 16, 2]
      span: [39, 13, 14]
    }
    location {
      path: [5, 0, 2, 17]
      span: [41, 2, 9]
    }
    location {
      path: [5, 0, 2, 17, 1]
      span: [41, 2, 4]
    }
    location {
      path: [5, 0, 2, 17, 2]
      span: [41, 7, 8]
    }
    location {
      path: [5, 0, 2, 18]
      span: [42, 2, 27]
    }
    location {
      path: [5, 0, 2, 18, 1]
      span: [42, 2, 22]
    }
    location {
      path: [5, 0, 2, 18, 2]
      span: [42, 25, 26]
    }
    location {
      path: [5, 0, 2, 19]
      span: [44, 2, 10]
    }
    location {
      path: [5, 0, 2, 19, 1]
      span: [44, 2, 4]
    }
    location {
      path: [5, 0, 2, 19, 2]
      span: [44, 7, 9]
    }
    location {
      path: [5, 0, 2, 20]
      span: [45, 2, 15]
    }
    location {
      path: [5, 0, 2, 20, 1]
      span: [45, 2, 9]
    }
    location {
      path: [5, 0, 2, 20, 2]
      span: [45, 12, 14]
    }
    location {
      path: [5, 0, 2, 21]
      span: [47, 2, 10]
    }
    location {
      path: [5, 0, 2, 21, 1]
      span: [47, 2, 4]
    }
    location {
      path: [5, 0, 2, 21, 2]
      span: [47, 7, 9]
    }
    location {
      path: [5, 0, 2, 22]
      span: [48, 2, 15]
    }
    location {
      path: [5, 0, 2, 22, 1]
      span: [48, 2, 9]
    }
    location {
      path: [5, 0, 2, 22, 2]
      span: [48, 12, 14]
    }
    location {
      path: [5, 0, 2, 23]
      span: [50, 2, 10]
    }
    location {
      path: [5, 0, 2, 23, 1]
      span: [50, 2, 4]
    }
    location {
      path: [5, 0, 2, 23, 2]
      span: [50, 7, 9]
    }
    location {
      path: [5, 0, 2, 24]
      span: [51, 2, 14]
    }
    location {
      path: [5, 0, 2, 24, 1]
      span: [51, 2, 8]
    }
    location {
      path: [5, 0, 2, 24, 2]
      span: [51, 11, 13]
    }
    location {
      path: [5, 0, 2, 25]
      span: [53, 2, 10]
    }
    location {
      path: [5, 0, 2, 25, 1]
      span: [53, 2, 4]
    }
    location {
      path: [5, 0, 2, 25, 2]
      span: [53, 7, 9]
    }
    location {
      path: [5, 0, 2, 26]
      span: [54, 2, 13]
    }
    location {
      path: [5, 0, 2, 26, 1]
      span: [54, 2, 7]
    }
    location {
      path: [5, 0, 2, 26, 2]
      span: [54, 10, 12]
    }
    location {
      path: [5, 0, 2, 27]
      span: [56, 2, 10]
    }
    location {
      path: [5, 0, 2, 27, 1]
      span: [56, 2, 4]
    }
    location {
      path: [5, 0, 2, 27, 2]
      span: [56, 7, 9]
    }
    location {
      path: [5, 0, 2, 28]
      span: [57, 2, 16]
    }
    location {
      path: [5, 0, 2, 28, 1]
      span: [57, 2, 10]
    }
    location {
      path: [5, 0, 2, 28, 2]
      span: [57, 13, 15]
    }
    location {
      path: [5, 0, 2, 29]
      span: [59, 2, 10]
    }
    location {
      path: [5, 0, 2, 29, 1]
      span: [59, 2, 4]
    }
    location {
      path: [5, 0, 2, 29, 2]
      span: [59, 7, 9]
    }
    location {
      path: [5, 0, 2, 30]
      span: [60, 2, 15]
    }
    location {
      path: [5, 0, 2, 30, 1]
      span: [60, 2, 9]
    }
    location {
      path: [5, 0, 2, 30, 2]
      span: [60, 12, 14]
    }
    location {
      path: [5, 0, 2, 31]
      span: [62, 2, 10]
    }
    location {
      path: [5, 0, 2, 31, 1]
      span: [62, 2, 4]
    }
    location {
      path: [5, 0, 2, 31, 2]
      span: [62, 7, 9]
    }
    location {
      path: [5, 0, 2, 32]
      span: [63, 2, 12]
    }
    location {
      path: [5, 0, 2, 32, 1]
      span: [63, 2, 6]
    }
    location {
      path: [5, 0, 2, 32, 2]
      span: [63, 9, 11]
    }
    location {
      path: [5, 0, 2, 33]
      span: [65, 2, 10]
    }
    location {
      path: [5, 0, 2, 33, 1]
      span: [65, 2, 4]
    }
    location {
      path: [5, 0, 2, 33, 2]
      span: [65, 7, 9]
    }
    location {
      path: [5, 0, 2, 34]
      span: [66, 2, 14]
    }
    location {
      path: [5, 0, 2, 34, 1]
      span: [66, 2, 8]
    }
    location {
      path: [5, 0, 2, 34, 2]
      span: [66, 11, 13]
    }
    location {
      path: [5, 0, 2, 35]
      span: [68, 2, 10]
    }
    location {
      path: [5, 0, 2, 35, 1]
      span: [68, 2, 4]
    }
    location {
      path: [5, 0, 2, 35, 2]
      span: [68, 7, 9]
    }
    location {
      path: [5, 0, 2, 36]
      span: [69, 2, 16]
    }
    location {
      path: [5, 0, 2, 36, 1]
      span: [69, 2, 10]
    }
    location {
      path: [5, 0, 2, 36, 2]
      span: [69, 13, 15]
    }
    location {
      path: [5, 0, 2, 37]
      span: [71, 2, 10]
    }
    location {
      path: [5, 0, 2, 37, 1]
      span: [71, 2, 4]
    }
    location {
      path: [5, 0, 2, 37, 2]
      span: [71, 7, 9]
    }
    location {
      path: [5, 0, 2, 38]
      span: [72, 2, 16]
    }
    location {
      path: [5, 0, 2, 38, 1]
      span: [72, 2, 10]
    }
    location {
      path: [5, 0, 2, 38, 2]
      span: [72, 13, 15]
    }
    location {
      path: [5, 0, 2, 39]
      span: [74, 2, 10]
    }
    location {
      path: [5, 0, 2, 39, 1]
      span: [74, 2, 4]
    }
    location {
      path: [5, 0, 2, 39, 2]
      span: [74, 7, 9]
    }
    location {
      path: [5, 0, 2, 40]
      span: [75, 2, 13]
    }
    location {
      path: [5, 0, 2, 40, 1]
      span: [75, 2, 7]
    }
    location {
      path: [5, 0, 2, 40, 2]
      span: [75, 10, 12]
    }
    location {
      path: [5, 0, 2, 41]
      span: [77, 2, 10]
    }
    location {
      path: [5, 0, 2, 41, 1]
      span: [77, 2, 4]
    }
    location {
      path: [5, 0, 2, 41, 2]
      span: [77, 7, 9]
    }
    location {
      path: [5, 0, 2, 42]
      span: [78, 2, 16]
    }
    location {
      path: [5, 0, 2, 42, 1]
      span: [78, 2, 10]
    }
    location {
      path: [5, 0, 2, 42, 2]
      span: [78, 13, 15]
    }
    location {
      path: [5, 0, 2, 43]
      span: [80, 2, 10]
    }
    location {
      path: [5, 0, 2, 43, 1]
      span: [80, 2, 4]
    }
    location {
      path: [5, 0, 2, 43, 2]
      span: [80, 7, 9]
    }
    location {
      path: [5, 0, 2, 44]
      span: [81, 2, 21]
    }
    location {
      path: [5, 0, 2, 44, 1]
      span: [81, 2, 15]
    }
    location {
      path: [5, 0, 2, 44, 2]
      span: [81, 18, 20]
    }
    location {
      path: [5, 0, 2, 45]
      span: [83, 2, 10]
    }
    location {
      path: [5, 0, 2, 45, 1]
      span: [83, 2, 4]
    }
    location {
      path: [5, 0, 2, 45, 2]
      span: [83, 7, 9]
    }
    location {
      path: [5, 0, 2, 46]
      span: [84, 2, 16]
    }
    location {
      path: [5, 0, 2, 46, 1]
      span: [84, 2, 10]
    }
    location {
      path: [5, 0, 2, 46, 2]
      span: [84, 13, 15]
    }
    location {
      path: [5, 0, 2, 47]
      span: [86, 2, 10]
    }
    location {
      path: [5, 0, 2, 47, 1]
      span: [86, 2, 4]
    }
    location {
      path: [5, 0, 2, 47, 2]
      span: [86, 7, 9]
    }
    location {
      path: [5, 0, 2, 48]
      span: [87, 2, 17]
    }
    location {
      path: [5, 0, 2, 48, 1]
      span: [87, 2, 11]
    }
    location {
      path: [5, 0, 2, 48, 2]
      span: [87, 14, 16]
    }
    location {
      path: [5, 0, 2, 49]
      span: [89, 2, 10]
    }
    location {
      path: [5, 0, 2, 49, 1]
      span: [89, 2, 4]
    }
    location {
      path: [5, 0, 2, 49, 2]
      span: [89, 7, 9]
    }
    location {
      path: [5, 0, 2, 50]
      span: [90, 2, 19]
    }
    location {
      path: [5, 0, 2, 50, 1]
      span: [90, 2, 13]
    }
    location {
      path: [5, 0, 2, 50, 2]
      span: [90, 16, 18]
    }
    location {
      path: [5, 0, 2, 51]
      span: [92, 2, 10]
    }
    location {
      path: [5, 0, 2, 51, 1]
      span: [92, 2, 4]
    }
    location {
      path: [5, 0, 2, 51, 2]
      span: [92, 7, 9]
    }
    location {
      path: [5, 0, 2, 52]
      span: [93, 2, 16]
    }
    location {
      path: [5, 0, 2, 52, 1]
      span: [93, 2, 10]
    }
    location {
      path: [5, 0, 2, 52, 2]
      span: [93, 13, 15]
    }
    location {
      path: [5, 0, 2, 53]
      span: [95, 2, 10]
    }
    location {
      path: [5, 0, 2, 53, 1]
      span: [95, 2, 4]
    }
    location {
      path: [5, 0, 2, 53, 2]
      span: [95, 7, 9]
    }
    location {
      path: [5, 0, 2, 54]
      span: [96, 2, 15]
    }
    location {
      path: [5, 0, 2, 54, 1]
      span: [96, 2, 9]
    }
    location {
      path: [5, 0, 2, 54, 2]
      span: [96, 12, 14]
    }
    location {
      path: [5, 0, 2, 55]
      span: [98, 2, 10]
    }
    location {
      path: [5, 0, 2, 55, 1]
      span: [98, 2, 4]
    }
    location {
      path: [5, 0, 2, 55, 2]
      span: [98, 7, 9]
    }
    location {
      path: [5, 0, 2, 56]
      span: [99, 2, 16]
    }
    location {
      path: [5, 0, 2, 56, 1]
      span: [99, 2, 10]
    }
    location {
      path: [5, 0, 2, 56, 2]
      span: [99, 13, 15]
    }
    location {
      path: [5, 0, 2, 57]
      span: [101, 2, 10]
    }
    location {
      path: [5, 0, 2, 57, 1]
      span: [101, 2, 4]
    }
    location {
      path: [5, 0, 2, 57, 2]
      span: [101, 7, 9]
    }
    location {
      path: [5, 0, 2, 58]
      span: [102, 2, 14]
    }
    location {
      path: [5, 0, 2, 58, 1]
      span: [102, 2, 8]
    }
    location {
      path: [5, 0, 2, 58, 2]
      span: [102, 11, 13]
    }
    location {
      path: [5, 0, 2, 59]
      span: [104, 2, 10]
    }
    location {
      path: [5, 0, 2, 59, 1]
      span: [104, 2, 4]
    }
    location {
      path: [5, 0, 2, 59, 2]
      span: [104, 7, 9]
    }
    location {
      path: [5, 0, 2, 60]
      span: [105, 2, 21]
    }
    location {
      path: [5, 0, 2, 60, 1]
      span: [105, 2, 15]
    }
    location {
      path: [5, 0, 2, 60, 2]
      span: [105, 18, 20]
    }
    location {
      path: [5, 0, 2, 61]
      span: [107, 2, 10]
    }
    location {
      path: [5, 0, 2, 61, 1]
      span: [107, 2, 4]
    }
    location {
      path: [5, 0, 2, 61, 2]
      span: [107, 7, 9]
    }
    location {
      path: [5, 0, 2, 62]
      span: [108, 2, 18]
    }
    location {
      path: [5, 0, 2, 62, 1]
      span: [108, 2, 12]
    }
    location {
      path: [5, 0, 2, 62, 2]
      span: [108, 15, 17]
    }
    location {
      path: [5, 0, 2, 63]
      span: [110, 2, 10]
    }
    location {
      path: [5, 0, 2, 63, 1]
      span: [110, 2, 4]
    }
    location {
      path: [5, 0, 2, 63, 2]
      span: [110, 7, 9]
    }
    location {
      path: [5, 0, 2, 64]
      span: [111, 2, 18]
    }
    location {
      path: [5, 0, 2, 64, 1]
      span: [111, 2, 12]
    }
    location {
      path: [5, 0, 2, 64, 2]
      span: [111, 15, 17]
    }
    location {
      path: [5, 0, 2, 65]
      span: [113, 2, 10]
    }
    location {
      path: [5, 0, 2, 65, 1]
      span: [113, 2, 4]
    }
    location {
      path: [5, 0, 2, 65, 2]
      span: [113, 7, 9]
    }
    location {
      path: [5, 0, 2, 66]
      span: [114, 2, 16]
    }
    location {
      path: [5, 0, 2, 66, 1]
      span: [114, 2, 10]
    }
    location {
      path: [5, 0, 2, 66, 2]
      span: [114, 13, 15]
    }
    location {
      path: [5, 0, 2, 67]
      span: [116, 2, 10]
    }
    location {
      path: [5, 0, 2, 67, 1]
      span: [116, 2, 4]
    }
    location {
      path: [5, 0, 2, 67, 2]
      span: [116, 7, 9]
    }
    location {
      path: [5, 0, 2, 68]
      span: [117, 2, 22]
    }
    location {
      path: [5, 0, 2, 68, 1]
      span: [117, 2, 16]
    }
    location {
      path: [5, 0, 2, 68, 2]
      span: [117, 19, 21]
    }
    location {
      path: [5, 0, 2, 69]
      span: [119, 2, 10]
    }
    location {
      path: [5, 0, 2, 69, 1]
      span: [119, 2, 4]
    }
    location {
      path: [5, 0, 2, 69, 2]
      span: [119, 7, 9]
    }
    location {
      path: [5, 0, 2, 70]
      span: [120, 2, 20]
    }
    location {
      path: [5, 0, 2, 70, 1]
      span: [120, 2, 14]
    }
    location {
      path: [5, 0, 2, 70, 2]
      span: [120, 17, 19]
    }
    location {
      path: [5, 0, 2, 71]
      span: [122, 2, 10]
    }
    location {
      path: [5, 0, 2, 71, 1]
      span: [122, 2, 4]
    }
    location {
      path: [5, 0, 2, 71, 2]
      span: [122, 7, 9]
    }
    location {
      path: [5, 0, 2, 72]
      span: [123, 2, 12]
    }
    location {
      path: [5, 0, 2, 72, 1]
      span: [123, 2, 6]
    }
    location {
      path: [5, 0, 2, 72, 2]
      span: [123, 9, 11]
    }
    location {
      path: [5, 0, 2, 73]
      span: [125, 2, 10]
    }
    location {
      path: [5, 0, 2, 73, 1]
      span: [125, 2, 4]
    }
    location {
      path: [5, 0, 2, 73, 2]
      span: [125, 7, 9]
    }
    location {
      path: [5, 0, 2, 74]
      span: [126, 2, 16]
    }
    location {
      path: [5, 0, 2, 74, 1]
      span: [126, 2, 10]
    }
    location {
      path: [5, 0, 2, 74, 2]
      span: [126, 13, 15]
    }
    location {
      path: [5, 0, 2, 75]
      span: [128, 2, 10]
    }
    location {
      path: [5, 0, 2, 75, 1]
      span: [128, 2, 4]
    }
    location {
      path: [5, 0, 2, 75, 2]
      span: [128, 7, 9]
    }
    location {
      path: [5, 0, 2, 76]
      span: [129, 2, 14]
    }
    location {
      path: [5, 0, 2, 76, 1]
      span: [129, 2, 8]
    }
    location {
      path: [5, 0, 2, 76, 2]
      span: [129, 11, 13]
    }
    location {
      path: [5, 0, 2, 77]
      span: [131, 2, 10]
    }
    location {
      path: [5, 0, 2, 77, 1]
      span: [131, 2, 4]
    }
    location {
      path: [5, 0, 2, 77, 2]
      span: [131, 7, 9]
    }
    location {
      path: [5, 0, 2, 78]
      span: [132, 2, 20]
    }
    location {
      path: [5, 0, 2, 78, 1]
      span: [132, 2, 14]
    }
    location {
      path: [5, 0, 2, 78, 2]
      span: [132, 17, 19]
    }
    location {
      path: [5, 0, 2, 79]
      span: [134, 2, 10]
    }
    location {
      path: [5, 0, 2, 79, 1]
      span: [134, 2, 4]
    }
    location {
      path: [5, 0, 2, 79, 2]
      span: [134, 7, 9]
    }
    location {
      path: [5, 0, 2, 80]
      span: [135, 2, 20]
    }
    location {
      path: [5, 0, 2, 80, 1]
      span: [135, 2, 14]
    }
    location {
      path: [5, 0, 2, 80, 2]
      span: [135, 17, 19]
    }
    location {
      path: [5, 0, 2, 81]
      span: [137, 2, 10]
    }
    location {
      path: [5, 0, 2, 81, 1]
      span: [137, 2, 4]
    }
    location {
      path: [5, 0, 2, 81, 2]
      span: [137, 7, 9]
    }
    location {
      path: [5, 0, 2, 82]
      span: [138, 2, 22]
    }
    location {
      path: [5, 0, 2, 82, 1]
      span: [138, 2, 16]
    }
    location {
      path: [5, 0, 2, 82, 2]
      span: [138, 19, 21]
    }
    location {
      path: [5, 0, 2, 83]
      span: [140, 2, 10]
    }
    location {
      path: [5, 0, 2, 83, 1]
      span: [140, 2, 4]
    }
    location {
      path: [5, 0, 2, 83, 2]
      span: [140, 7, 9]
    }
    location {
      path: [5, 0, 2, 84]
      span: [141, 2, 20]
    }
    location {
      path: [5, 0, 2, 84, 1]
      span: [141, 2, 14]
    }
    location {
      path: [5, 0, 2, 84, 2]
      span: [141, 17, 19]
    }
    location {
      path: [5, 0, 2, 85]
      span: [143, 2, 10]
    }
    location {
      path: [5, 0, 2, 85, 1]
      span: [143, 2, 4]
    }
    location {
      path: [5, 0, 2, 85, 2]
      span: [143, 7, 9]
    }
    location {
      path: [5, 0, 2, 86]
      span: [144, 2, 17]
    }
    location {
      path: [5, 0, 2, 86, 1]
      span: [144, 2, 11]
    }
    location {
      path: [5, 0, 2, 86, 2]
      span: [144, 14, 16]
    }
    location {
      path: [5, 0, 2, 87]
      span: [146, 2, 10]
    }
    location {
      path: [5, 0, 2, 87, 1]
      span: [146, 2, 4]
    }
    location {
      path: [5, 0, 2, 87, 2]
      span: [146, 7, 9]
    }
    location {
      path: [5, 0, 2, 88]
      span: [147, 2, 13]
    }
    location {
      path: [5, 0, 2, 88, 1]
      span: [147, 2, 7]
    }
    location {
      path: [5, 0, 2, 88, 2]
      span: [147, 10, 12]
    }
    location {
      path: [5, 0, 2, 89]
      span: [149, 2, 10]
    }
    location {
      path: [5, 0, 2, 89, 1]
      span: [149, 2, 4]
    }
    location {
      path: [5, 0, 2, 89, 2]
      span: [149, 7, 9]
    }
    location {
      path: [5, 0, 2, 90]
      span: [150, 2, 12]
    }
    location {
      path: [5, 0, 2, 90, 1]
      span: [150, 2, 6]
    }
    location {
      path: [5, 0, 2, 90, 2]
      span: [150, 9, 11]
    }
    location {
      path: [5, 0, 2, 91]
      span: [152, 2, 10]
    }
    location {
      path: [5, 0, 2, 91, 1]
      span: [152, 2, 4]
    }
    location {
      path: [5, 0, 2, 91, 2]
      span: [152, 7, 9]
    }
    location {
      path: [5, 0, 2, 92]
      span: [153, 2, 15]
    }
    location {
      path: [5, 0, 2, 92, 1]
      span: [153, 2, 9]
    }
    location {
      path: [5, 0, 2, 92, 2]
      span: [153, 12, 14]
    }
    location {
      path: [5, 0, 2, 93]
      span: [155, 2, 10]
    }
    location {
      path: [5, 0, 2, 93, 1]
      span: [155, 2, 4]
    }
    location {
      path: [5, 0, 2, 93, 2]
      span: [155, 7, 9]
    }
    location {
      path: [5, 0, 2, 94]
      span: [156, 2, 16]
    }
    location {
      path: [5, 0, 2, 94, 1]
      span: [156, 2, 10]
    }
    location {
      path: [5, 0, 2, 94, 2]
      span: [156, 13, 15]
    }
    location {
      path: [5, 0, 2, 95]
      span: [158, 2, 10]
    }
    location {
      path: [5, 0, 2, 95, 1]
      span: [158, 2, 4]
    }
    location {
      path: [5, 0, 2, 95, 2]
      span: [158, 7, 9]
    }
    location {
      path: [5, 0, 2, 96]
      span: [159, 2, 18]
    }
    location {
      path: [5, 0, 2, 96, 1]
      span: [159, 2, 12]
    }
    location {
      path: [5, 0, 2, 96, 2]
      span: [159, 15, 17]
    }
    location {
      path: [5, 0, 2, 97]
      span: [161, 2, 10]
    }
    location {
      path: [5, 0, 2, 97, 1]
      span: [161, 2, 4]
    }
    location {
      path: [5, 0, 2, 97, 2]
      span: [161, 7, 9]
    }
    location {
      path: [5, 0, 2, 98]
      span: [162, 2, 21]
    }
    location {
      path: [5, 0, 2, 98, 1]
      span: [162, 2, 15]
    }
    location {
      path: [5, 0, 2, 98, 2]
      span: [162, 18, 20]
    }
    location {
      path: [5, 0, 2, 99]
      span: [164, 2, 10]
    }
    location {
      path: [5, 0, 2, 99, 1]
      span: [164, 2, 4]
    }
    location {
      path: [5, 0, 2, 99, 2]
      span: [164, 7, 9]
    }
    location {
      path: [5, 0, 2, 100]
      span: [165, 2, 17]
    }
    location {
      path: [5, 0, 2, 100, 1]
      span: [165, 2, 11]
    }
    location {
      path: [5, 0, 2, 100, 2]
      span: [165, 14, 16]
    }
    location {
      path: [5, 0, 2, 101]
      span: [167, 2, 15]
    }
    location {
      path: [5, 0, 2, 101, 1]
      span: [167, 2, 9]
    }
    location {
      path: [5, 0, 2, 101, 2]
      span: [167, 12, 14]
    }
    location {
      path: [5, 0, 2, 102]
      span: [168, 2, 10]
    }
    location {
      path: [5, 0, 2, 102, 1]
      span: [168, 2, 4]
    }
    location {
      path: [5, 0, 2, 102, 2]
      span: [168, 7, 9]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/ids/USDL.proto"
  package: "identity.ids"
  dependency: "bq_field.proto"
  dependency: "geo/USState.proto"
  message_type {
    name: "USDLFieldValue"
    field {
      name: "field"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".identity.ids.USDLField"
      options {
        1025: "Field that we are storing data for."
      }
      json_name: "field"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "String data for this field."
      }
      oneof_index: 0
      json_name: "value"
    }
    field {
      name: "raw_value"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      options {
        1024: 1
      }
      oneof_index: 0
      json_name: "rawValue"
    }
    oneof_decl {
      name: "data"
    }
  }
  message_type {
    name: "USDL"
    field {
      name: "barcode"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      options {
        1024: 1
      }
      json_name: "barcode"
    }
    field {
      name: "jurisdiction"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".geo.usa.USState"
      options {
        1025: "State that issued this Driver's License."
      }
      json_name: "jurisdiction"
    }
    field {
      name: "fields"
      number: 100
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".identity.ids.USDLFieldValue"
      options {
        1025: "Raw field data for this license."
      }
      json_name: "fields"
    }
  }
  enum_type {
    name: "USDLField"
    value {
      name: "BACK_BARCODE"
      number: 0
    }
    value {
      name: "FAMILY_NAME"
      number: 1
    }
    value {
      name: "GIVEN_NAME"
      number: 2
    }
    value {
      name: "MIDDLE_NAME"
      number: 3
    }
    value {
      name: "FULL_NAME"
      number: 4
    }
    value {
      name: "NAME_PREFIX"
      number: 5
    }
    value {
      name: "NAME_SUFFIX"
      number: 6
    }
    value {
      name: "DATE_OF_BIRTH"
      number: 10
    }
    value {
      name: "SEX"
      number: 11
    }
    value {
      name: "HEIGHT"
      number: 12
    }
    value {
      name: "WEIGHT"
      number: 13
    }
    value {
      name: "EYE_COLOR"
      number: 14
    }
    value {
      name: "HAIR_COLOR"
      number: 15
    }
    value {
      name: "FULL_ADDRESS"
      number: 20
    }
    value {
      name: "ADDRESS_LINE"
      number: 21
    }
    value {
      name: "ADDRESS_LINE2"
      number: 22
    }
    value {
      name: "ADDRESS_CITY"
      number: 23
    }
    value {
      name: "POSTAL_CODE"
      number: 24
    }
    value {
      name: "STATE_JURISDICTION"
      number: 25
    }
    value {
      name: "LICENSE_ID"
      number: 30
    }
    value {
      name: "LICENSE_ISSUE_DATE"
      number: 31
    }
    value {
      name: "LICENSE_EXPIRY_DATE"
      number: 32
    }
    value {
      name: "ISSUER_JURISDICTION"
      number: 33
    }
    value {
      name: "ISSUER_JURISDICTION_FORMAT_VERSION"
      number: 34
    }
    value {
      name: "UNIQUE_DOCUMENT_CODE"
      number: 40
    }
    value {
      name: "INVENTORY_CONTROL_CODE"
      number: 41
    }
    value {
      name: "UNDER_18_DATE"
      number: 50
    }
    value {
      name: "UNDER_19_DATE"
      number: 51
    }
    value {
      name: "UNDER_21_DATE"
      number: 52
    }
    value {
      name: "UNDER_18"
      number: 60
    }
    value {
      name: "UNDER_19"
      number: 61
    }
    value {
      name: "UNDER_21"
      number: 62
    }
    value {
      name: "ORGAN_DONOR"
      number: 63
    }
    value {
      name: "VETERAN"
      number: 64
    }
    value {
      name: "NONRESIDENT"
      number: 65
    }
    value {
      name: "RACE_ETHNICITY"
      number: 70
    }
    value {
      name: "COMPLIANCE_TYPE"
      number: 71
    }
  }
  options {
    java_package: "io.bloombox.schema.identity.ids"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 167, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 20]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 55]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [10, 7, 26]
    }
    location {
      path: [5, 0]
      span: [15, 0, 127, 1]
      leading_comments: " Enumerates known fields on a US Driver's License, that may be expressed or extracted via data entry/scanning of the\n document with OCR or reading the document's barcodes.\n"
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 14]
    }
    location {
      path: [5, 0, 2, 0]
      span: [18, 2, 19]
      leading_comments: " Raw barcode data for the back USDL barcode, which usually carries most of the data and is generally encoded using\n PDF417 (for instance, this is the case for California and New York).\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [18, 2, 14]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [18, 17, 18]
    }
    location {
      path: [5, 0, 2, 1]
      span: [21, 2, 18]
      leading_comments: " Person's family name, or last name.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [21, 2, 13]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [21, 16, 17]
    }
    location {
      path: [5, 0, 2, 2]
      span: [24, 2, 17]
      leading_comments: " Person's first anme, or given name.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [24, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [24, 15, 16]
    }
    location {
      path: [5, 0, 2, 3]
      span: [27, 2, 18]
      leading_comments: " Person's middle name.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [27, 2, 13]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [27, 16, 17]
    }
    location {
      path: [5, 0, 2, 4]
      span: [30, 2, 16]
      leading_comments: " Person's full name, expressed in a concatenated field.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [30, 2, 11]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [30, 14, 15]
    }
    location {
      path: [5, 0, 2, 5]
      span: [33, 2, 18]
      leading_comments: " Person's name prefix, like \"Dr\" or some other salutation.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [33, 2, 13]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [33, 16, 17]
    }
    location {
      path: [5, 0, 2, 6]
      span: [36, 2, 18]
      leading_comments: " Person's name suffix, like \"III\".\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [36, 2, 13]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [36, 16, 17]
    }
    location {
      path: [5, 0, 2, 7]
      span: [39, 2, 21]
      leading_comments: " Date of birth for this person.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [39, 2, 15]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [39, 18, 20]
    }
    location {
      path: [5, 0, 2, 8]
      span: [42, 2, 11]
      leading_comments: " Gender specified for this person.\n"
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [42, 2, 5]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [42, 8, 10]
    }
    location {
      path: [5, 0, 2, 9]
      span: [45, 2, 14]
      leading_comments: " Physical height specified for this person.\n"
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [45, 2, 8]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [45, 11, 13]
    }
    location {
      path: [5, 0, 2, 10]
      span: [48, 2, 14]
      leading_comments: " Physical weight specified for this person.\n"
    }
    location {
      path: [5, 0, 2, 10, 1]
      span: [48, 2, 8]
    }
    location {
      path: [5, 0, 2, 10, 2]
      span: [48, 11, 13]
    }
    location {
      path: [5, 0, 2, 11]
      span: [51, 2, 17]
      leading_comments: " Eye color specified for this person.\n"
    }
    location {
      path: [5, 0, 2, 11, 1]
      span: [51, 2, 11]
    }
    location {
      path: [5, 0, 2, 11, 2]
      span: [51, 14, 16]
    }
    location {
      path: [5, 0, 2, 12]
      span: [54, 2, 18]
      leading_comments: " Hair color specified for this person.\n"
    }
    location {
      path: [5, 0, 2, 12, 1]
      span: [54, 2, 12]
    }
    location {
      path: [5, 0, 2, 12, 2]
      span: [54, 15, 17]
    }
    location {
      path: [5, 0, 2, 13]
      span: [57, 2, 20]
      leading_comments: " Full, concatenated main user address string.\n"
    }
    location {
      path: [5, 0, 2, 13, 1]
      span: [57, 2, 14]
    }
    location {
      path: [5, 0, 2, 13, 2]
      span: [57, 17, 19]
    }
    location {
      path: [5, 0, 2, 14]
      span: [60, 2, 20]
      leading_comments: " First line of the main address.\n"
    }
    location {
      path: [5, 0, 2, 14, 1]
      span: [60, 2, 14]
    }
    location {
      path: [5, 0, 2, 14, 2]
      span: [60, 17, 19]
    }
    location {
      path: [5, 0, 2, 15]
      span: [63, 2, 21]
      leading_comments: " Second line of the main address.\n"
    }
    location {
      path: [5, 0, 2, 15, 1]
      span: [63, 2, 15]
    }
    location {
      path: [5, 0, 2, 15, 2]
      span: [63, 18, 20]
    }
    location {
      path: [5, 0, 2, 16]
      span: [66, 2, 20]
      leading_comments: " City name from the main address.\n"
    }
    location {
      path: [5, 0, 2, 16, 1]
      span: [66, 2, 14]
    }
    location {
      path: [5, 0, 2, 16, 2]
      span: [66, 17, 19]
    }
    location {
      path: [5, 0, 2, 17]
      span: [69, 2, 19]
      leading_comments: " Postal or zip code from the main address.\n"
    }
    location {
      path: [5, 0, 2, 17, 1]
      span: [69, 2, 13]
    }
    location {
      path: [5, 0, 2, 17, 2]
      span: [69, 16, 18]
    }
    location {
      path: [5, 0, 2, 18]
      span: [72, 2, 26]
      leading_comments: " Issuing state jurisdiction code for this document.\n"
    }
    location {
      path: [5, 0, 2, 18, 1]
      span: [72, 2, 20]
    }
    location {
      path: [5, 0, 2, 18, 2]
      span: [72, 23, 25]
    }
    location {
      path: [5, 0, 2, 19]
      span: [75, 2, 18]
      leading_comments: " ID number for this license document.\n"
    }
    location {
      path: [5, 0, 2, 19, 1]
      span: [75, 2, 12]
    }
    location {
      path: [5, 0, 2, 19, 2]
      span: [75, 15, 17]
    }
    location {
      path: [5, 0, 2, 20]
      span: [78, 2, 26]
      leading_comments: " Issuance date for this license document.\n"
    }
    location {
      path: [5, 0, 2, 20, 1]
      span: [78, 2, 20]
    }
    location {
      path: [5, 0, 2, 20, 2]
      span: [78, 23, 25]
    }
    location {
      path: [5, 0, 2, 21]
      span: [81, 2, 27]
      leading_comments: " Expiration date for this license document.\n"
    }
    location {
      path: [5, 0, 2, 21, 1]
      span: [81, 2, 21]
    }
    location {
      path: [5, 0, 2, 21, 2]
      span: [81, 24, 26]
    }
    location {
      path: [5, 0, 2, 22]
      span: [84, 2, 27]
      leading_comments: " Jurisdiction of issuance for this license document.\n"
    }
    location {
      path: [5, 0, 2, 22, 1]
      span: [84, 2, 21]
    }
    location {
      path: [5, 0, 2, 22, 2]
      span: [84, 24, 26]
    }
    location {
      path: [5, 0, 2, 23]
      span: [87, 2, 42]
      leading_comments: " Jurisdiction-scoped format specifier for this document.\n"
    }
    location {
      path: [5, 0, 2, 23, 1]
      span: [87, 2, 36]
    }
    location {
      path: [5, 0, 2, 23, 2]
      span: [87, 39, 41]
    }
    location {
      path: [5, 0, 2, 24]
      span: [90, 2, 28]
      leading_comments: " Unique document code for this specific instance of a license document.\n"
    }
    location {
      path: [5, 0, 2, 24, 1]
      span: [90, 2, 22]
    }
    location {
      path: [5, 0, 2, 24, 2]
      span: [90, 25, 27]
    }
    location {
      path: [5, 0, 2, 25]
      span: [93, 2, 30]
      leading_comments: " Inventory unique control code, used for license document disambiguation if specified.\n"
    }
    location {
      path: [5, 0, 2, 25, 1]
      span: [93, 2, 24]
    }
    location {
      path: [5, 0, 2, 25, 2]
      span: [93, 27, 29]
    }
    location {
      path: [5, 0, 2, 26]
      span: [96, 2, 21]
      leading_comments: " Date the user will turn 18 years old.\n"
    }
    location {
      path: [5, 0, 2, 26, 1]
      span: [96, 2, 15]
    }
    location {
      path: [5, 0, 2, 26, 2]
      span: [96, 18, 20]
    }
    location {
      path: [5, 0, 2, 27]
      span: [99, 2, 21]
      leading_comments: " Date the user will turn 19 years old.\n"
    }
    location {
      path: [5, 0, 2, 27, 1]
      span: [99, 2, 15]
    }
    location {
      path: [5, 0, 2, 27, 2]
      span: [99, 18, 20]
    }
    location {
      path: [5, 0, 2, 28]
      span: [102, 2, 21]
      leading_comments: " Date the user will turn 21 years old.\n"
    }
    location {
      path: [5, 0, 2, 28, 1]
      span: [102, 2, 15]
    }
    location {
      path: [5, 0, 2, 28, 2]
      span: [102, 18, 20]
    }
    location {
      path: [5, 0, 2, 29]
      span: [105, 2, 16]
      leading_comments: " Flag to indicate the user was under 18 when this document was issued, and may still be.\n"
    }
    location {
      path: [5, 0, 2, 29, 1]
      span: [105, 2, 10]
    }
    location {
      path: [5, 0, 2, 29, 2]
      span: [105, 13, 15]
    }
    location {
      path: [5, 0, 2, 30]
      span: [108, 2, 16]
      leading_comments: " Flag to indicate the user was under 19 when this document was issued, and may still be.\n"
    }
    location {
      path: [5, 0, 2, 30, 1]
      span: [108, 2, 10]
    }
    location {
      path: [5, 0, 2, 30, 2]
      span: [108, 13, 15]
    }
    location {
      path: [5, 0, 2, 31]
      span: [111, 2, 16]
      leading_comments: " Flag to indicate the user was under 21 when this document was issued, and may still be.\n"
    }
    location {
      path: [5, 0, 2, 31, 1]
      span: [111, 2, 10]
    }
    location {
      path: [5, 0, 2, 31, 2]
      span: [111, 13, 15]
    }
    location {
      path: [5, 0, 2, 32]
      span: [114, 2, 19]
      leading_comments: " Flag to indicate this person opted to be an organ donor.\n"
    }
    location {
      path: [5, 0, 2, 32, 1]
      span: [114, 2, 13]
    }
    location {
      path: [5, 0, 2, 32, 2]
      span: [114, 16, 18]
    }
    location {
      path: [5, 0, 2, 33]
      span: [117, 2, 15]
      leading_comments: " Flag to indicate that this person is a veteran.\n"
    }
    location {
      path: [5, 0, 2, 33, 1]
      span: [117, 2, 9]
    }
    location {
      path: [5, 0, 2, 33, 2]
      span: [117, 12, 14]
    }
    location {
      path: [5, 0, 2, 34]
      span: [120, 2, 19]
      leading_comments: " Flag to indicate that this person is a nonresident.\n"
    }
    location {
      path: [5, 0, 2, 34, 1]
      span: [120, 2, 13]
    }
    location {
      path: [5, 0, 2, 34, 2]
      span: [120, 16, 18]
    }
    location {
      path: [5, 0, 2, 35]
      span: [123, 2, 22]
      leading_comments: " Race or ethnicity information specified in this document.\n"
    }
    location {
      path: [5, 0, 2, 35, 1]
      span: [123, 2, 16]
    }
    location {
      path: [5, 0, 2, 35, 2]
      span: [123, 19, 21]
    }
    location {
      path: [5, 0, 2, 36]
      span: [126, 2, 23]
      leading_comments: " Compliance-related data field for storage standards.\n"
    }
    location {
      path: [5, 0, 2, 36, 1]
      span: [126, 2, 17]
    }
    location {
      path: [5, 0, 2, 36, 2]
      span: [126, 20, 22]
    }
    location {
      path: [4, 0]
      span: [131, 0, 148, 1]
      leading_comments: " Specifies an individual raw field value read or scanned from a United States Driver's License.\n"
    }
    location {
      path: [4, 0, 1]
      span: [131, 8, 22]
    }
    location {
      path: [4, 0, 2, 0]
      span: [133, 2, 135, 4]
      leading_comments: " Field that we are storing data for.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [133, 2, 131, 24]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [133, 2, 11]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [133, 12, 17]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [133, 20, 21]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [133, 22, 135, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [134, 4, 71]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [134, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [134, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [134, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [134, 34, 71]
    }
    location {
      path: [4, 0, 8, 0]
      span: [137, 2, 147, 3]
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [137, 8, 12]
    }
    location {
      path: [4, 0, 2, 1]
      span: [139, 4, 141, 6]
      leading_comments: " String data for this field.\n"
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [139, 4, 10]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [139, 11, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [139, 19, 20]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [139, 21, 141, 5]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [140, 6, 65]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [140, 6, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [140, 6, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [140, 7, 32]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [140, 36, 65]
    }
    location {
      path: [4, 0, 2, 2]
      span: [144, 4, 146, 6]
      leading_comments: " Byte data for this field.\n"
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [144, 4, 9]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [144, 10, 19]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [144, 22, 23]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [144, 24, 146, 5]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [145, 6, 35]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [145, 6, 28]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [145, 6, 28]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [145, 7, 27]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 3]
      span: [145, 31, 35]
    }
    location {
      path: [4, 1]
      span: [152, 0, 167, 1]
      leading_comments: " Specifies a United States Driver's License.\n"
    }
    location {
      path: [4, 1, 1]
      span: [152, 8, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [154, 2, 156, 4]
      leading_comments: " Raw barcode data for this Driver's License.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [154, 2, 152, 14]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [154, 2, 7]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [154, 8, 15]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [154, 18, 19]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [154, 20, 156, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [155, 4, 33]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [155, 4, 26]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [155, 4, 26]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [155, 5, 25]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 3]
      span: [155, 29, 33]
    }
    location {
      path: [4, 1, 2, 1]
      span: [159, 2, 161, 4]
      leading_comments: " State that issued this Driver's License.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [159, 2, 156, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [159, 2, 17]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [159, 18, 30]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [159, 33, 34]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [159, 35, 161, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [160, 4, 76]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [160, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [160, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [160, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [160, 34, 76]
    }
    location {
      path: [4, 1, 2, 2]
      span: [164, 2, 166, 4]
      leading_comments: " Raw field data for this license.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [164, 2, 10]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [164, 11, 25]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [164, 26, 32]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [164, 35, 38]
    }
    location {
      path: [4, 1, 2, 2, 8]
      span: [164, 39, 166, 3]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0]
      span: [165, 4, 68]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2]
      span: [165, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0]
      span: [165, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [165, 5, 30]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 7]
      span: [165, 34, 68]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/ids/Passport.proto"
  package: "identity.ids"
  dependency: "bq_field.proto"
  dependency: "temporal/Date.proto"
  message_type {
    name: "Passport"
    field {
      name: "barcode"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      options {
        1024: 1
      }
      json_name: "barcode"
    }
    field {
      name: "id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Unique document ID for this passport."
      }
      json_name: "id"
    }
    field {
      name: "nation"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Nation that issued this passport, as an abbreviated string code, like \"US\" or \"UK\"."
      }
      json_name: "nation"
    }
    field {
      name: "expire_date"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Date"
      options {
        1025: "Expiration date for this document."
      }
      json_name: "expireDate"
    }
    field {
      name: "birth_date"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Date"
      options {
        1025: "Birth date listed on this document."
      }
      json_name: "birthDate"
    }
  }
  options {
    java_package: "io.bloombox.schema.identity.ids"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 39, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 20]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 55]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [10, 7, 28]
    }
    location {
      path: [4, 0]
      span: [14, 0, 39, 1]
      leading_comments: " Specifies a model for a nation-state-issued passport.\n"
    }
    location {
      path: [4, 0, 1]
      span: [14, 8, 16]
    }
    location {
      path: [4, 0, 2, 0]
      span: [16, 2, 18, 4]
      leading_comments: " Barcode from the passport, if any.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [16, 2, 14, 18]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [16, 2, 7]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [16, 8, 15]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [16, 18, 19]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [16, 20, 18, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [17, 4, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [17, 4, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [17, 4, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [17, 5, 25]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [17, 29, 33]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 23, 4]
      leading_comments: " Unique document ID for this passport.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [21, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 9, 11]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 14, 15]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [21, 16, 23, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [22, 4, 73]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [22, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [22, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [22, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [22, 34, 73]
    }
    location {
      path: [4, 0, 2, 2]
      span: [26, 2, 28, 4]
      leading_comments: " Nation that issued this passport, as an abbreviated string code, like \"US\" or \"UK\".\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [26, 2, 23, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [26, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [26, 9, 15]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [26, 18, 19]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [26, 20, 28, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [27, 4, 123]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [27, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [27, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [27, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [27, 34, 123]
    }
    location {
      path: [4, 0, 2, 3]
      span: [31, 2, 33, 4]
      leading_comments: " Expiration date for this document.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [31, 2, 28, 4]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [31, 2, 15]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [31, 16, 27]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [31, 30, 31]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [31, 32, 33, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [32, 4, 70]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [32, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [32, 34, 70]
    }
    location {
      path: [4, 0, 2, 4]
      span: [36, 2, 38, 4]
      leading_comments: " Birth date listed on this document.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [36, 2, 33, 4]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [36, 2, 15]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [36, 16, 26]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [36, 29, 30]
    }
    location {
      path: [4, 0, 2, 4, 8]
      span: [36, 31, 38, 3]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0]
      span: [37, 4, 71]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2]
      span: [37, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0]
      span: [37, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [37, 5, 30]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 7]
      span: [37, 34, 71]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/ID.proto"
  package: "identity"
  dependency: "bq_field.proto"
  dependency: "temporal/Date.proto"
  dependency: "identity/ids/USDL.proto"
  dependency: "identity/ids/Passport.proto"
  message_type {
    name: "ID"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".identity.IDType"
      options {
        1025: "Type of ID we're specifying."
      }
      json_name: "type"
    }
    field {
      name: "id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "ID number or string identifying this identity document."
      }
      json_name: "id"
    }
    field {
      name: "expire_date"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Date"
      options {
        1025: "Expiration date for this document."
      }
      json_name: "expireDate"
    }
    field {
      name: "birth_date"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Date"
      options {
        1025: "Birth date listed on this document."
      }
      json_name: "birthDate"
    }
    field {
      name: "license"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.ids.USDL"
      options {
        1025: "United States Driver's License."
      }
      oneof_index: 0
      json_name: "license"
    }
    field {
      name: "passport"
      number: 21
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.ids.Passport"
      options {
        1025: "National passport."
      }
      oneof_index: 0
      json_name: "passport"
    }
    oneof_decl {
      name: "document"
    }
  }
  enum_type {
    name: "IDType"
    value {
      name: "USDL"
      number: 0
    }
    value {
      name: "PASSPORT"
      number: 1
    }
  }
  options {
    java_package: "io.bloombox.schema.identity"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 59, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 28]
    }
    location {
      path: [3, 2]
      span: [12, 7, 32]
    }
    location {
      path: [3, 3]
      span: [13, 7, 36]
    }
    location {
      path: [5, 0]
      span: [17, 0, 23, 1]
      leading_comments: " Enumerates supported types of user-provided, government-issued ID.\n"
    }
    location {
      path: [5, 0, 1]
      span: [17, 5, 11]
    }
    location {
      path: [5, 0, 2, 0]
      span: [19, 2, 11]
      leading_comments: " United States Driver's License, issued by a U.S. state government.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [19, 2, 6]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [19, 9, 10]
    }
    location {
      path: [5, 0, 2, 1]
      span: [22, 2, 15]
      leading_comments: " National passport, issued by a nation-state.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [22, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [22, 13, 14]
    }
    location {
      path: [4, 0]
      span: [27, 0, 59, 1]
      leading_comments: " Specifies an object for expressing a user's government ID information.\n"
    }
    location {
      path: [4, 0, 1]
      span: [27, 8, 10]
    }
    location {
      path: [4, 0, 2, 0]
      span: [29, 2, 31, 4]
      leading_comments: " Type of ID we're specifying.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [29, 2, 27, 12]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [29, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [29, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [29, 16, 17]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [29, 18, 31, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [30, 4, 64]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [30, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [30, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [30, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [30, 34, 64]
    }
    location {
      path: [4, 0, 2, 1]
      span: [34, 2, 36, 4]
      leading_comments: " ID number or string identifying this identity document.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [34, 2, 31, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [34, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [34, 9, 11]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [34, 14, 15]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [34, 16, 36, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [35, 4, 91]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [35, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [35, 34, 91]
    }
    location {
      path: [4, 0, 2, 2]
      span: [39, 2, 41, 4]
      leading_comments: " Expiration date for this document.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [39, 2, 36, 4]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [39, 2, 15]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [39, 16, 27]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [39, 30, 31]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [39, 32, 41, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [40, 4, 70]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [40, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [40, 34, 70]
    }
    location {
      path: [4, 0, 2, 3]
      span: [44, 2, 46, 4]
      leading_comments: " Birth date listed on this document.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [44, 2, 41, 4]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [44, 2, 15]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [44, 16, 26]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [44, 29, 30]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [44, 31, 46, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [45, 4, 71]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [45, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [45, 34, 71]
    }
    location {
      path: [4, 0, 8, 0]
      span: [48, 2, 58, 3]
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [48, 8, 16]
    }
    location {
      path: [4, 0, 2, 4]
      span: [50, 4, 52, 6]
      leading_comments: " United States Driver's License.\n"
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [50, 4, 21]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [50, 22, 29]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [50, 32, 34]
    }
    location {
      path: [4, 0, 2, 4, 8]
      span: [50, 35, 52, 5]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0]
      span: [51, 6, 69]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2]
      span: [51, 6, 33]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0]
      span: [51, 6, 33]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [51, 7, 32]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 7]
      span: [51, 36, 69]
    }
    location {
      path: [4, 0, 2, 5]
      span: [55, 4, 57, 6]
      leading_comments: " National passport.\n"
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [55, 4, 25]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [55, 26, 34]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [55, 37, 39]
    }
    location {
      path: [4, 0, 2, 5, 8]
      span: [55, 40, 57, 5]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0]
      span: [56, 6, 56]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2]
      span: [56, 6, 33]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0]
      span: [56, 6, 33]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [56, 7, 32]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 7]
      span: [56, 36, 56]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "media/MediaOrientation.proto"
  package: "media"
  enum_type {
    name: "MediaOrientation"
    value {
      name: "UP"
      number: 0
    }
    value {
      name: "DOWN"
      number: 1
    }
    value {
      name: "LEFT"
      number: 2
    }
    value {
      name: "RIGHT"
      number: 3
    }
    value {
      name: "UP_MIRRORED"
      number: 4
    }
    value {
      name: "DOWN_MIRRORED"
      number: 5
    }
    value {
      name: "LEFT_MIRRORED"
      number: 6
    }
    value {
      name: "RIGHT_MIRRORED"
      number: 7
    }
  }
  options {
    java_package: "io.bloombox.schema.media"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 20, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 13]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 48]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [5, 0]
      span: [11, 0, 20, 1]
    }
    location {
      path: [5, 0, 1]
      span: [11, 5, 21]
    }
    location {
      path: [5, 0, 2, 0]
      span: [12, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [12, 2, 4]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [12, 7, 8]
    }
    location {
      path: [5, 0, 2, 1]
      span: [13, 2, 11]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [13, 2, 6]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [13, 9, 10]
    }
    location {
      path: [5, 0, 2, 2]
      span: [14, 2, 11]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [14, 2, 6]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [14, 9, 10]
    }
    location {
      path: [5, 0, 2, 3]
      span: [15, 2, 12]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [15, 2, 7]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [15, 10, 11]
    }
    location {
      path: [5, 0, 2, 4]
      span: [16, 2, 18]
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [16, 2, 13]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [16, 16, 17]
    }
    location {
      path: [5, 0, 2, 5]
      span: [17, 2, 20]
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [17, 2, 15]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [17, 18, 19]
    }
    location {
      path: [5, 0, 2, 6]
      span: [18, 2, 20]
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [18, 2, 15]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [18, 18, 19]
    }
    location {
      path: [5, 0, 2, 7]
      span: [19, 2, 21]
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [19, 2, 16]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [19, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/IDMedia.proto"
  package: "identity"
  dependency: "media/MediaOrientation.proto"
  message_type {
    name: "IDMediaAttachment"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".identity.IDMedia"
      json_name: "type"
    }
    field {
      name: "orientation"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".media.MediaOrientation"
      json_name: "orientation"
    }
    field {
      name: "data"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "data"
    }
    field {
      name: "image_type"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "imageType"
    }
    field {
      name: "quality"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "quality"
    }
  }
  enum_type {
    name: "IDMedia"
    value {
      name: "DOCUMENT_FRONT"
      number: 0
    }
    value {
      name: "DOCUMENT_REAR"
      number: 1
    }
    value {
      name: "PORTRAIT"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.identity"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 41, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 37]
    }
    location {
      path: [5, 0]
      span: [13, 0, 22, 1]
      leading_comments: " Known types of document media that can be attached to an ID.\n"
    }
    location {
      path: [5, 0, 1]
      span: [13, 5, 12]
    }
    location {
      path: [5, 0, 2, 0]
      span: [15, 2, 21]
      leading_comments: " Picture of the front of the document.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [15, 2, 16]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [15, 19, 20]
    }
    location {
      path: [5, 0, 2, 1]
      span: [18, 2, 20]
      leading_comments: " Picture of the back of the document.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [18, 2, 15]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [18, 18, 19]
    }
    location {
      path: [5, 0, 2, 2]
      span: [21, 2, 15]
      leading_comments: " Cropped/extracted person portrait from the document.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [21, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [21, 13, 14]
    }
    location {
      path: [4, 0]
      span: [26, 0, 41, 1]
      leading_comments: " Media attachment that binds some document media to a particular driver's license.\n"
    }
    location {
      path: [4, 0, 1]
      span: [26, 8, 25]
    }
    location {
      path: [4, 0, 2, 0]
      span: [28, 2, 28]
      leading_comments: " Specifies the kind of media being attached.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [28, 2, 26, 27]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [28, 2, 18]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [28, 19, 23]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [28, 26, 27]
    }
    location {
      path: [4, 0, 2, 1]
      span: [31, 2, 41]
      leading_comments: " Specifies the orientation of the attached media.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [31, 2, 28, 28]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [31, 2, 24]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [31, 25, 36]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [31, 39, 40]
    }
    location {
      path: [4, 0, 2, 2]
      span: [34, 2, 17]
      leading_comments: " Specifies raw data for the attached media.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [34, 2, 31, 41]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [34, 2, 7]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [34, 8, 12]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [34, 15, 16]
    }
    location {
      path: [4, 0, 2, 3]
      span: [37, 2, 24]
      leading_comments: " Specifies the type of image employed.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [37, 2, 34, 17]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [37, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [37, 9, 19]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [37, 22, 23]
    }
    location {
      path: [4, 0, 2, 4]
      span: [40, 2, 21]
      leading_comments: " Specifies the quality estimate.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [40, 2, 37, 24]
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [40, 2, 8]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [40, 9, 16]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [40, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "media/MediaKey.proto"
  package: "media"
  dependency: "bq_field.proto"
  message_type {
    name: "MediaKey"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Unique ID for this media item."
      }
      json_name: "id"
    }
  }
  options {
    java_package: "io.bloombox.schema.media"
    java_outer_classname: "MediaItemKey"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 21, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 13]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 48]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 44]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [4, 0]
      span: [16, 0, 21, 1]
      leading_comments: " Key uniquely describing an item of media known to the system. An \"item of media\" can be anything from an image or a\n video, to a PDF document, or larger data.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 16]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 20, 4]
      leading_comments: " Unique ID for this media item.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 18]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [18, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 9, 11]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 14, 15]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [18, 16, 20, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [19, 4, 66]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [19, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [19, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [19, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [19, 34, 66]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "media/MediaType.proto"
  package: "media"
  dependency: "bq_field.proto"
  message_type {
    name: "MediaType"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".media.MediaType.Kind"
      options {
        1025: "Specifies the generic kind of media being described or attached."
      }
      json_name: "kind"
    }
    field {
      name: "image_type"
      number: 101
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.ImageType"
      options {
        1025: "Specifies content for an image-based media item."
      }
      oneof_index: 0
      json_name: "imageType"
    }
    field {
      name: "document_type"
      number: 201
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.DocumentType"
      options {
        1025: "Specifies content for a document-based media item."
      }
      oneof_index: 0
      json_name: "documentType"
    }
    field {
      name: "video_type"
      number: 301
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.VideoType"
      options {
        1025: "Specifies content for a video-based media item."
      }
      oneof_index: 0
      json_name: "videoType"
    }
    enum_type {
      name: "Kind"
      value {
        name: "LINK"
        number: 0
      }
      value {
        name: "IMAGE"
        number: 1
      }
      value {
        name: "DOCUMENT"
        number: 2
      }
      value {
        name: "VIDEO"
        number: 3
      }
    }
    oneof_decl {
      name: "content"
    }
  }
  message_type {
    name: "ImageType"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".media.ImageType.ImageKind"
      options {
        1025: "Specifies the format of the attached or described image."
      }
      json_name: "kind"
    }
    enum_type {
      name: "ImageKind"
      value {
        name: "PNG"
        number: 0
      }
      value {
        name: "JPG"
        number: 1
      }
      value {
        name: "GIF"
        number: 2
      }
      value {
        name: "SVG"
        number: 3
      }
      value {
        name: "WEBP"
        number: 4
      }
    }
  }
  message_type {
    name: "DocumentType"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".media.DocumentType.DocumentKind"
      options {
        1025: "Specifies the kind of document being attached or described."
      }
      json_name: "kind"
    }
    field {
      name: "compressed"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies whether the attached document is compressed or not."
      }
      json_name: "compressed"
    }
    enum_type {
      name: "DocumentKind"
      value {
        name: "TXT"
        number: 0
      }
      value {
        name: "HTML"
        number: 1
      }
      value {
        name: "PDF"
        number: 2
      }
      value {
        name: "MARKDOWN"
        number: 3
      }
    }
  }
  message_type {
    name: "VideoType"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".media.VideoType.VideoKind"
      options {
        1025: "Specifies the kind of video being attached or described."
      }
      json_name: "kind"
    }
    enum_type {
      name: "VideoKind"
      value {
        name: "MP4"
        number: 0
      }
      value {
        name: "FLV"
        number: 1
      }
      value {
        name: "HLS"
        number: 2
      }
    }
  }
  options {
    java_package: "io.bloombox.schema.media"
    java_outer_classname: "MediaItemType"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 130, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 13]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 48]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [4, 0]
      span: [15, 0, 53, 1]
      leading_comments: " Specifies the type of media being attached or described.\n"
    }
    location {
      path: [4, 0, 1]
      span: [15, 8, 17]
    }
    location {
      path: [4, 0, 4, 0]
      span: [17, 2, 29, 3]
      leading_comments: " Enumerates, in generic terms, the kinds of media that can be attached or described.\n"
    }
    location {
      path: [4, 0, 4, 0, 1]
      span: [17, 7, 11]
    }
    location {
      path: [4, 0, 4, 0, 2, 0]
      span: [19, 4, 13]
      leading_comments: " Web link, or URI.\n"
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 1]
      span: [19, 4, 8]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 2]
      span: [19, 11, 12]
    }
    location {
      path: [4, 0, 4, 0, 2, 1]
      span: [22, 4, 14]
      leading_comments: " Image or photograph.\n"
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 1]
      span: [22, 4, 9]
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 2]
      span: [22, 12, 13]
    }
    location {
      path: [4, 0, 4, 0, 2, 2]
      span: [25, 4, 17]
      leading_comments: " Document or text data.\n"
    }
    location {
      path: [4, 0, 4, 0, 2, 2, 1]
      span: [25, 4, 12]
    }
    location {
      path: [4, 0, 4, 0, 2, 2, 2]
      span: [25, 15, 16]
    }
    location {
      path: [4, 0, 4, 0, 2, 3]
      span: [28, 4, 14]
      leading_comments: " Video data.\n"
    }
    location {
      path: [4, 0, 4, 0, 2, 3, 1]
      span: [28, 4, 9]
    }
    location {
      path: [4, 0, 4, 0, 2, 3, 2]
      span: [28, 12, 13]
    }
    location {
      path: [4, 0, 2, 0]
      span: [32, 2, 34, 4]
      leading_comments: " Specifies the generic kind of media being described or attached.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [32, 2, 29, 3]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [32, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [32, 7, 11]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [32, 14, 15]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [32, 16, 34, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [33, 4, 100]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [33, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [33, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [33, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [33, 34, 100]
    }
    location {
      path: [4, 0, 8, 0]
      span: [37, 2, 52, 3]
      leading_comments: " Specifies the content for the media item.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [37, 8, 15]
    }
    location {
      path: [4, 0, 2, 1]
      span: [39, 4, 41, 6]
      leading_comments: " Specifies content for an image-based media item.\n"
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [39, 4, 13]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [39, 14, 24]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [39, 27, 30]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [39, 31, 41, 5]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [40, 6, 86]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [40, 6, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [40, 6, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [40, 7, 32]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [40, 36, 86]
    }
    location {
      path: [4, 0, 2, 2]
      span: [44, 4, 46, 6]
      leading_comments: " Specifies content for a document-based media item.\n"
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [44, 4, 16]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [44, 17, 30]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [44, 33, 36]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [44, 37, 46, 5]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [45, 6, 88]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [45, 6, 33]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [45, 6, 33]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [45, 7, 32]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [45, 36, 88]
    }
    location {
      path: [4, 0, 2, 3]
      span: [49, 4, 51, 6]
      leading_comments: " Specifies content for a video-based media item.\n"
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [49, 4, 13]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [49, 14, 24]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [49, 27, 30]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [49, 31, 51, 5]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [50, 6, 85]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [50, 6, 33]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [50, 6, 33]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [50, 7, 32]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [50, 36, 85]
    }
    location {
      path: [4, 1]
      span: [57, 0, 80, 1]
      leading_comments: " Specifies image type information.\n"
    }
    location {
      path: [4, 1, 1]
      span: [57, 8, 17]
    }
    location {
      path: [4, 1, 4, 0]
      span: [59, 2, 74, 3]
      leading_comments: " Specifies kinds of images that may be attached or described.\n"
    }
    location {
      path: [4, 1, 4, 0, 1]
      span: [59, 7, 16]
    }
    location {
      path: [4, 1, 4, 0, 2, 0]
      span: [61, 4, 12]
      leading_comments: " PNG image.\n"
    }
    location {
      path: [4, 1, 4, 0, 2, 0, 1]
      span: [61, 4, 7]
    }
    location {
      path: [4, 1, 4, 0, 2, 0, 2]
      span: [61, 10, 11]
    }
    location {
      path: [4, 1, 4, 0, 2, 1]
      span: [64, 4, 12]
      leading_comments: " JPG image.\n"
    }
    location {
      path: [4, 1, 4, 0, 2, 1, 1]
      span: [64, 4, 7]
    }
    location {
      path: [4, 1, 4, 0, 2, 1, 2]
      span: [64, 10, 11]
    }
    location {
      path: [4, 1, 4, 0, 2, 2]
      span: [67, 4, 12]
      leading_comments: " GIF image.\n"
    }
    location {
      path: [4, 1, 4, 0, 2, 2, 1]
      span: [67, 4, 7]
    }
    location {
      path: [4, 1, 4, 0, 2, 2, 2]
      span: [67, 10, 11]
    }
    location {
      path: [4, 1, 4, 0, 2, 3]
      span: [70, 4, 12]
      leading_comments: " SVG image.\n"
    }
    location {
      path: [4, 1, 4, 0, 2, 3, 1]
      span: [70, 4, 7]
    }
    location {
      path: [4, 1, 4, 0, 2, 3, 2]
      span: [70, 10, 11]
    }
    location {
      path: [4, 1, 4, 0, 2, 4]
      span: [73, 4, 13]
      leading_comments: " WEBP image.\n"
    }
    location {
      path: [4, 1, 4, 0, 2, 4, 1]
      span: [73, 4, 8]
    }
    location {
      path: [4, 1, 4, 0, 2, 4, 2]
      span: [73, 11, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [77, 2, 79, 4]
      leading_comments: " Specifies the format of the attached or described image.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [77, 2, 74, 3]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [77, 2, 11]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [77, 12, 16]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [77, 19, 20]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [77, 21, 79, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [78, 4, 92]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [78, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [78, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [78, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [78, 34, 92]
    }
    location {
      path: [4, 2]
      span: [84, 0, 109, 1]
      leading_comments: " Specifies document type information.\n"
    }
    location {
      path: [4, 2, 1]
      span: [84, 8, 20]
    }
    location {
      path: [4, 2, 4, 0]
      span: [86, 2, 98, 3]
      leading_comments: " Specifies kinds of documents that may be attached or described.\n"
    }
    location {
      path: [4, 2, 4, 0, 1]
      span: [86, 7, 19]
    }
    location {
      path: [4, 2, 4, 0, 2, 0]
      span: [88, 4, 12]
      leading_comments: " Plaintext format.\n"
    }
    location {
      path: [4, 2, 4, 0, 2, 0, 1]
      span: [88, 4, 7]
    }
    location {
      path: [4, 2, 4, 0, 2, 0, 2]
      span: [88, 10, 11]
    }
    location {
      path: [4, 2, 4, 0, 2, 1]
      span: [91, 4, 13]
      leading_comments: " HTML format.\n"
    }
    location {
      path: [4, 2, 4, 0, 2, 1, 1]
      span: [91, 4, 8]
    }
    location {
      path: [4, 2, 4, 0, 2, 1, 2]
      span: [91, 11, 12]
    }
    location {
      path: [4, 2, 4, 0, 2, 2]
      span: [94, 4, 12]
      leading_comments: " PDF format.\n"
    }
    location {
      path: [4, 2, 4, 0, 2, 2, 1]
      span: [94, 4, 7]
    }
    location {
      path: [4, 2, 4, 0, 2, 2, 2]
      span: [94, 10, 11]
    }
    location {
      path: [4, 2, 4, 0, 2, 3]
      span: [97, 4, 17]
      leading_comments: " Markdown format.\n"
    }
    location {
      path: [4, 2, 4, 0, 2, 3, 1]
      span: [97, 4, 12]
    }
    location {
      path: [4, 2, 4, 0, 2, 3, 2]
      span: [97, 15, 16]
    }
    location {
      path: [4, 2, 2, 0]
      span: [101, 2, 103, 4]
      leading_comments: " Specifies the kind of document being attached or described.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [101, 2, 98, 3]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [101, 2, 14]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [101, 15, 19]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [101, 22, 23]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [101, 24, 103, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [102, 4, 95]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [102, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [102, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [102, 5, 30]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 7]
      span: [102, 34, 95]
    }
    location {
      path: [4, 2, 2, 1]
      span: [106, 2, 108, 4]
      leading_comments: " Specifies whether the attached document is compressed or not.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [106, 2, 103, 4]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [106, 2, 6]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [106, 7, 17]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [106, 20, 21]
    }
    location {
      path: [4, 2, 2, 1, 8]
      span: [106, 22, 108, 3]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0]
      span: [107, 4, 97]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2]
      span: [107, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0]
      span: [107, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [107, 5, 30]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 7]
      span: [107, 34, 97]
    }
    location {
      path: [4, 3]
      span: [113, 0, 130, 1]
      leading_comments: " Specifies video type information.\n"
    }
    location {
      path: [4, 3, 1]
      span: [113, 8, 17]
    }
    location {
      path: [4, 3, 4, 0]
      span: [115, 2, 124, 3]
      leading_comments: " Specifies kinds of videos that may be attached or described.\n"
    }
    location {
      path: [4, 3, 4, 0, 1]
      span: [115, 7, 16]
    }
    location {
      path: [4, 3, 4, 0, 2, 0]
      span: [117, 4, 12]
      leading_comments: " MP4 video.\n"
    }
    location {
      path: [4, 3, 4, 0, 2, 0, 1]
      span: [117, 4, 7]
    }
    location {
      path: [4, 3, 4, 0, 2, 0, 2]
      span: [117, 10, 11]
    }
    location {
      path: [4, 3, 4, 0, 2, 1]
      span: [120, 4, 12]
      leading_comments: " Flash video.\n"
    }
    location {
      path: [4, 3, 4, 0, 2, 1, 1]
      span: [120, 4, 7]
    }
    location {
      path: [4, 3, 4, 0, 2, 1, 2]
      span: [120, 10, 11]
    }
    location {
      path: [4, 3, 4, 0, 2, 2]
      span: [123, 4, 12]
      leading_comments: " HTTP Live Streaming video.\n"
    }
    location {
      path: [4, 3, 4, 0, 2, 2, 1]
      span: [123, 4, 7]
    }
    location {
      path: [4, 3, 4, 0, 2, 2, 2]
      span: [123, 10, 11]
    }
    location {
      path: [4, 3, 2, 0]
      span: [127, 2, 129, 4]
      leading_comments: " Specifies the kind of video being attached or described.\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [127, 2, 124, 3]
    }
    location {
      path: [4, 3, 2, 0, 6]
      span: [127, 2, 11]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [127, 12, 16]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [127, 19, 20]
    }
    location {
      path: [4, 3, 2, 0, 8]
      span: [127, 21, 129, 3]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0]
      span: [128, 4, 92]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2]
      span: [128, 4, 31]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2, 0]
      span: [128, 4, 31]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [128, 5, 30]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 7]
      span: [128, 34, 92]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "media/MediaItem.proto"
  package: "media"
  dependency: "bq_field.proto"
  dependency: "media/MediaKey.proto"
  dependency: "media/MediaType.proto"
  message_type {
    name: "MediaItem"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.MediaKey"
      options {
        1025: "Key uniquely identifying this media item."
      }
      json_name: "key"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.MediaType"
      options {
        1025: "Type of media this is describing."
      }
      json_name: "type"
    }
    field {
      name: "name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Friendly name for this media."
      }
      json_name: "name"
    }
    field {
      name: "uri"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Absolute URI to this media."
      }
      json_name: "uri"
    }
  }
  options {
    java_package: "io.bloombox.schema.media"
    java_outer_classname: "AttachedMedia"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 38, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 13]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 49]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 48]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 29]
    }
    location {
      path: [3, 2]
      span: [14, 7, 30]
    }
    location {
      path: [4, 0]
      span: [18, 0, 38, 1]
      leading_comments: " Describes an individual media item, which can be an image, video, etc.\n"
    }
    location {
      path: [4, 0, 1]
      span: [18, 8, 17]
    }
    location {
      path: [4, 0, 2, 0]
      span: [20, 2, 22, 4]
      leading_comments: " Key uniquely identifying this media item.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [20, 2, 18, 19]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [20, 2, 16]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [20, 17, 20]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [20, 23, 24]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [20, 25, 22, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [21, 4, 77]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [21, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [21, 34, 77]
    }
    location {
      path: [4, 0, 2, 1]
      span: [25, 2, 27, 4]
      leading_comments: " Type of media this is describing.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [25, 2, 22, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [25, 2, 17]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [25, 18, 22]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [25, 25, 26]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [25, 27, 27, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [26, 4, 69]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [26, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [26, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [26, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [26, 34, 69]
    }
    location {
      path: [4, 0, 2, 2]
      span: [30, 2, 32, 4]
      leading_comments: " Friendly name for this media.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [30, 2, 27, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [30, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [30, 9, 13]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [30, 16, 17]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [30, 18, 32, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [31, 4, 65]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [31, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [31, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [31, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [31, 34, 65]
    }
    location {
      path: [4, 0, 2, 3]
      span: [35, 2, 37, 4]
      leading_comments: " Absolute URI to this media.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [35, 2, 32, 4]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [35, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [35, 9, 12]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [35, 15, 16]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [35, 17, 37, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [36, 4, 63]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [36, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [36, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [36, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [36, 34, 63]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "google/protobuf/timestamp.proto"
  package: "google.protobuf"
  message_type {
    name: "Timestamp"
    field {
      name: "seconds"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      json_name: "seconds"
    }
    field {
      name: "nanos"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "nanos"
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "TimestampProto"
    java_multiple_files: true
    go_package: "github.com/golang/protobuf/ptypes/timestamp"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.WellKnownTypes"
  }
  source_code_info {
    location {
      span: [30, 0, 132, 1]
    }
    location {
      path: [12]
      span: [30, 0, 18]
      leading_detached_comments: " Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
    }
    location {
      path: [2]
      span: [32, 8, 23]
    }
    location {
      path: [8]
      span: [34, 0, 59]
    }
    location {
      path: [8, 999, 0]
      span: [34, 0, 59]
    }
    location {
      path: [8, 999, 0, 2]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 7]
      span: [34, 26, 58]
    }
    location {
      path: [8]
      span: [35, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [35, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [35, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [35, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [35, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [35, 26, 30]
    }
    location {
      path: [8]
      span: [36, 0, 66]
    }
    location {
      path: [8, 999, 2]
      span: [36, 0, 66]
    }
    location {
      path: [8, 999, 2, 2]
      span: [36, 7, 17]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [36, 7, 17]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [36, 7, 17]
    }
    location {
      path: [8, 999, 2, 7]
      span: [36, 20, 65]
    }
    location {
      path: [8]
      span: [37, 0, 44]
    }
    location {
      path: [8, 999, 3]
      span: [37, 0, 44]
    }
    location {
      path: [8, 999, 3, 2]
      span: [37, 7, 19]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [37, 7, 19]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [37, 7, 19]
    }
    location {
      path: [8, 999, 3, 7]
      span: [37, 22, 43]
    }
    location {
      path: [8]
      span: [38, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [38, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [38, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [38, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [38, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [38, 30, 46]
    }
    location {
      path: [8]
      span: [39, 0, 34]
    }
    location {
      path: [8, 999, 5]
      span: [39, 0, 34]
    }
    location {
      path: [8, 999, 5, 2]
      span: [39, 7, 26]
    }
    location {
      path: [8, 999, 5, 2, 0]
      span: [39, 7, 26]
    }
    location {
      path: [8, 999, 5, 2, 0, 1]
      span: [39, 7, 26]
    }
    location {
      path: [8, 999, 5, 3]
      span: [39, 29, 33]
    }
    location {
      path: [8]
      span: [40, 0, 33]
    }
    location {
      path: [8, 999, 6]
      span: [40, 0, 33]
    }
    location {
      path: [8, 999, 6, 2]
      span: [40, 7, 24]
    }
    location {
      path: [8, 999, 6, 2, 0]
      span: [40, 7, 24]
    }
    location {
      path: [8, 999, 6, 2, 0, 1]
      span: [40, 7, 24]
    }
    location {
      path: [8, 999, 6, 7]
      span: [40, 27, 32]
    }
    location {
      path: [4, 0]
      span: [120, 0, 132, 1]
      leading_comments: " A Timestamp represents a point in time independent of any time zone\n or calendar, represented as seconds and fractions of seconds at\n nanosecond resolution in UTC Epoch time. It is encoded using the\n Proleptic Gregorian Calendar which extends the Gregorian calendar\n backwards to year one. It is encoded assuming all minutes are 60\n seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n table is needed for interpretation. Range is from\n 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z.\n By restricting to that range, we ensure that we can convert to\n and from  RFC 3339 date strings.\n See [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).\n\n # Examples\n\n Example 1: Compute Timestamp from POSIX `time()`.\n\n     Timestamp timestamp;\n     timestamp.set_seconds(time(NULL));\n     timestamp.set_nanos(0);\n\n Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n     struct timeval tv;\n     gettimeofday(&tv, NULL);\n\n     Timestamp timestamp;\n     timestamp.set_seconds(tv.tv_sec);\n     timestamp.set_nanos(tv.tv_usec * 1000);\n\n Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\n     FILETIME ft;\n     GetSystemTimeAsFileTime(&ft);\n     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;\n\n     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n     Timestamp timestamp;\n     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n\n Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n     long millis = System.currentTimeMillis();\n\n     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n         .setNanos((int) ((millis % 1000) * 1000000)).build();\n\n\n Example 5: Compute Timestamp from current time in Python.\n\n     timestamp = Timestamp()\n     timestamp.GetCurrentTime()\n\n # JSON Mapping\n\n In JSON format, the Timestamp type is encoded as a string in the\n [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n where {year} is always expressed using four digits while {month}, {day},\n {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n is required, though only UTC (as indicated by \"Z\") is presently supported.\n\n For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n 01:30 UTC on January 15, 2017.\n\n In JavaScript, one can convert a Date object to this format using the\n standard [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString]\n method. In Python, a standard `datetime.datetime` object can be converted\n to this format using [`strftime`](https://docs.python.org/2/library/time.html#time.strftime)\n with the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one\n can use the Joda Time's [`ISODateTimeFormat.dateTime()`](\n http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime())\n to obtain a formatter capable of generating timestamps in this format.\n\n\n"
    }
    location {
      path: [4, 0, 1]
      span: [120, 8, 17]
    }
    location {
      path: [4, 0, 2, 0]
      span: [125, 2, 20]
      leading_comments: " Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [125, 2, 120, 19]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [125, 2, 7]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [125, 8, 15]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [125, 18, 19]
    }
    location {
      path: [4, 0, 2, 1]
      span: [131, 2, 18]
      leading_comments: " Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [131, 2, 125, 20]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [131, 2, 7]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [131, 8, 13]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [131, 16, 17]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "temporal/Instant.proto"
  package: "temporal"
  dependency: "bq_field.proto"
  dependency: "google/protobuf/timestamp.proto"
  message_type {
    name: "Instant"
    field {
      name: "iso8601"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "ISO8601-formatted timestamp."
      }
      oneof_index: 0
      json_name: "iso8601"
    }
    field {
      name: "timestamp"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      options {
        1025: "Unix epoch timestamp, at millisecond resolution."
      }
      oneof_index: 0
      json_name: "timestamp"
    }
    field {
      name: "instant"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.Timestamp"
      options {
        1025: "Unix epoch timestamp, at millisecond resolution."
      }
      oneof_index: 0
      json_name: "instant"
    }
    oneof_decl {
      name: "spec"
    }
  }
  options {
    java_package: "io.bloombox.schema.temporal"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 32, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [10, 7, 40]
    }
    location {
      path: [4, 0]
      span: [14, 0, 32, 1]
      leading_comments: " Specifies a particular moment in time.\n"
    }
    location {
      path: [4, 0, 1]
      span: [14, 8, 15]
    }
    location {
      path: [4, 0, 8, 0]
      span: [16, 2, 31, 3]
      leading_comments: " Instant specification option.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [16, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 4, 20, 6]
      leading_comments: " ISO8601-formatted timestamp.\n"
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [18, 4, 10]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 11, 18]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 21, 22]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [18, 23, 20, 5]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [19, 6, 66]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [19, 6, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [19, 6, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [19, 7, 32]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [19, 36, 66]
    }
    location {
      path: [4, 0, 2, 1]
      span: [23, 4, 25, 6]
      leading_comments: " Unix epoch timestamp, at millisecond resolution.\n"
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [23, 4, 10]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [23, 11, 20]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [23, 23, 24]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [23, 25, 25, 5]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [24, 6, 86]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [24, 6, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [24, 6, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [24, 7, 32]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [24, 36, 86]
    }
    location {
      path: [4, 0, 2, 2]
      span: [28, 4, 30, 6]
      leading_comments: " Protobuf timestamp.\n"
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [28, 4, 29]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [28, 30, 37]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [28, 40, 41]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [28, 42, 30, 5]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [29, 6, 86]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [29, 6, 33]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [29, 6, 33]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [29, 7, 32]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [29, 36, 86]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "geo/Point.proto"
  package: "geo"
  message_type {
    name: "Point"
    field {
      name: "latitude"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "latitude"
    }
    field {
      name: "longitude"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "longitude"
    }
    field {
      name: "elevation"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "elevation"
    }
    field {
      name: "accuracy"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "accuracy"
    }
  }
  options {
    java_package: "io.bloombox.schema.geo"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 15, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 11]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 47]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 47]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 46]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 15, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 13]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 22]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 15]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 17]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 20, 21]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 23]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 22]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 9, 18]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 21, 22]
    }
    location {
      path: [4, 0, 2, 2]
      span: [13, 2, 23]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [13, 2, 12, 23]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [13, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [13, 9, 18]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [13, 21, 22]
    }
    location {
      path: [4, 0, 2, 3]
      span: [14, 2, 22]
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [14, 2, 13, 23]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [14, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [14, 9, 17]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [14, 20, 21]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "geo/Address.proto"
  package: "geo"
  message_type {
    name: "Address"
    field {
      name: "first_line"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "firstLine"
    }
    field {
      name: "second_line"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "secondLine"
    }
    field {
      name: "city"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "city"
    }
    field {
      name: "state"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "state"
    }
    field {
      name: "zipcode"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "zipcode"
    }
    field {
      name: "country"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "country"
    }
  }
  options {
    java_package: "io.bloombox.schema.geo"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 17, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 11]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 47]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 47]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 46]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 17, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 15]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 24]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 17]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 19]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 22, 23]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 25]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 24]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 9, 20]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 23, 24]
    }
    location {
      path: [4, 0, 2, 2]
      span: [13, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [13, 2, 12, 25]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [13, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [13, 9, 13]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [13, 16, 17]
    }
    location {
      path: [4, 0, 2, 3]
      span: [14, 2, 19]
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [14, 2, 13, 18]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [14, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [14, 9, 14]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [14, 17, 18]
    }
    location {
      path: [4, 0, 2, 4]
      span: [15, 2, 21]
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [15, 2, 14, 19]
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [15, 2, 8]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [15, 9, 16]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [15, 19, 20]
    }
    location {
      path: [4, 0, 2, 5]
      span: [16, 2, 21]
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [16, 2, 15, 21]
    }
    location {
      path: [4, 0, 2, 5, 5]
      span: [16, 2, 8]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [16, 9, 16]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [16, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "content/Name.proto"
  package: "content"
  message_type {
    name: "Name"
    field {
      name: "primary"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "primary"
    }
    field {
      name: "display"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "display"
    }
  }
  options {
    java_package: "io.bloombox.schema.content"
    java_outer_classname: "NameContent"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 17, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 44]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 44]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 43]
    }
    location {
      path: [4, 0]
      span: [12, 0, 17, 1]
    }
    location {
      path: [4, 0, 1]
      span: [12, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [14, 2, 21]
      leading_comments: " basic name\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [14, 2, 12, 14]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [14, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [14, 9, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [14, 19, 20]
    }
    location {
      path: [4, 0, 2, 1]
      span: [16, 2, 21]
      leading_comments: " display name \n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [16, 2, 14, 21]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [16, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [16, 9, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [16, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "geo/Location.proto"
  package: "geo"
  dependency: "bq_field.proto"
  dependency: "geo/Point.proto"
  dependency: "geo/Address.proto"
  dependency: "content/Name.proto"
  message_type {
    name: "DistanceValue"
    field {
      name: "unit"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".geo.DistanceUnit"
      options {
        1025: "Specifies the unit of measurement employed for this distance."
      }
      json_name: "unit"
    }
    field {
      name: "value"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      options {
        1025: "Actual distance value."
      }
      json_name: "value"
    }
  }
  message_type {
    name: "LocationAccuracy"
    field {
      name: "estimate"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies whether this accuracy rating is an estimate."
      }
      json_name: "estimate"
    }
    field {
      name: "value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.DistanceValue"
      options {
        1025: "Distance value for the accuracy specified."
      }
      json_name: "value"
    }
  }
  message_type {
    name: "Location"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Name"
      options {
        1025: "Name for this location, if applicable."
      }
      json_name: "name"
    }
    field {
      name: "address"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Address"
      options {
        1025: "Address for this location, if applicable."
      }
      json_name: "address"
    }
    field {
      name: "point"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Point"
      options {
        1025: "Geopoint (latitude/longitude) for this location."
      }
      json_name: "point"
    }
    field {
      name: "accuracy"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.LocationAccuracy"
      options {
        1025: "Specifies the accuracy estimate, if known."
      }
      json_name: "accuracy"
    }
  }
  message_type {
    name: "Distance"
    field {
      name: "estimate"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies whether this distance is an estimate."
      }
      json_name: "estimate"
    }
    field {
      name: "accuracy"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.LocationAccuracy"
      options {
        1025: "Specifies the accuracy estimate for the distance values, if known."
      }
      json_name: "accuracy"
    }
    field {
      name: "unit"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".geo.DistanceUnit"
      options {
        1025: "Specifies whether this distance is an estimate."
      }
      json_name: "unit"
    }
    field {
      name: "start"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Location"
      options {
        1025: "Specifies the starting location for a distance span."
      }
      json_name: "start"
    }
    field {
      name: "end"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Location"
      options {
        1025: "Specifies the terminating location for a distance span."
      }
      json_name: "end"
    }
  }
  enum_type {
    name: "DistanceUnit"
    value {
      name: "METERS"
      number: 0
    }
    value {
      name: "INCHES"
      number: 1
    }
    value {
      name: "FEET"
      number: 2
    }
    value {
      name: "MILLIMETERS"
      number: 3
    }
    value {
      name: "CENTIMETERS"
      number: 4
    }
    value {
      name: "KILOMETERS"
      number: 5
    }
    value {
      name: "MILES"
      number: 6
    }
  }
  options {
    java_package: "io.bloombox.schema.geo"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 119, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 11]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 47]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 47]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 46]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 24]
    }
    location {
      path: [3, 2]
      span: [12, 7, 26]
    }
    location {
      path: [3, 3]
      span: [13, 7, 27]
    }
    location {
      path: [5, 0]
      span: [17, 0, 38, 1]
      leading_comments: " Enumeration of recognized units of distance.\n"
    }
    location {
      path: [5, 0, 1]
      span: [17, 5, 17]
    }
    location {
      path: [5, 0, 2, 0]
      span: [19, 2, 13]
      leading_comments: " Distance in meters.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [19, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [19, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [22, 2, 13]
      leading_comments: " Distance in inches.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [22, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [22, 11, 12]
    }
    location {
      path: [5, 0, 2, 2]
      span: [25, 2, 11]
      leading_comments: " Distance in feet.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [25, 2, 6]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [25, 9, 10]
    }
    location {
      path: [5, 0, 2, 3]
      span: [28, 2, 18]
      leading_comments: " Distance in millimeters.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [28, 2, 13]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [28, 16, 17]
    }
    location {
      path: [5, 0, 2, 4]
      span: [31, 2, 18]
      leading_comments: " Distance in centimeters.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [31, 2, 13]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [31, 16, 17]
    }
    location {
      path: [5, 0, 2, 5]
      span: [34, 2, 17]
      leading_comments: " Distance in kilometers.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [34, 2, 12]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [34, 15, 16]
    }
    location {
      path: [5, 0, 2, 6]
      span: [37, 2, 12]
      leading_comments: " Distance in miles.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [37, 2, 7]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [37, 10, 11]
    }
    location {
      path: [4, 0]
      span: [42, 0, 52, 1]
      leading_comments: " Specifies a single distance value.\n"
    }
    location {
      path: [4, 0, 1]
      span: [42, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [44, 2, 46, 4]
      leading_comments: " Specifies the unit of measurement employed for this distance.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [44, 2, 42, 23]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [44, 2, 14]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [44, 15, 19]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [44, 22, 23]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [44, 24, 46, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [45, 4, 97]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [45, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [45, 34, 97]
    }
    location {
      path: [4, 0, 2, 1]
      span: [49, 2, 51, 4]
      leading_comments: " Actual value.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [49, 2, 46, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [49, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [49, 9, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [49, 17, 18]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [49, 19, 51, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [50, 4, 58]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [50, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [50, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [50, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [50, 34, 58]
    }
    location {
      path: [4, 1]
      span: [56, 0, 66, 1]
      leading_comments: " Represents an estimate of location accuracy.\n"
    }
    location {
      path: [4, 1, 1]
      span: [56, 8, 24]
    }
    location {
      path: [4, 1, 2, 0]
      span: [58, 2, 60, 4]
      leading_comments: " Specifies whether this accuracy rating is an estimate.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [58, 2, 56, 26]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [58, 2, 6]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [58, 7, 15]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [58, 18, 19]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [58, 20, 60, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [59, 4, 90]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [59, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [59, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [59, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [59, 34, 90]
    }
    location {
      path: [4, 1, 2, 1]
      span: [63, 2, 65, 4]
      leading_comments: " Distance value for the accuracy specified.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [63, 2, 60, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [63, 2, 15]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [63, 16, 21]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [63, 24, 25]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [63, 26, 65, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [64, 4, 78]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [64, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [64, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [64, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [64, 34, 78]
    }
    location {
      path: [4, 2]
      span: [70, 0, 90, 1]
      leading_comments: " Represents a physically addressable location in the real world.\n"
    }
    location {
      path: [4, 2, 1]
      span: [70, 8, 16]
    }
    location {
      path: [4, 2, 2, 0]
      span: [72, 2, 74, 4]
      leading_comments: " Name for this location, if applicable.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [72, 2, 70, 18]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [72, 2, 14]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [72, 15, 19]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [72, 22, 23]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [72, 24, 74, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [73, 4, 74]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [73, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [73, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [73, 5, 30]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 7]
      span: [73, 34, 74]
    }
    location {
      path: [4, 2, 2, 1]
      span: [77, 2, 79, 4]
      leading_comments: " Address for this location, if applicable.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [77, 2, 74, 4]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [77, 2, 13]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [77, 14, 21]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [77, 24, 25]
    }
    location {
      path: [4, 2, 2, 1, 8]
      span: [77, 26, 79, 3]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0]
      span: [78, 4, 77]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2]
      span: [78, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0]
      span: [78, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [78, 5, 30]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 7]
      span: [78, 34, 77]
    }
    location {
      path: [4, 2, 2, 2]
      span: [82, 2, 84, 4]
      leading_comments: " Geopoint (latitude/longitude) for this location.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [82, 2, 79, 4]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [82, 2, 11]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [82, 12, 17]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [82, 20, 21]
    }
    location {
      path: [4, 2, 2, 2, 8]
      span: [82, 22, 84, 3]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0]
      span: [83, 4, 84]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2]
      span: [83, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0]
      span: [83, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [83, 5, 30]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 7]
      span: [83, 34, 84]
    }
    location {
      path: [4, 2, 2, 3]
      span: [87, 2, 89, 4]
      leading_comments: " Specifies the accuracy estimate, if known.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [87, 2, 84, 4]
    }
    location {
      path: [4, 2, 2, 3, 6]
      span: [87, 2, 18]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [87, 19, 27]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [87, 30, 31]
    }
    location {
      path: [4, 2, 2, 3, 8]
      span: [87, 32, 89, 3]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0]
      span: [88, 4, 78]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2]
      span: [88, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0]
      span: [88, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [88, 5, 30]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 7]
      span: [88, 34, 78]
    }
    location {
      path: [4, 3]
      span: [94, 0, 119, 1]
      leading_comments: " Specifies a distance between two locations.\n"
    }
    location {
      path: [4, 3, 1]
      span: [94, 8, 16]
    }
    location {
      path: [4, 3, 2, 0]
      span: [96, 2, 98, 4]
      leading_comments: " Specifies whether this distance is an estimate.\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [96, 2, 94, 18]
    }
    location {
      path: [4, 3, 2, 0, 5]
      span: [96, 2, 6]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [96, 7, 15]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [96, 18, 19]
    }
    location {
      path: [4, 3, 2, 0, 8]
      span: [96, 20, 98, 3]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0]
      span: [97, 4, 83]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2]
      span: [97, 4, 31]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2, 0]
      span: [97, 4, 31]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [97, 5, 30]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 7]
      span: [97, 34, 83]
    }
    location {
      path: [4, 3, 2, 1]
      span: [101, 2, 103, 4]
      leading_comments: " Specifies the accuracy estimate for the distance values, if known.\n"
    }
    location {
      path: [4, 3, 2, 1, 4]
      span: [101, 2, 98, 4]
    }
    location {
      path: [4, 3, 2, 1, 6]
      span: [101, 2, 18]
    }
    location {
      path: [4, 3, 2, 1, 1]
      span: [101, 19, 27]
    }
    location {
      path: [4, 3, 2, 1, 3]
      span: [101, 30, 31]
    }
    location {
      path: [4, 3, 2, 1, 8]
      span: [101, 32, 103, 3]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0]
      span: [102, 4, 102]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 2]
      span: [102, 4, 31]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 2, 0]
      span: [102, 4, 31]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [102, 5, 30]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 7]
      span: [102, 34, 102]
    }
    location {
      path: [4, 3, 2, 2]
      span: [106, 2, 108, 4]
      leading_comments: " Specifies the unit of measurement for a location accuracy estimate.\n"
    }
    location {
      path: [4, 3, 2, 2, 4]
      span: [106, 2, 103, 4]
    }
    location {
      path: [4, 3, 2, 2, 6]
      span: [106, 2, 14]
    }
    location {
      path: [4, 3, 2, 2, 1]
      span: [106, 15, 19]
    }
    location {
      path: [4, 3, 2, 2, 3]
      span: [106, 22, 23]
    }
    location {
      path: [4, 3, 2, 2, 8]
      span: [106, 24, 108, 3]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0]
      span: [107, 4, 83]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 2]
      span: [107, 4, 31]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 2, 0]
      span: [107, 4, 31]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [107, 5, 30]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 7]
      span: [107, 34, 83]
    }
    location {
      path: [4, 3, 2, 3]
      span: [111, 2, 113, 4]
      leading_comments: " Specifies the starting location for a distance span.\n"
    }
    location {
      path: [4, 3, 2, 3, 4]
      span: [111, 2, 108, 4]
    }
    location {
      path: [4, 3, 2, 3, 6]
      span: [111, 2, 10]
    }
    location {
      path: [4, 3, 2, 3, 1]
      span: [111, 11, 16]
    }
    location {
      path: [4, 3, 2, 3, 3]
      span: [111, 19, 20]
    }
    location {
      path: [4, 3, 2, 3, 8]
      span: [111, 21, 113, 3]
    }
    location {
      path: [4, 3, 2, 3, 8, 999, 0]
      span: [112, 4, 88]
    }
    location {
      path: [4, 3, 2, 3, 8, 999, 0, 2]
      span: [112, 4, 31]
    }
    location {
      path: [4, 3, 2, 3, 8, 999, 0, 2, 0]
      span: [112, 4, 31]
    }
    location {
      path: [4, 3, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [112, 5, 30]
    }
    location {
      path: [4, 3, 2, 3, 8, 999, 0, 7]
      span: [112, 34, 88]
    }
    location {
      path: [4, 3, 2, 4]
      span: [116, 2, 118, 4]
      leading_comments: " Specifies the terminating location for a distance span.\n"
    }
    location {
      path: [4, 3, 2, 4, 4]
      span: [116, 2, 113, 4]
    }
    location {
      path: [4, 3, 2, 4, 6]
      span: [116, 2, 10]
    }
    location {
      path: [4, 3, 2, 4, 1]
      span: [116, 11, 14]
    }
    location {
      path: [4, 3, 2, 4, 3]
      span: [116, 17, 18]
    }
    location {
      path: [4, 3, 2, 4, 8]
      span: [116, 19, 118, 3]
    }
    location {
      path: [4, 3, 2, 4, 8, 999, 0]
      span: [117, 4, 91]
    }
    location {
      path: [4, 3, 2, 4, 8, 999, 0, 2]
      span: [117, 4, 31]
    }
    location {
      path: [4, 3, 2, 4, 8, 999, 0, 2, 0]
      span: [117, 4, 31]
    }
    location {
      path: [4, 3, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [117, 5, 30]
    }
    location {
      path: [4, 3, 2, 4, 8, 999, 0, 7]
      span: [117, 34, 91]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "contact/PhoneNumber.proto"
  package: "contact"
  message_type {
    name: "PhoneNumber"
    field {
      name: "e164"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "e164"
    }
    field {
      name: "validated"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "validated"
    }
  }
  options {
    java_package: "io.bloombox.schema.contact"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 13, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 13, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 18]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 21]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 16, 17]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 18]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 6]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 7, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "contact/EmailAddress.proto"
  package: "contact"
  message_type {
    name: "EmailAddress"
    field {
      name: "address"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "address"
    }
    field {
      name: "validated"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "validated"
    }
  }
  options {
    java_package: "io.bloombox.schema.contact"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 13, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 13, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 20]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 21]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 22]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 19, 20]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 21]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 6]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 7, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "contact/Website.proto"
  package: "contact"
  dependency: "bq_field.proto"
  message_type {
    name: "Website"
    field {
      name: "uri"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "URI for the website."
      }
      json_name: "uri"
    }
    field {
      name: "title"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Title from the HTML page at URI."
      }
      json_name: "title"
    }
    field {
      name: "icon"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      options {
        1024: 1
      }
      json_name: "icon"
    }
  }
  options {
    java_package: "io.bloombox.schema.contact"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 28, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [4, 0]
      span: [13, 0, 28, 1]
      leading_comments: " Specifies a structure that describes a URI/website, and related information.\n"
    }
    location {
      path: [4, 0, 1]
      span: [13, 8, 15]
    }
    location {
      path: [4, 0, 2, 0]
      span: [15, 2, 17, 4]
      leading_comments: " URI for the website.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [15, 2, 13, 17]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [15, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [15, 9, 12]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [15, 15, 16]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [15, 17, 17, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [16, 4, 56]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [16, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [16, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [16, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [16, 34, 56]
    }
    location {
      path: [4, 0, 2, 1]
      span: [20, 2, 22, 4]
      leading_comments: " Title from the HTML page at URI.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [20, 2, 17, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [20, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [20, 9, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [20, 17, 18]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [20, 19, 22, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [21, 4, 68]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [21, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [21, 34, 68]
    }
    location {
      path: [4, 0, 2, 2]
      span: [25, 2, 27, 4]
      leading_comments: " Favicon raw bytes from the HTML page at URI.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [25, 2, 22, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [25, 2, 7]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [25, 8, 12]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [25, 15, 16]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [25, 17, 27, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [26, 4, 33]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [26, 4, 26]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [26, 4, 26]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [26, 5, 25]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 3]
      span: [26, 29, 33]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "contact/ContactInfo.proto"
  package: "contact"
  dependency: "bq_field.proto"
  dependency: "geo/Location.proto"
  dependency: "contact/PhoneNumber.proto"
  dependency: "contact/EmailAddress.proto"
  dependency: "contact/Website.proto"
  message_type {
    name: "ContactInfo"
    field {
      name: "location"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Location"
      options {
        1025: "Geographic location and physical mail contact information."
      }
      json_name: "location"
    }
    field {
      name: "phone"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".contact.PhoneNumber"
      options {
        1025: "Telephone contact information."
      }
      json_name: "phone"
    }
    field {
      name: "email"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".contact.EmailAddress"
      options {
        1025: "Electronic mail contact information."
      }
      json_name: "email"
    }
    field {
      name: "website"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".contact.Website"
      options {
        1025: "Website contact information."
      }
      json_name: "website"
    }
  }
  options {
    java_package: "io.bloombox.schema.contact"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 38, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 27]
    }
    location {
      path: [3, 2]
      span: [12, 7, 34]
    }
    location {
      path: [3, 3]
      span: [13, 7, 35]
    }
    location {
      path: [3, 4]
      span: [14, 7, 30]
    }
    location {
      path: [4, 0]
      span: [18, 0, 38, 1]
      leading_comments: " Contact information for a person, organization, or other entity.\n"
    }
    location {
      path: [4, 0, 1]
      span: [18, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [20, 2, 22, 4]
      leading_comments: " Geographic location and physical mail contact information.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [20, 2, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [20, 2, 14]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [20, 15, 23]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [20, 26, 27]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [20, 28, 22, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [21, 4, 94]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [21, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [21, 34, 94]
    }
    location {
      path: [4, 0, 2, 1]
      span: [25, 2, 27, 4]
      leading_comments: " Telephone contact information.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [25, 2, 22, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [25, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [25, 22, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [25, 30, 31]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [25, 32, 27, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [26, 4, 66]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [26, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [26, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [26, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [26, 34, 66]
    }
    location {
      path: [4, 0, 2, 2]
      span: [30, 2, 32, 4]
      leading_comments: " Electronic mail contact information.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [30, 2, 27, 4]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [30, 2, 22]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [30, 23, 28]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [30, 31, 32]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [30, 33, 32, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [31, 4, 72]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [31, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [31, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [31, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [31, 34, 72]
    }
    location {
      path: [4, 0, 2, 3]
      span: [35, 2, 37, 4]
      leading_comments: " Website contact information.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [35, 2, 32, 4]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [35, 2, 17]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [35, 18, 25]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [35, 28, 29]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [35, 30, 37, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [36, 4, 64]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [36, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [36, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [36, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [36, 34, 64]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "person/PersonName.proto"
  package: "person"
  dependency: "bq_field.proto"
  message_type {
    name: "Name"
    field {
      name: "full_name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Person's full name, if a fulltext value should override."
      }
      json_name: "fullName"
    }
    field {
      name: "first_name"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Person's given, or first, name."
      }
      json_name: "firstName"
    }
    field {
      name: "last_name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Person's family, or last, name."
      }
      json_name: "lastName"
    }
    field {
      name: "middle_name"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Person's middle name."
      }
      json_name: "middleName"
    }
    field {
      name: "prefix"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Prefix for a person's name."
      }
      json_name: "prefix"
    }
    field {
      name: "postfix"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Postfix for a person's name."
      }
      json_name: "postfix"
    }
  }
  options {
    java_package: "io.bloombox.schema.person"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 44, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 14]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 50]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 50]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 49]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [4, 0]
      span: [14, 0, 44, 1]
      leading_comments: " Represents a human being's name, in the style of \"given\" name (first) and \"family\" name (last) being concatenated to\n form a full person's name. Additional names, like middle names, etc, are also specified here.\n"
    }
    location {
      path: [4, 0, 1]
      span: [14, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [16, 2, 18, 4]
      leading_comments: " Person's full name, if a fulltext value should override.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [16, 2, 14, 14]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [16, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [16, 9, 18]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [16, 21, 22]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [16, 23, 18, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [17, 4, 92]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [17, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [17, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [17, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [17, 34, 92]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 23, 4]
      leading_comments: " Person's given, or first, name.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [21, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 9, 19]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 22, 23]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [21, 24, 23, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [22, 4, 67]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [22, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [22, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [22, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [22, 34, 67]
    }
    location {
      path: [4, 0, 2, 2]
      span: [26, 2, 28, 4]
      leading_comments: " Person's family, or last, name.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [26, 2, 23, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [26, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [26, 9, 18]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [26, 21, 22]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [26, 23, 28, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [27, 4, 67]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [27, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [27, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [27, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [27, 34, 67]
    }
    location {
      path: [4, 0, 2, 3]
      span: [31, 2, 33, 4]
      leading_comments: " Person's middle name.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [31, 2, 28, 4]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [31, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [31, 9, 20]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [31, 23, 24]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [31, 25, 33, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [32, 4, 57]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [32, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [32, 34, 57]
    }
    location {
      path: [4, 0, 2, 4]
      span: [36, 2, 38, 4]
      leading_comments: " Prefix for a person's name.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [36, 2, 33, 4]
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [36, 2, 8]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [36, 9, 15]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [36, 18, 19]
    }
    location {
      path: [4, 0, 2, 4, 8]
      span: [36, 20, 38, 3]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0]
      span: [37, 4, 63]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2]
      span: [37, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0]
      span: [37, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [37, 5, 30]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 7]
      span: [37, 34, 63]
    }
    location {
      path: [4, 0, 2, 5]
      span: [41, 2, 43, 4]
      leading_comments: " Postfix for a person's name.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [41, 2, 38, 4]
    }
    location {
      path: [4, 0, 2, 5, 5]
      span: [41, 2, 8]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [41, 9, 16]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [41, 19, 20]
    }
    location {
      path: [4, 0, 2, 5, 8]
      span: [41, 21, 43, 3]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0]
      span: [42, 4, 64]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2]
      span: [42, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0]
      span: [42, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [42, 5, 30]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 7]
      span: [42, 34, 64]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "person/Person.proto"
  package: "person"
  dependency: "bq_field.proto"
  dependency: "temporal/Date.proto"
  dependency: "contact/ContactInfo.proto"
  dependency: "person/PersonName.proto"
  message_type {
    name: "Person"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".person.Name"
      options {
        1025: "Person's primary name information."
      }
      json_name: "name"
    }
    field {
      name: "legal_name"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".person.Name"
      options {
        1025: "Person's legal name, if it differs from their primary name."
      }
      json_name: "legalName"
    }
    field {
      name: "alternate_name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".person.Name"
      options {
        1025: "Person's optional alternate name."
      }
      json_name: "alternateName"
    }
    field {
      name: "contact"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".contact.ContactInfo"
      options {
        1025: "Person's contact information."
      }
      json_name: "contact"
    }
    field {
      name: "date_of_birth"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Date"
      options {
        1025: "Date of birth."
      }
      json_name: "dateOfBirth"
    }
  }
  options {
    java_package: "io.bloombox.schema.person"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 42, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 14]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 50]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 50]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 49]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 28]
    }
    location {
      path: [3, 2]
      span: [12, 7, 34]
    }
    location {
      path: [3, 3]
      span: [13, 7, 32]
    }
    location {
      path: [4, 0]
      span: [17, 0, 42, 1]
      leading_comments: " A person/patint and their name, legal name, nickname, etc.\n"
    }
    location {
      path: [4, 0, 1]
      span: [17, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [19, 2, 21, 4]
      leading_comments: " Person's primary name information.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [19, 2, 17, 16]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [19, 2, 13]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [19, 14, 18]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [19, 21, 22]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [19, 23, 21, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [20, 4, 70]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [20, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [20, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [20, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [20, 34, 70]
    }
    location {
      path: [4, 0, 2, 1]
      span: [24, 2, 26, 4]
      leading_comments: " Person's legal name, if it differs from their primary name.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [24, 2, 21, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [24, 2, 13]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [24, 14, 24]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [24, 27, 28]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [24, 29, 26, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [25, 4, 95]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [25, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [25, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [25, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [25, 34, 95]
    }
    location {
      path: [4, 0, 2, 2]
      span: [29, 2, 31, 4]
      leading_comments: " Person's optional alternate name.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [29, 2, 26, 4]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [29, 2, 13]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [29, 14, 28]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [29, 31, 32]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [29, 33, 31, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [30, 4, 69]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [30, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [30, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [30, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [30, 34, 69]
    }
    location {
      path: [4, 0, 2, 3]
      span: [34, 2, 36, 4]
      leading_comments: " Person's contact information.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [34, 2, 31, 4]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [34, 2, 21]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [34, 22, 29]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [34, 32, 33]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [34, 34, 36, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [35, 4, 65]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [35, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [35, 34, 65]
    }
    location {
      path: [4, 0, 2, 4]
      span: [39, 2, 41, 4]
      leading_comments: " Date of birth.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [39, 2, 36, 4]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [39, 2, 15]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [39, 16, 29]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [39, 32, 33]
    }
    location {
      path: [4, 0, 2, 4, 8]
      span: [39, 34, 41, 3]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0]
      span: [40, 4, 50]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [40, 5, 30]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 7]
      span: [40, 34, 50]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/ids/UserDoctorRec.proto"
  package: "identity.ids"
  dependency: "bq_field.proto"
  dependency: "geo/USState.proto"
  dependency: "person/Person.proto"
  dependency: "temporal/Date.proto"
  message_type {
    name: "UserDoctorRec"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "ID number/unique code."
      }
      json_name: "id"
    }
    field {
      name: "expiration_date"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Date"
      options {
        1025: "Expiration date for the recommendation."
      }
      json_name: "expirationDate"
    }
    field {
      name: "barcode"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Raw barcode value."
      }
      json_name: "barcode"
    }
    field {
      name: "state"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".geo.usa.USState"
      options {
        1025: "US state where the recommendation is valid."
      }
      json_name: "state"
    }
    field {
      name: "country"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Country for the recommendation."
      }
      json_name: "country"
    }
    field {
      name: "doctor_id"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Doctor's unique ID."
      }
      json_name: "doctorId"
    }
    field {
      name: "doctor"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".person.Person"
      options {
        1025: "Personal information about the physician."
      }
      json_name: "doctor"
    }
  }
  options {
    java_package: "io.bloombox.schema.identity.ids"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 52, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 20]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 55]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 26]
    }
    location {
      path: [3, 2]
      span: [12, 7, 28]
    }
    location {
      path: [3, 3]
      span: [13, 7, 28]
    }
    location {
      path: [4, 0]
      span: [17, 0, 52, 1]
      leading_comments: " Doctor recommendation to allow a consumer to purchase cannabis in a restricted market.\n"
    }
    location {
      path: [4, 0, 1]
      span: [17, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [19, 2, 21, 4]
      leading_comments: " ID number/unique code.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [19, 2, 17, 23]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [19, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [19, 9, 11]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [19, 14, 15]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [19, 16, 21, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [20, 4, 58]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [20, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [20, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [20, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [20, 34, 58]
    }
    location {
      path: [4, 0, 2, 1]
      span: [24, 2, 26, 4]
      leading_comments: " Expiration date for the recommendation.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [24, 2, 21, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [24, 2, 15]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [24, 16, 31]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [24, 34, 35]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [24, 36, 26, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [25, 4, 75]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [25, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [25, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [25, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [25, 34, 75]
    }
    location {
      path: [4, 0, 2, 2]
      span: [29, 2, 31, 4]
      leading_comments: " Raw barcode value.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [29, 2, 26, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [29, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [29, 9, 16]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [29, 19, 20]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [29, 21, 31, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [30, 4, 54]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [30, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [30, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [30, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [30, 34, 54]
    }
    location {
      path: [4, 0, 2, 3]
      span: [34, 2, 36, 4]
      leading_comments: " US state where the recommendation is valid.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [34, 2, 31, 4]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [34, 2, 17]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [34, 18, 23]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [34, 26, 27]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [34, 28, 36, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [35, 4, 79]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [35, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [35, 34, 79]
    }
    location {
      path: [4, 0, 2, 4]
      span: [39, 2, 41, 4]
      leading_comments: " Country for the recommendation.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [39, 2, 36, 4]
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [39, 2, 8]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [39, 9, 16]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [39, 19, 20]
    }
    location {
      path: [4, 0, 2, 4, 8]
      span: [39, 21, 41, 3]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0]
      span: [40, 4, 67]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [40, 5, 30]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 7]
      span: [40, 34, 67]
    }
    location {
      path: [4, 0, 2, 5]
      span: [44, 2, 46, 4]
      leading_comments: " Doctor's unique ID.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [44, 2, 41, 4]
    }
    location {
      path: [4, 0, 2, 5, 5]
      span: [44, 2, 8]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [44, 9, 18]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [44, 21, 22]
    }
    location {
      path: [4, 0, 2, 5, 8]
      span: [44, 23, 46, 3]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0]
      span: [45, 4, 55]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [45, 5, 30]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 7]
      span: [45, 34, 55]
    }
    location {
      path: [4, 0, 2, 6]
      span: [49, 2, 51, 4]
      leading_comments: " Personal information about the physician.\n"
    }
    location {
      path: [4, 0, 2, 6, 4]
      span: [49, 2, 46, 4]
    }
    location {
      path: [4, 0, 2, 6, 6]
      span: [49, 2, 15]
    }
    location {
      path: [4, 0, 2, 6, 1]
      span: [49, 16, 22]
    }
    location {
      path: [4, 0, 2, 6, 3]
      span: [49, 25, 26]
    }
    location {
      path: [4, 0, 2, 6, 8]
      span: [49, 27, 51, 3]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0]
      span: [50, 4, 77]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 2]
      span: [50, 4, 31]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 2, 0]
      span: [50, 4, 31]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 2, 0, 1]
      span: [50, 5, 30]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 7]
      span: [50, 34, 77]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/menu/Section.proto"
  package: "products.menu.section"
  dependency: "content/Name.proto"
  dependency: "media/MediaItem.proto"
  message_type {
    name: "CustomSection"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "filter"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.menu.section.FilteredSection"
      json_name: "filter"
    }
  }
  message_type {
    name: "SectionMedia"
    field {
      name: "tablet_homescreen_media"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.MediaItem"
      json_name: "tabletHomescreenMedia"
    }
  }
  message_type {
    name: "SectionSettings"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Name"
      json_name: "name"
    }
    field {
      name: "media"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.section.SectionMedia"
      json_name: "media"
    }
  }
  message_type {
    name: "SectionSpec"
    field {
      name: "section"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.menu.section.Section"
      oneof_index: 0
      json_name: "section"
    }
    field {
      name: "custom_section"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.section.CustomSection"
      oneof_index: 0
      json_name: "customSection"
    }
    field {
      name: "name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "name"
    }
    field {
      name: "settings"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.section.SectionSettings"
      json_name: "settings"
    }
    field {
      name: "flags"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".products.menu.section.SectionFlag"
      json_name: "flags"
    }
    oneof_decl {
      name: "spec"
    }
  }
  enum_type {
    name: "SectionFlag"
    value {
      name: "HIDDEN"
      number: 0
    }
    value {
      name: "FEATURED"
      number: 1
    }
  }
  enum_type {
    name: "Section"
    value {
      name: "UNSPECIFIED"
      number: 0
    }
    value {
      name: "FLOWERS"
      number: 1
    }
    value {
      name: "EXTRACTS"
      number: 2
    }
    value {
      name: "EDIBLES"
      number: 3
    }
    value {
      name: "CARTRIDGES"
      number: 4
    }
    value {
      name: "APOTHECARY"
      number: 5
    }
    value {
      name: "PREROLLS"
      number: 6
    }
    value {
      name: "PLANTS"
      number: 7
    }
    value {
      name: "MERCHANDISE"
      number: 8
    }
  }
  enum_type {
    name: "FilteredSection"
    value {
      name: "ON_SALE"
      number: 0
    }
    value {
      name: "HOUSE"
      number: 1
    }
    value {
      name: "CBD"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.menu.section"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 113, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 29]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 56]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 55]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 27]
    }
    location {
      path: [3, 1]
      span: [10, 7, 30]
    }
    location {
      path: [5, 0]
      span: [14, 0, 20, 1]
      leading_comments: " Flags that may be applied to a section's configuration.\n"
    }
    location {
      path: [5, 0, 1]
      span: [14, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [16, 2, 13]
      leading_comments: " This section should not be displayed.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [16, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [16, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [19, 2, 15]
      leading_comments: " This section should be promoted and/or presented with high priority.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [19, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [19, 13, 14]
    }
    location {
      path: [5, 1]
      span: [24, 0, 51, 1]
      leading_comments: " Known sections, that are expected to be included with nearly every menu.\n"
    }
    location {
      path: [5, 1, 1]
      span: [24, 5, 12]
    }
    location {
      path: [5, 1, 2, 0]
      span: [26, 2, 18]
      leading_comments: " Unspecified or unknown section.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [26, 2, 13]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [26, 16, 17]
    }
    location {
      path: [5, 1, 2, 1]
      span: [29, 2, 14]
      leading_comments: " Traditional \"buds\" or \"flowers\" section.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [29, 2, 9]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [29, 12, 13]
    }
    location {
      path: [5, 1, 2, 2]
      span: [32, 2, 15]
      leading_comments: " Concentrated cannabis products such as oils, waxes and hashes.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [32, 2, 10]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [32, 13, 14]
    }
    location {
      path: [5, 1, 2, 3]
      span: [35, 2, 14]
      leading_comments: " Edible cannabis products, such as brownies, candy bars, etc.\n"
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [35, 2, 9]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [35, 12, 13]
    }
    location {
      path: [5, 1, 2, 4]
      span: [38, 2, 17]
      leading_comments: " Cartridge and pen battery products.\n"
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [38, 2, 12]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [38, 15, 16]
    }
    location {
      path: [5, 1, 2, 5]
      span: [41, 2, 17]
      leading_comments: " Tinctures, teas, and other miscellaneous products.\n"
    }
    location {
      path: [5, 1, 2, 5, 1]
      span: [41, 2, 12]
    }
    location {
      path: [5, 1, 2, 5, 2]
      span: [41, 15, 16]
    }
    location {
      path: [5, 1, 2, 6]
      span: [44, 2, 15]
      leading_comments: " Pre-rolled flower-based joints, potentially fortified.\n"
    }
    location {
      path: [5, 1, 2, 6, 1]
      span: [44, 2, 10]
    }
    location {
      path: [5, 1, 2, 6, 2]
      span: [44, 13, 14]
    }
    location {
      path: [5, 1, 2, 7]
      span: [47, 2, 13]
      leading_comments: " Plant clones, seeds, and other cultivation products.\n"
    }
    location {
      path: [5, 1, 2, 7, 1]
      span: [47, 2, 8]
    }
    location {
      path: [5, 1, 2, 7, 2]
      span: [47, 11, 12]
    }
    location {
      path: [5, 1, 2, 8]
      span: [50, 2, 18]
      leading_comments: " General merchandise.\n"
    }
    location {
      path: [5, 1, 2, 8, 1]
      span: [50, 2, 13]
    }
    location {
      path: [5, 1, 2, 8, 2]
      span: [50, 16, 17]
    }
    location {
      path: [5, 2]
      span: [55, 0, 64, 1]
      leading_comments: " Special filtered sections - commonly used sections based on filters builtin to apps/sites.\n"
    }
    location {
      path: [5, 2, 1]
      span: [55, 5, 20]
    }
    location {
      path: [5, 2, 2, 0]
      span: [57, 2, 14]
      leading_comments: " Only presents products that are on sale.\n"
    }
    location {
      path: [5, 2, 2, 0, 1]
      span: [57, 2, 9]
    }
    location {
      path: [5, 2, 2, 0, 2]
      span: [57, 12, 13]
    }
    location {
      path: [5, 2, 2, 1]
      span: [60, 2, 12]
      leading_comments: " Only presents products that are cultivated, manufactured, or otherwise produced in-house.\n"
    }
    location {
      path: [5, 2, 2, 1, 1]
      span: [60, 2, 7]
    }
    location {
      path: [5, 2, 2, 1, 2]
      span: [60, 10, 11]
    }
    location {
      path: [5, 2, 2, 2]
      span: [63, 2, 10]
      leading_comments: " Only presents products containing CBD.\n"
    }
    location {
      path: [5, 2, 2, 2, 1]
      span: [63, 2, 5]
    }
    location {
      path: [5, 2, 2, 2, 2]
      span: [63, 8, 9]
    }
    location {
      path: [4, 0]
      span: [68, 0, 74, 1]
      leading_comments: " Custom configuration-based menu sections, usually via `FilteredSection`.\n"
    }
    location {
      path: [4, 0, 1]
      span: [68, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [70, 2, 16]
      leading_comments: " String ID for a custom section.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [70, 2, 68, 23]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [70, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [70, 9, 11]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [70, 14, 15]
    }
    location {
      path: [4, 0, 2, 1]
      span: [73, 2, 29]
      leading_comments: " Filtered section specification.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [73, 2, 70, 16]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [73, 2, 17]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [73, 18, 24]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [73, 27, 28]
    }
    location {
      path: [4, 1]
      span: [78, 0, 81, 1]
      leading_comments: " Specifies media for a section.\n"
    }
    location {
      path: [4, 1, 1]
      span: [78, 8, 20]
    }
    location {
      path: [4, 1, 2, 0]
      span: [80, 2, 46]
      leading_comments: " Specifies a media item to use as a tablet homescreen tile for this section.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [80, 2, 78, 22]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [80, 2, 17]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [80, 18, 41]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [80, 44, 45]
    }
    location {
      path: [4, 2]
      span: [85, 0, 91, 1]
      leading_comments: " Specifies settings that a menu section may consider.\n"
    }
    location {
      path: [4, 2, 1]
      span: [85, 8, 23]
    }
    location {
      path: [4, 2, 2, 0]
      span: [87, 2, 24]
      leading_comments: " Presentable name for this section.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [87, 2, 85, 25]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [87, 2, 14]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [87, 15, 19]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [87, 22, 23]
    }
    location {
      path: [4, 2, 2, 1]
      span: [90, 2, 25]
      leading_comments: " Media to use when presenting this section.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [90, 2, 87, 24]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [90, 2, 14]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [90, 15, 20]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [90, 23, 24]
    }
    location {
      path: [4, 3]
      span: [95, 0, 113, 1]
      leading_comments: " Specifies a menu section, along with section configuration (settings and flags).\n"
    }
    location {
      path: [4, 3, 1]
      span: [95, 8, 19]
    }
    location {
      path: [4, 3, 8, 0]
      span: [97, 2, 106, 3]
      leading_comments: " Specifies the subject menu section.\n"
    }
    location {
      path: [4, 3, 8, 0, 1]
      span: [97, 8, 12]
    }
    location {
      path: [4, 3, 2, 0]
      span: [99, 4, 24]
      leading_comments: " Known and enumerated menu section.\n"
    }
    location {
      path: [4, 3, 2, 0, 6]
      span: [99, 4, 11]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [99, 12, 19]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [99, 22, 23]
    }
    location {
      path: [4, 3, 2, 1]
      span: [102, 4, 37]
      leading_comments: " Custom, filter-based menu section.\n"
    }
    location {
      path: [4, 3, 2, 1, 6]
      span: [102, 4, 17]
    }
    location {
      path: [4, 3, 2, 1, 1]
      span: [102, 18, 32]
    }
    location {
      path: [4, 3, 2, 1, 3]
      span: [102, 35, 36]
    }
    location {
      path: [4, 3, 2, 2]
      span: [105, 4, 20]
      leading_comments: " Arbitrary name for other types of sections.\n"
    }
    location {
      path: [4, 3, 2, 2, 5]
      span: [105, 4, 10]
    }
    location {
      path: [4, 3, 2, 2, 1]
      span: [105, 11, 15]
    }
    location {
      path: [4, 3, 2, 2, 3]
      span: [105, 18, 19]
    }
    location {
      path: [4, 3, 2, 3]
      span: [109, 2, 31]
      leading_comments: " Settings to apply to the subject section.\n"
    }
    location {
      path: [4, 3, 2, 3, 4]
      span: [109, 2, 106, 3]
    }
    location {
      path: [4, 3, 2, 3, 6]
      span: [109, 2, 17]
    }
    location {
      path: [4, 3, 2, 3, 1]
      span: [109, 18, 26]
    }
    location {
      path: [4, 3, 2, 3, 3]
      span: [109, 29, 30]
    }
    location {
      path: [4, 3, 2, 4]
      span: [112, 2, 33]
      leading_comments: " Current set of flags to apply to the subject section.\n"
    }
    location {
      path: [4, 3, 2, 4, 4]
      span: [112, 2, 10]
    }
    location {
      path: [4, 3, 2, 4, 6]
      span: [112, 11, 22]
    }
    location {
      path: [4, 3, 2, 4, 1]
      span: [112, 23, 28]
    }
    location {
      path: [4, 3, 2, 4, 3]
      span: [112, 31, 32]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/Grow.proto"
  package: "structs"
  enum_type {
    name: "Grow"
    value {
      name: "GENERIC"
      number: 0
    }
    value {
      name: "INDOOR"
      number: 1
    }
    value {
      name: "GREENHOUSE"
      number: 2
    }
    value {
      name: "OUTDOOR"
      number: 3
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct"
    java_outer_classname: "MaterialGrow"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 17, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 44]
    }
    location {
      path: [5, 0]
      span: [12, 0, 17, 1]
    }
    location {
      path: [5, 0, 1]
      span: [12, 5, 9]
    }
    location {
      path: [5, 0, 2, 0]
      span: [13, 2, 14]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [13, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [13, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [14, 2, 13]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [14, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [14, 11, 12]
    }
    location {
      path: [5, 0, 2, 2]
      span: [15, 2, 17]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [15, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [15, 15, 16]
    }
    location {
      path: [5, 0, 2, 3]
      span: [16, 2, 14]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [16, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [16, 12, 13]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/Species.proto"
  package: "structs"
  enum_type {
    name: "Species"
    value {
      name: "UNSPECIFIED"
      number: 0
    }
    value {
      name: "SATIVA"
      number: 1
    }
    value {
      name: "HYBRID_SATIVA"
      number: 2
    }
    value {
      name: "HYBRID"
      number: 3
    }
    value {
      name: "HYBRID_INDICA"
      number: 4
    }
    value {
      name: "INDICA"
      number: 5
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct"
    java_outer_classname: "MaterialSpecies"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 19, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [5, 0]
      span: [12, 0, 19, 1]
    }
    location {
      path: [5, 0, 1]
      span: [12, 5, 12]
    }
    location {
      path: [5, 0, 2, 0]
      span: [13, 2, 18]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [13, 2, 13]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [13, 16, 17]
    }
    location {
      path: [5, 0, 2, 1]
      span: [14, 2, 13]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [14, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [14, 11, 12]
    }
    location {
      path: [5, 0, 2, 2]
      span: [15, 2, 20]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [15, 2, 15]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [15, 18, 19]
    }
    location {
      path: [5, 0, 2, 3]
      span: [16, 2, 13]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [16, 2, 8]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [16, 11, 12]
    }
    location {
      path: [5, 0, 2, 4]
      span: [17, 2, 20]
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [17, 2, 15]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [17, 18, 19]
    }
    location {
      path: [5, 0, 2, 5]
      span: [18, 2, 13]
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [18, 2, 8]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [18, 11, 12]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "base/Language.proto"
  package: "base"
  enum_type {
    name: "Language"
    value {
      name: "ENGLISH"
      number: 0
    }
    value {
      name: "SPANISH"
      number: 1
    }
    value {
      name: "FRENCH"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.base"
    java_outer_classname: "BaseLanguage"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 23, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 12]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 47]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 44]
    }
    location {
      path: [5, 0]
      span: [14, 0, 23, 1]
      leading_comments: " Specifies languages available for specification, usually\n used as an attachment to content or media.\n"
    }
    location {
      path: [5, 0, 1]
      span: [14, 5, 13]
    }
    location {
      path: [5, 0, 2, 0]
      span: [16, 2, 14]
      leading_comments: " English.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [16, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [16, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [19, 2, 14]
      leading_comments: " Spanish.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [19, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [19, 12, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [22, 2, 13]
      leading_comments: " French.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [22, 2, 8]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [22, 11, 12]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "base/Compression.proto"
  package: "base"
  message_type {
    name: "Compression"
    field {
      name: "enabled"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "enabled"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".base.Compression.Type"
      json_name: "type"
    }
    enum_type {
      name: "Type"
      value {
        name: "GZIP"
        number: 0
      }
    }
  }
  options {
    java_package: "io.bloombox.schema.base"
    java_outer_classname: "BaseCompression"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 25, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 12]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 47]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [4, 0]
      span: [13, 0, 25, 1]
      leading_comments: " Specifies enabled/disabled state and compression type, and is usually attached to arbitrary data or metadata.\n"
    }
    location {
      path: [4, 0, 1]
      span: [13, 8, 19]
    }
    location {
      path: [4, 0, 4, 0]
      span: [16, 2, 18, 3]
      leading_comments: " Enumerates available types of compression, or strategies\n or algorithms for compressing data.\n"
    }
    location {
      path: [4, 0, 4, 0, 1]
      span: [16, 7, 11]
    }
    location {
      path: [4, 0, 4, 0, 2, 0]
      span: [17, 4, 13]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 1]
      span: [17, 4, 8]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 2]
      span: [17, 11, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [21, 2, 19]
      leading_comments: " Enabled/disabled flag for compression. Defaults to not being set, so, falsy.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [21, 2, 18, 3]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [21, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [21, 7, 14]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [21, 17, 18]
    }
    location {
      path: [4, 0, 2, 1]
      span: [24, 2, 16]
      leading_comments: " Type of compression in use, if any. Enumerated herein via `Compression.Type`.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [24, 2, 21, 19]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [24, 2, 6]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [24, 7, 11]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [24, 14, 15]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "content/Content.proto"
  package: "content"
  dependency: "bq_field.proto"
  dependency: "base/Language.proto"
  dependency: "base/Compression.proto"
  message_type {
    name: "Content"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".content.Content.Type"
      json_name: "type"
    }
    field {
      name: "encoding"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".content.Content.Encoding"
      json_name: "encoding"
    }
    field {
      name: "content"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      json_name: "content"
    }
    field {
      name: "language"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".base.Language"
      json_name: "language"
    }
    field {
      name: "compression"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.Compression"
      json_name: "compression"
    }
    enum_type {
      name: "Type"
      value {
        name: "TEXT"
        number: 0
      }
      value {
        name: "MARKDOWN"
        number: 1
      }
      value {
        name: "HTML"
        number: 2
      }
    }
    enum_type {
      name: "Encoding"
      value {
        name: "UTF8"
        number: 0
      }
    }
  }
  options {
    java_package: "io.bloombox.schema.content"
    java_outer_classname: "GenericContent"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 51, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 28]
    }
    location {
      path: [3, 2]
      span: [14, 7, 31]
    }
    location {
      path: [4, 0]
      span: [18, 0, 51, 1]
      leading_comments: " Specifies a freeform content payload of some kind.\n"
    }
    location {
      path: [4, 0, 1]
      span: [18, 8, 15]
    }
    location {
      path: [4, 0, 4, 0]
      span: [20, 2, 29, 3]
      leading_comments: " Enumerates supported types/formats for content data.\n"
    }
    location {
      path: [4, 0, 4, 0, 1]
      span: [20, 7, 11]
    }
    location {
      path: [4, 0, 4, 0, 2, 0]
      span: [22, 4, 13]
      leading_comments: " Plaintext format.\n"
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 1]
      span: [22, 4, 8]
    }
    location {
      path: [4, 0, 4, 0, 2, 0, 2]
      span: [22, 11, 12]
    }
    location {
      path: [4, 0, 4, 0, 2, 1]
      span: [25, 4, 17]
      leading_comments: " Markdown format.\n"
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 1]
      span: [25, 4, 12]
    }
    location {
      path: [4, 0, 4, 0, 2, 1, 2]
      span: [25, 15, 16]
    }
    location {
      path: [4, 0, 4, 0, 2, 2]
      span: [28, 4, 13]
      leading_comments: " HTML format.\n"
    }
    location {
      path: [4, 0, 4, 0, 2, 2, 1]
      span: [28, 4, 8]
    }
    location {
      path: [4, 0, 4, 0, 2, 2, 2]
      span: [28, 11, 12]
    }
    location {
      path: [4, 0, 4, 1]
      span: [32, 2, 35, 3]
      leading_comments: " Enumerates supported encodings for content data.\n"
    }
    location {
      path: [4, 0, 4, 1, 1]
      span: [32, 7, 15]
    }
    location {
      path: [4, 0, 4, 1, 2, 0]
      span: [34, 4, 13]
      leading_comments: " UTF-8 standard encoding.\n"
    }
    location {
      path: [4, 0, 4, 1, 2, 0, 1]
      span: [34, 4, 8]
    }
    location {
      path: [4, 0, 4, 1, 2, 0, 2]
      span: [34, 11, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [38, 2, 16]
      leading_comments: " Format/underlying type of content data.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [38, 2, 35, 3]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [38, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [38, 7, 11]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [38, 14, 15]
    }
    location {
      path: [4, 0, 2, 1]
      span: [41, 2, 24]
      leading_comments: " Encoding of underlying content data.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [41, 2, 38, 16]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [41, 2, 10]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [41, 11, 19]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [41, 22, 23]
    }
    location {
      path: [4, 0, 2, 2]
      span: [44, 2, 20]
      leading_comments: " Raw bytes of underlying content data.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [44, 2, 41, 24]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [44, 2, 7]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [44, 8, 15]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [44, 18, 19]
    }
    location {
      path: [4, 0, 2, 3]
      span: [47, 2, 29]
      leading_comments: " Language information for underlying content.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [47, 2, 44, 20]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [47, 2, 15]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [47, 16, 24]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [47, 27, 28]
    }
    location {
      path: [4, 0, 2, 4]
      span: [50, 2, 35]
      leading_comments: " Compression settings for underlying content.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [50, 2, 47, 29]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [50, 2, 18]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [50, 19, 30]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [50, 33, 34]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/labtesting/TestValue.proto"
  package: "structs.labtesting"
  dependency: "media/MediaItem.proto"
  message_type {
    name: "TestValue"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.labtesting.TestValueType"
      json_name: "type"
    }
    field {
      name: "measurement"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      oneof_index: 0
      json_name: "measurement"
    }
    field {
      name: "present"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      oneof_index: 0
      json_name: "present"
    }
    oneof_decl {
      name: "value"
    }
  }
  message_type {
    name: "TestMedia"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.labtesting.TestMediaType"
      json_name: "type"
    }
    field {
      name: "media_item"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.MediaItem"
      json_name: "mediaItem"
    }
  }
  enum_type {
    name: "TestValueType"
    value {
      name: "MILLIGRAMS"
      number: 0
    }
    value {
      name: "PERCENTAGE"
      number: 1
    }
    value {
      name: "PRESENCE"
      number: 3
    }
  }
  enum_type {
    name: "TestMediaType"
    value {
      name: "CERTIFICATE"
      number: 0
    }
    value {
      name: "RESULTS"
      number: 1
    }
    value {
      name: "PRODUCT_IMAGE"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct.testing"
    java_outer_classname: "BaseTestingSpec"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 39, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 26]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 66]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 66]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 65]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [5, 0]
      span: [15, 0, 19, 1]
      leading_comments: " -- Testing: Base (Shared) Protocol\n"
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 18]
    }
    location {
      path: [5, 0, 2, 0]
      span: [16, 2, 17]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [16, 2, 12]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [16, 15, 16]
    }
    location {
      path: [5, 0, 2, 1]
      span: [17, 2, 17]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [17, 2, 12]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [17, 15, 16]
    }
    location {
      path: [5, 0, 2, 2]
      span: [18, 2, 15]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [18, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [18, 13, 14]
    }
    location {
      path: [4, 0]
      span: [21, 0, 28, 1]
    }
    location {
      path: [4, 0, 1]
      span: [21, 8, 17]
    }
    location {
      path: [4, 0, 2, 0]
      span: [22, 2, 25]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [22, 2, 21, 19]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [22, 2, 15]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [22, 16, 20]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [22, 23, 24]
    }
    location {
      path: [4, 0, 8, 0]
      span: [24, 2, 27, 3]
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [24, 8, 13]
    }
    location {
      path: [4, 0, 2, 1]
      span: [25, 4, 28]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [25, 4, 10]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [25, 11, 22]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [25, 25, 27]
    }
    location {
      path: [4, 0, 2, 2]
      span: [26, 4, 22]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [26, 4, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [26, 9, 16]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [26, 19, 21]
    }
    location {
      path: [5, 1]
      span: [30, 0, 34, 1]
    }
    location {
      path: [5, 1, 1]
      span: [30, 5, 18]
    }
    location {
      path: [5, 1, 2, 0]
      span: [31, 2, 18]
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [31, 2, 13]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [31, 16, 17]
    }
    location {
      path: [5, 1, 2, 1]
      span: [32, 2, 14]
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [32, 2, 9]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [32, 12, 13]
    }
    location {
      path: [5, 1, 2, 2]
      span: [33, 2, 20]
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [33, 2, 15]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [33, 18, 19]
    }
    location {
      path: [4, 1]
      span: [36, 0, 39, 1]
    }
    location {
      path: [4, 1, 1]
      span: [36, 8, 17]
    }
    location {
      path: [4, 1, 2, 0]
      span: [37, 2, 25]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [37, 2, 36, 19]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [37, 2, 15]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [37, 16, 20]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [37, 23, 24]
    }
    location {
      path: [4, 1, 2, 1]
      span: [38, 2, 33]
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [38, 2, 37, 25]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [38, 2, 17]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [38, 18, 28]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [38, 31, 32]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/labtesting/TestResults.proto"
  package: "structs.labtesting"
  dependency: "content/Content.proto"
  dependency: "temporal/Instant.proto"
  dependency: "structs/labtesting/TestValue.proto"
  message_type {
    name: "TestResults"
    field {
      name: "available"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "available"
    }
    field {
      name: "media"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.TestMedia"
      json_name: "media"
    }
    field {
      name: "last_updated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "lastUpdated"
    }
    field {
      name: "cannabinoids"
      number: 30
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Cannabinoids"
      json_name: "cannabinoids"
    }
    field {
      name: "terpenes"
      number: 31
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Terpenes"
      json_name: "terpenes"
    }
    field {
      name: "pesticides"
      number: 32
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Pesticides"
      json_name: "pesticides"
    }
    field {
      name: "moisture"
      number: 33
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Moisture"
      json_name: "moisture"
    }
    field {
      name: "aroma"
      number: 34
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.labtesting.TasteNote"
      json_name: "aroma"
    }
    field {
      name: "subjective"
      number: 35
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Subjective"
      json_name: "subjective"
    }
  }
  message_type {
    name: "Cannabinoids"
    field {
      name: "thc"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.TestValue"
      json_name: "thc"
    }
    field {
      name: "cbd"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.TestValue"
      json_name: "cbd"
    }
    field {
      name: "results"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Cannabinoids.Result"
      json_name: "results"
    }
    nested_type {
      name: "Result"
      field {
        name: "cannabinoid"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".structs.labtesting.Cannabinoid"
        json_name: "cannabinoid"
      }
      field {
        name: "ratio"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".structs.labtesting.CannabinoidRatio"
        json_name: "ratio"
      }
      field {
        name: "measurement"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".structs.labtesting.TestValue"
        json_name: "measurement"
      }
    }
  }
  message_type {
    name: "Subjective"
    field {
      name: "description"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Content"
      json_name: "description"
    }
    field {
      name: "taste"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Content"
      json_name: "taste"
    }
    field {
      name: "potency"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.labtesting.PotencyEstimate"
      json_name: "potency"
    }
    field {
      name: "feeling_tags"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.labtesting.Feeling"
      json_name: "feelingTags"
    }
    field {
      name: "tasting_notes"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.labtesting.TasteNote"
      json_name: "tastingNotes"
    }
  }
  message_type {
    name: "Terpenes"
    field {
      name: "available"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "available"
    }
    field {
      name: "terpenes"
      number: 10
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Terpenes.Result"
      json_name: "terpenes"
    }
    nested_type {
      name: "Result"
      field {
        name: "terpene"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".structs.labtesting.Terpene"
        json_name: "terpene"
      }
      field {
        name: "measurement"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".structs.labtesting.TestValue"
        json_name: "measurement"
      }
    }
  }
  message_type {
    name: "Pesticides"
    field {
      name: "pesticide_free"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "pesticideFree"
    }
    field {
      name: "measurements"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Pesticides.MeasurementsEntry"
      json_name: "measurements"
    }
    nested_type {
      name: "MeasurementsEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".structs.labtesting.TestValue"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
  }
  message_type {
    name: "Moisture"
    field {
      name: "measurement"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.TestValue"
      json_name: "measurement"
    }
  }
  enum_type {
    name: "Cannabinoid"
    value {
      name: "THC"
      number: 0
    }
    value {
      name: "THC_A"
      number: 1
    }
    value {
      name: "THC_V"
      number: 2
    }
    value {
      name: "CBD"
      number: 10
    }
    value {
      name: "CBD_A"
      number: 11
    }
    value {
      name: "CBD_V"
      number: 12
    }
    value {
      name: "CBD_VA"
      number: 13
    }
    value {
      name: "CBC"
      number: 20
    }
    value {
      name: "CBG"
      number: 30
    }
    value {
      name: "CBG_A"
      number: 31
    }
    value {
      name: "CBN"
      number: 40
    }
    value {
      name: "CBV"
      number: 50
    }
    value {
      name: "CBV_A"
      number: 51
    }
  }
  enum_type {
    name: "CannabinoidRatio"
    value {
      name: "NO_CANNABINOID_PREFERENCE"
      number: 0
    }
    value {
      name: "THC_ONLY"
      number: 1
    }
    value {
      name: "THC_OVER_CBD"
      number: 2
    }
    value {
      name: "EQUAL"
      number: 3
    }
    value {
      name: "CBD_OVER_THC"
      number: 4
    }
    value {
      name: "CBD_ONLY"
      number: 5
    }
  }
  enum_type {
    name: "Feeling"
    value {
      name: "NO_FEELING_PREFERENCE"
      number: 0
    }
    value {
      name: "GROUNDING"
      number: 1
    }
    value {
      name: "SLEEP"
      number: 2
    }
    value {
      name: "CALMING"
      number: 3
    }
    value {
      name: "STIMULATING"
      number: 4
    }
    value {
      name: "FUNNY"
      number: 5
    }
    value {
      name: "FOCUS"
      number: 6
    }
    value {
      name: "PASSION"
      number: 7
    }
  }
  enum_type {
    name: "TasteNote"
    value {
      name: "NO_TASTE_PREFERENCE"
      number: 0
    }
    value {
      name: "SWEET"
      number: 1
    }
    value {
      name: "SOUR"
      number: 2
    }
    value {
      name: "SPICE"
      number: 3
    }
    value {
      name: "SMOOTH"
      number: 4
    }
    value {
      name: "CITRUS"
      number: 5
    }
    value {
      name: "PINE"
      number: 6
    }
    value {
      name: "FRUIT"
      number: 7
    }
    value {
      name: "TROPICS"
      number: 8
    }
    value {
      name: "FLORAL"
      number: 9
    }
    value {
      name: "HERB"
      number: 10
    }
    value {
      name: "EARTH"
      number: 11
    }
  }
  enum_type {
    name: "PotencyEstimate"
    value {
      name: "LIGHT"
      number: 0
    }
    value {
      name: "MEDIUM"
      number: 1
    }
    value {
      name: "HEAVY"
      number: 2
    }
    value {
      name: "SUPER"
      number: 3
    }
  }
  enum_type {
    name: "Terpene"
    value {
      name: "CAMPHENE"
      number: 0
    }
    value {
      name: "CARENE"
      number: 1
    }
    value {
      name: "BETA_CARYOPHYLLENE"
      number: 2
    }
    value {
      name: "CARYOPHYLLENE_OXIDE"
      number: 3
    }
    value {
      name: "EUCALYPTOL"
      number: 4
    }
    value {
      name: "FENCHOL"
      number: 5
    }
    value {
      name: "ALPHA_HUMULENE"
      number: 6
    }
    value {
      name: "LIMONENE"
      number: 7
    }
    value {
      name: "LINALOOL"
      number: 8
    }
    value {
      name: "MYRCENE"
      number: 9
    }
    value {
      name: "ALPHA_OCIMENE"
      number: 10
    }
    value {
      name: "BETA_OCIMENE"
      number: 11
    }
    value {
      name: "ALPHA_PHELLANDRENE"
      number: 12
    }
    value {
      name: "ALPHA_PINENE"
      number: 13
    }
    value {
      name: "BETA_PINENE"
      number: 14
    }
    value {
      name: "ALPHA_TERPINEOL"
      number: 15
    }
    value {
      name: "ALPHA_TERPININE"
      number: 16
    }
    value {
      name: "GAMMA_TERPININE"
      number: 17
    }
    value {
      name: "TERPINOLENE"
      number: 18
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct.testing"
    java_outer_classname: "LabTesting"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 160, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 26]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 66]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 66]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 65]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 43]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 43]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 42]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [12, 7, 31]
    }
    location {
      path: [3, 2]
      span: [13, 7, 43]
    }
    location {
      path: [4, 0]
      span: [17, 0, 29, 1]
      leading_comments: " -- Testing: Full Protocol\n"
    }
    location {
      path: [4, 0, 1]
      span: [17, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 21]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 17, 21]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [18, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 7, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 19, 20]
    }
    location {
      path: [4, 0, 2, 1]
      span: [19, 2, 31]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [19, 2, 10]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [19, 11, 20]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [19, 21, 26]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [19, 29, 30]
    }
    location {
      path: [4, 0, 2, 2]
      span: [20, 2, 36]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [20, 2, 19, 31]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [20, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [20, 19, 31]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [20, 34, 35]
    }
    location {
      path: [4, 0, 2, 3]
      span: [23, 2, 33]
      leading_comments: " --- Testing Extensions\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [23, 2, 20, 36]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [23, 2, 14]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [23, 15, 27]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [23, 30, 32]
    }
    location {
      path: [4, 0, 2, 4]
      span: [24, 2, 25]
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [24, 2, 23, 33]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [24, 2, 10]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [24, 11, 19]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [24, 22, 24]
    }
    location {
      path: [4, 0, 2, 5]
      span: [25, 2, 29]
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [25, 2, 24, 25]
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [25, 2, 12]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [25, 13, 23]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [25, 26, 28]
    }
    location {
      path: [4, 0, 2, 6]
      span: [26, 2, 25]
    }
    location {
      path: [4, 0, 2, 6, 4]
      span: [26, 2, 25, 29]
    }
    location {
      path: [4, 0, 2, 6, 6]
      span: [26, 2, 10]
    }
    location {
      path: [4, 0, 2, 6, 1]
      span: [26, 11, 19]
    }
    location {
      path: [4, 0, 2, 6, 3]
      span: [26, 22, 24]
    }
    location {
      path: [4, 0, 2, 7]
      span: [27, 2, 32]
    }
    location {
      path: [4, 0, 2, 7, 4]
      span: [27, 2, 10]
    }
    location {
      path: [4, 0, 2, 7, 6]
      span: [27, 11, 20]
    }
    location {
      path: [4, 0, 2, 7, 1]
      span: [27, 21, 26]
    }
    location {
      path: [4, 0, 2, 7, 3]
      span: [27, 29, 31]
    }
    location {
      path: [4, 0, 2, 8]
      span: [28, 2, 29]
    }
    location {
      path: [4, 0, 2, 8, 4]
      span: [28, 2, 27, 32]
    }
    location {
      path: [4, 0, 2, 8, 6]
      span: [28, 2, 12]
    }
    location {
      path: [4, 0, 2, 8, 1]
      span: [28, 13, 23]
    }
    location {
      path: [4, 0, 2, 8, 3]
      span: [28, 26, 28]
    }
    location {
      path: [5, 0]
      span: [33, 0, 47, 1]
      leading_comments: " -- Testing: Cannabinoids\n"
    }
    location {
      path: [5, 0, 1]
      span: [33, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [34, 2, 10]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [34, 2, 5]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [34, 8, 9]
    }
    location {
      path: [5, 0, 2, 1]
      span: [35, 2, 12]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [35, 2, 7]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [35, 10, 11]
    }
    location {
      path: [5, 0, 2, 2]
      span: [36, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [36, 2, 7]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [36, 10, 11]
    }
    location {
      path: [5, 0, 2, 3]
      span: [37, 2, 11]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [37, 2, 5]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [37, 8, 10]
    }
    location {
      path: [5, 0, 2, 4]
      span: [38, 2, 13]
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [38, 2, 7]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [38, 10, 12]
    }
    location {
      path: [5, 0, 2, 5]
      span: [39, 2, 13]
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [39, 2, 7]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [39, 10, 12]
    }
    location {
      path: [5, 0, 2, 6]
      span: [40, 2, 14]
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [40, 2, 8]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [40, 11, 13]
    }
    location {
      path: [5, 0, 2, 7]
      span: [41, 2, 11]
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [41, 2, 5]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [41, 8, 10]
    }
    location {
      path: [5, 0, 2, 8]
      span: [42, 2, 11]
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [42, 2, 5]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [42, 8, 10]
    }
    location {
      path: [5, 0, 2, 9]
      span: [43, 2, 13]
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [43, 2, 7]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [43, 10, 12]
    }
    location {
      path: [5, 0, 2, 10]
      span: [44, 2, 11]
    }
    location {
      path: [5, 0, 2, 10, 1]
      span: [44, 2, 5]
    }
    location {
      path: [5, 0, 2, 10, 2]
      span: [44, 8, 10]
    }
    location {
      path: [5, 0, 2, 11]
      span: [45, 2, 11]
    }
    location {
      path: [5, 0, 2, 11, 1]
      span: [45, 2, 5]
    }
    location {
      path: [5, 0, 2, 11, 2]
      span: [45, 8, 10]
    }
    location {
      path: [5, 0, 2, 12]
      span: [46, 2, 13]
    }
    location {
      path: [5, 0, 2, 12, 1]
      span: [46, 2, 7]
    }
    location {
      path: [5, 0, 2, 12, 2]
      span: [46, 10, 12]
    }
    location {
      path: [5, 1]
      span: [49, 0, 56, 1]
    }
    location {
      path: [5, 1, 1]
      span: [49, 5, 21]
    }
    location {
      path: [5, 1, 2, 0]
      span: [50, 2, 32]
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [50, 2, 27]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [50, 30, 31]
    }
    location {
      path: [5, 1, 2, 1]
      span: [51, 2, 15]
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [51, 2, 10]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [51, 13, 14]
    }
    location {
      path: [5, 1, 2, 2]
      span: [52, 2, 19]
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [52, 2, 14]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [52, 17, 18]
    }
    location {
      path: [5, 1, 2, 3]
      span: [53, 2, 12]
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [53, 2, 7]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [53, 10, 11]
    }
    location {
      path: [5, 1, 2, 4]
      span: [54, 2, 19]
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [54, 2, 14]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [54, 17, 18]
    }
    location {
      path: [5, 1, 2, 5]
      span: [55, 2, 15]
    }
    location {
      path: [5, 1, 2, 5, 1]
      span: [55, 2, 10]
    }
    location {
      path: [5, 1, 2, 5, 2]
      span: [55, 13, 14]
    }
    location {
      path: [4, 1]
      span: [58, 0, 68, 1]
    }
    location {
      path: [4, 1, 1]
      span: [58, 8, 20]
    }
    location {
      path: [4, 1, 3, 0]
      span: [59, 2, 63, 3]
    }
    location {
      path: [4, 1, 3, 0, 1]
      span: [59, 10, 16]
    }
    location {
      path: [4, 1, 3, 0, 2, 0]
      span: [60, 4, 32]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 4]
      span: [60, 4, 59, 18]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 6]
      span: [60, 4, 15]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 1]
      span: [60, 16, 27]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 3]
      span: [60, 30, 31]
    }
    location {
      path: [4, 1, 3, 0, 2, 1]
      span: [61, 4, 31]
    }
    location {
      path: [4, 1, 3, 0, 2, 1, 4]
      span: [61, 4, 60, 32]
    }
    location {
      path: [4, 1, 3, 0, 2, 1, 6]
      span: [61, 4, 20]
    }
    location {
      path: [4, 1, 3, 0, 2, 1, 1]
      span: [61, 21, 26]
    }
    location {
      path: [4, 1, 3, 0, 2, 1, 3]
      span: [61, 29, 30]
    }
    location {
      path: [4, 1, 3, 0, 2, 2]
      span: [62, 4, 30]
    }
    location {
      path: [4, 1, 3, 0, 2, 2, 4]
      span: [62, 4, 61, 31]
    }
    location {
      path: [4, 1, 3, 0, 2, 2, 6]
      span: [62, 4, 13]
    }
    location {
      path: [4, 1, 3, 0, 2, 2, 1]
      span: [62, 14, 25]
    }
    location {
      path: [4, 1, 3, 0, 2, 2, 3]
      span: [62, 28, 29]
    }
    location {
      path: [4, 1, 2, 0]
      span: [65, 2, 20]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [65, 2, 63, 3]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [65, 2, 11]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [65, 12, 15]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [65, 18, 19]
    }
    location {
      path: [4, 1, 2, 1]
      span: [66, 2, 20]
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [66, 2, 65, 20]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [66, 2, 11]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [66, 12, 15]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [66, 18, 19]
    }
    location {
      path: [4, 1, 2, 2]
      span: [67, 2, 30]
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [67, 2, 10]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [67, 11, 17]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [67, 18, 25]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [67, 28, 29]
    }
    location {
      path: [5, 2]
      span: [72, 0, 82, 1]
      leading_comments: " -- Testing: Subjective\n"
    }
    location {
      path: [5, 2, 1]
      span: [72, 5, 12]
    }
    location {
      path: [5, 2, 2, 0]
      span: [73, 2, 28]
    }
    location {
      path: [5, 2, 2, 0, 1]
      span: [73, 2, 23]
    }
    location {
      path: [5, 2, 2, 0, 2]
      span: [73, 26, 27]
    }
    location {
      path: [5, 2, 2, 1]
      span: [75, 2, 16]
    }
    location {
      path: [5, 2, 2, 1, 1]
      span: [75, 2, 11]
    }
    location {
      path: [5, 2, 2, 1, 2]
      span: [75, 14, 15]
    }
    location {
      path: [5, 2, 2, 2]
      span: [76, 2, 12]
    }
    location {
      path: [5, 2, 2, 2, 1]
      span: [76, 2, 7]
    }
    location {
      path: [5, 2, 2, 2, 2]
      span: [76, 10, 11]
    }
    location {
      path: [5, 2, 2, 3]
      span: [77, 2, 14]
    }
    location {
      path: [5, 2, 2, 3, 1]
      span: [77, 2, 9]
    }
    location {
      path: [5, 2, 2, 3, 2]
      span: [77, 12, 13]
    }
    location {
      path: [5, 2, 2, 4]
      span: [78, 2, 18]
    }
    location {
      path: [5, 2, 2, 4, 1]
      span: [78, 2, 13]
    }
    location {
      path: [5, 2, 2, 4, 2]
      span: [78, 16, 17]
    }
    location {
      path: [5, 2, 2, 5]
      span: [79, 2, 12]
    }
    location {
      path: [5, 2, 2, 5, 1]
      span: [79, 2, 7]
    }
    location {
      path: [5, 2, 2, 5, 2]
      span: [79, 10, 11]
    }
    location {
      path: [5, 2, 2, 6]
      span: [80, 2, 12]
    }
    location {
      path: [5, 2, 2, 6, 1]
      span: [80, 2, 7]
    }
    location {
      path: [5, 2, 2, 6, 2]
      span: [80, 10, 11]
    }
    location {
      path: [5, 2, 2, 7]
      span: [81, 2, 14]
    }
    location {
      path: [5, 2, 2, 7, 1]
      span: [81, 2, 9]
    }
    location {
      path: [5, 2, 2, 7, 2]
      span: [81, 12, 13]
    }
    location {
      path: [5, 3]
      span: [84, 0, 98, 1]
    }
    location {
      path: [5, 3, 1]
      span: [84, 5, 14]
    }
    location {
      path: [5, 3, 2, 0]
      span: [85, 2, 26]
    }
    location {
      path: [5, 3, 2, 0, 1]
      span: [85, 2, 21]
    }
    location {
      path: [5, 3, 2, 0, 2]
      span: [85, 24, 25]
    }
    location {
      path: [5, 3, 2, 1]
      span: [87, 2, 12]
    }
    location {
      path: [5, 3, 2, 1, 1]
      span: [87, 2, 7]
    }
    location {
      path: [5, 3, 2, 1, 2]
      span: [87, 10, 11]
    }
    location {
      path: [5, 3, 2, 2]
      span: [88, 2, 11]
    }
    location {
      path: [5, 3, 2, 2, 1]
      span: [88, 2, 6]
    }
    location {
      path: [5, 3, 2, 2, 2]
      span: [88, 9, 10]
    }
    location {
      path: [5, 3, 2, 3]
      span: [89, 2, 12]
    }
    location {
      path: [5, 3, 2, 3, 1]
      span: [89, 2, 7]
    }
    location {
      path: [5, 3, 2, 3, 2]
      span: [89, 10, 11]
    }
    location {
      path: [5, 3, 2, 4]
      span: [90, 2, 13]
    }
    location {
      path: [5, 3, 2, 4, 1]
      span: [90, 2, 8]
    }
    location {
      path: [5, 3, 2, 4, 2]
      span: [90, 11, 12]
    }
    location {
      path: [5, 3, 2, 5]
      span: [91, 2, 13]
    }
    location {
      path: [5, 3, 2, 5, 1]
      span: [91, 2, 8]
    }
    location {
      path: [5, 3, 2, 5, 2]
      span: [91, 11, 12]
    }
    location {
      path: [5, 3, 2, 6]
      span: [92, 2, 11]
    }
    location {
      path: [5, 3, 2, 6, 1]
      span: [92, 2, 6]
    }
    location {
      path: [5, 3, 2, 6, 2]
      span: [92, 9, 10]
    }
    location {
      path: [5, 3, 2, 7]
      span: [93, 2, 12]
    }
    location {
      path: [5, 3, 2, 7, 1]
      span: [93, 2, 7]
    }
    location {
      path: [5, 3, 2, 7, 2]
      span: [93, 10, 11]
    }
    location {
      path: [5, 3, 2, 8]
      span: [94, 2, 14]
    }
    location {
      path: [5, 3, 2, 8, 1]
      span: [94, 2, 9]
    }
    location {
      path: [5, 3, 2, 8, 2]
      span: [94, 12, 13]
    }
    location {
      path: [5, 3, 2, 9]
      span: [95, 2, 13]
    }
    location {
      path: [5, 3, 2, 9, 1]
      span: [95, 2, 8]
    }
    location {
      path: [5, 3, 2, 9, 2]
      span: [95, 11, 12]
    }
    location {
      path: [5, 3, 2, 10]
      span: [96, 2, 12]
    }
    location {
      path: [5, 3, 2, 10, 1]
      span: [96, 2, 6]
    }
    location {
      path: [5, 3, 2, 10, 2]
      span: [96, 9, 11]
    }
    location {
      path: [5, 3, 2, 11]
      span: [97, 2, 13]
    }
    location {
      path: [5, 3, 2, 11, 1]
      span: [97, 2, 7]
    }
    location {
      path: [5, 3, 2, 11, 2]
      span: [97, 10, 12]
    }
    location {
      path: [5, 4]
      span: [100, 0, 105, 1]
    }
    location {
      path: [5, 4, 1]
      span: [100, 5, 20]
    }
    location {
      path: [5, 4, 2, 0]
      span: [101, 2, 12]
    }
    location {
      path: [5, 4, 2, 0, 1]
      span: [101, 2, 7]
    }
    location {
      path: [5, 4, 2, 0, 2]
      span: [101, 10, 11]
    }
    location {
      path: [5, 4, 2, 1]
      span: [102, 2, 13]
    }
    location {
      path: [5, 4, 2, 1, 1]
      span: [102, 2, 8]
    }
    location {
      path: [5, 4, 2, 1, 2]
      span: [102, 11, 12]
    }
    location {
      path: [5, 4, 2, 2]
      span: [103, 2, 12]
    }
    location {
      path: [5, 4, 2, 2, 1]
      span: [103, 2, 7]
    }
    location {
      path: [5, 4, 2, 2, 2]
      span: [103, 10, 11]
    }
    location {
      path: [5, 4, 2, 3]
      span: [104, 2, 12]
    }
    location {
      path: [5, 4, 2, 3, 1]
      span: [104, 2, 7]
    }
    location {
      path: [5, 4, 2, 3, 2]
      span: [104, 10, 11]
    }
    location {
      path: [4, 2]
      span: [107, 0, 113, 1]
    }
    location {
      path: [4, 2, 1]
      span: [107, 8, 18]
    }
    location {
      path: [4, 2, 2, 0]
      span: [108, 2, 34]
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [108, 2, 107, 20]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [108, 2, 17]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [108, 18, 29]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [108, 32, 33]
    }
    location {
      path: [4, 2, 2, 1]
      span: [109, 2, 28]
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [109, 2, 108, 34]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [109, 2, 17]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [109, 18, 23]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [109, 26, 27]
    }
    location {
      path: [4, 2, 2, 2]
      span: [110, 2, 30]
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [110, 2, 109, 28]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [110, 2, 17]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [110, 18, 25]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [110, 28, 29]
    }
    location {
      path: [4, 2, 2, 3]
      span: [111, 2, 36]
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [111, 2, 10]
    }
    location {
      path: [4, 2, 2, 3, 6]
      span: [111, 11, 18]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [111, 19, 31]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [111, 34, 35]
    }
    location {
      path: [4, 2, 2, 4]
      span: [112, 2, 39]
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [112, 2, 10]
    }
    location {
      path: [4, 2, 2, 4, 6]
      span: [112, 11, 20]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [112, 21, 34]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [112, 37, 38]
    }
    location {
      path: [5, 5]
      span: [117, 0, 137, 1]
      leading_comments: " -- Testing: Terpenes\n"
    }
    location {
      path: [5, 5, 1]
      span: [117, 5, 12]
    }
    location {
      path: [5, 5, 2, 0]
      span: [118, 2, 15]
    }
    location {
      path: [5, 5, 2, 0, 1]
      span: [118, 2, 10]
    }
    location {
      path: [5, 5, 2, 0, 2]
      span: [118, 13, 14]
    }
    location {
      path: [5, 5, 2, 1]
      span: [119, 2, 13]
    }
    location {
      path: [5, 5, 2, 1, 1]
      span: [119, 2, 8]
    }
    location {
      path: [5, 5, 2, 1, 2]
      span: [119, 11, 12]
    }
    location {
      path: [5, 5, 2, 2]
      span: [120, 2, 25]
    }
    location {
      path: [5, 5, 2, 2, 1]
      span: [120, 2, 20]
    }
    location {
      path: [5, 5, 2, 2, 2]
      span: [120, 23, 24]
    }
    location {
      path: [5, 5, 2, 3]
      span: [121, 2, 26]
    }
    location {
      path: [5, 5, 2, 3, 1]
      span: [121, 2, 21]
    }
    location {
      path: [5, 5, 2, 3, 2]
      span: [121, 24, 25]
    }
    location {
      path: [5, 5, 2, 4]
      span: [122, 2, 17]
    }
    location {
      path: [5, 5, 2, 4, 1]
      span: [122, 2, 12]
    }
    location {
      path: [5, 5, 2, 4, 2]
      span: [122, 15, 16]
    }
    location {
      path: [5, 5, 2, 5]
      span: [123, 2, 14]
    }
    location {
      path: [5, 5, 2, 5, 1]
      span: [123, 2, 9]
    }
    location {
      path: [5, 5, 2, 5, 2]
      span: [123, 12, 13]
    }
    location {
      path: [5, 5, 2, 6]
      span: [124, 2, 21]
    }
    location {
      path: [5, 5, 2, 6, 1]
      span: [124, 2, 16]
    }
    location {
      path: [5, 5, 2, 6, 2]
      span: [124, 19, 20]
    }
    location {
      path: [5, 5, 2, 7]
      span: [125, 2, 15]
    }
    location {
      path: [5, 5, 2, 7, 1]
      span: [125, 2, 10]
    }
    location {
      path: [5, 5, 2, 7, 2]
      span: [125, 13, 14]
    }
    location {
      path: [5, 5, 2, 8]
      span: [126, 2, 15]
    }
    location {
      path: [5, 5, 2, 8, 1]
      span: [126, 2, 10]
    }
    location {
      path: [5, 5, 2, 8, 2]
      span: [126, 13, 14]
    }
    location {
      path: [5, 5, 2, 9]
      span: [127, 2, 14]
    }
    location {
      path: [5, 5, 2, 9, 1]
      span: [127, 2, 9]
    }
    location {
      path: [5, 5, 2, 9, 2]
      span: [127, 12, 13]
    }
    location {
      path: [5, 5, 2, 10]
      span: [128, 2, 21]
    }
    location {
      path: [5, 5, 2, 10, 1]
      span: [128, 2, 15]
    }
    location {
      path: [5, 5, 2, 10, 2]
      span: [128, 18, 20]
    }
    location {
      path: [5, 5, 2, 11]
      span: [129, 2, 20]
    }
    location {
      path: [5, 5, 2, 11, 1]
      span: [129, 2, 14]
    }
    location {
      path: [5, 5, 2, 11, 2]
      span: [129, 17, 19]
    }
    location {
      path: [5, 5, 2, 12]
      span: [130, 2, 26]
    }
    location {
      path: [5, 5, 2, 12, 1]
      span: [130, 2, 20]
    }
    location {
      path: [5, 5, 2, 12, 2]
      span: [130, 23, 25]
    }
    location {
      path: [5, 5, 2, 13]
      span: [131, 2, 20]
    }
    location {
      path: [5, 5, 2, 13, 1]
      span: [131, 2, 14]
    }
    location {
      path: [5, 5, 2, 13, 2]
      span: [131, 17, 19]
    }
    location {
      path: [5, 5, 2, 14]
      span: [132, 2, 19]
    }
    location {
      path: [5, 5, 2, 14, 1]
      span: [132, 2, 13]
    }
    location {
      path: [5, 5, 2, 14, 2]
      span: [132, 16, 18]
    }
    location {
      path: [5, 5, 2, 15]
      span: [133, 2, 23]
    }
    location {
      path: [5, 5, 2, 15, 1]
      span: [133, 2, 17]
    }
    location {
      path: [5, 5, 2, 15, 2]
      span: [133, 20, 22]
    }
    location {
      path: [5, 5, 2, 16]
      span: [134, 2, 23]
    }
    location {
      path: [5, 5, 2, 16, 1]
      span: [134, 2, 17]
    }
    location {
      path: [5, 5, 2, 16, 2]
      span: [134, 20, 22]
    }
    location {
      path: [5, 5, 2, 17]
      span: [135, 2, 23]
    }
    location {
      path: [5, 5, 2, 17, 1]
      span: [135, 2, 17]
    }
    location {
      path: [5, 5, 2, 17, 2]
      span: [135, 20, 22]
    }
    location {
      path: [5, 5, 2, 18]
      span: [136, 2, 19]
    }
    location {
      path: [5, 5, 2, 18, 1]
      span: [136, 2, 13]
    }
    location {
      path: [5, 5, 2, 18, 2]
      span: [136, 16, 18]
    }
    location {
      path: [4, 3]
      span: [139, 0, 147, 1]
    }
    location {
      path: [4, 3, 1]
      span: [139, 8, 16]
    }
    location {
      path: [4, 3, 2, 0]
      span: [140, 2, 21]
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [140, 2, 139, 18]
    }
    location {
      path: [4, 3, 2, 0, 5]
      span: [140, 2, 6]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [140, 7, 16]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [140, 19, 20]
    }
    location {
      path: [4, 3, 2, 1]
      span: [141, 2, 32]
    }
    location {
      path: [4, 3, 2, 1, 4]
      span: [141, 2, 10]
    }
    location {
      path: [4, 3, 2, 1, 6]
      span: [141, 11, 17]
    }
    location {
      path: [4, 3, 2, 1, 1]
      span: [141, 18, 26]
    }
    location {
      path: [4, 3, 2, 1, 3]
      span: [141, 29, 31]
    }
    location {
      path: [4, 3, 3, 0]
      span: [143, 2, 146, 3]
    }
    location {
      path: [4, 3, 3, 0, 1]
      span: [143, 10, 16]
    }
    location {
      path: [4, 3, 3, 0, 2, 0]
      span: [144, 4, 24]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 4]
      span: [144, 4, 143, 18]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 6]
      span: [144, 4, 11]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 1]
      span: [144, 12, 19]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 3]
      span: [144, 22, 23]
    }
    location {
      path: [4, 3, 3, 0, 2, 1]
      span: [145, 4, 30]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 4]
      span: [145, 4, 144, 24]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 6]
      span: [145, 4, 13]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 1]
      span: [145, 14, 25]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 3]
      span: [145, 28, 29]
    }
    location {
      path: [4, 4]
      span: [151, 0, 154, 1]
      leading_comments: " -- Testing: Pesticides\n"
    }
    location {
      path: [4, 4, 1]
      span: [151, 8, 18]
    }
    location {
      path: [4, 4, 2, 0]
      span: [152, 2, 26]
    }
    location {
      path: [4, 4, 2, 0, 4]
      span: [152, 2, 151, 20]
    }
    location {
      path: [4, 4, 2, 0, 5]
      span: [152, 2, 6]
    }
    location {
      path: [4, 4, 2, 0, 1]
      span: [152, 7, 21]
    }
    location {
      path: [4, 4, 2, 0, 3]
      span: [152, 24, 25]
    }
    location {
      path: [4, 4, 2, 1]
      span: [153, 2, 42]
    }
    location {
      path: [4, 4, 2, 1, 4]
      span: [153, 2, 152, 26]
    }
    location {
      path: [4, 4, 2, 1, 6]
      span: [153, 2, 24]
    }
    location {
      path: [4, 4, 2, 1, 1]
      span: [153, 25, 37]
    }
    location {
      path: [4, 4, 2, 1, 3]
      span: [153, 40, 41]
    }
    location {
      path: [4, 5]
      span: [158, 0, 160, 1]
      leading_comments: " -- Testing: Moisture\n"
    }
    location {
      path: [4, 5, 1]
      span: [158, 8, 16]
    }
    location {
      path: [4, 5, 2, 0]
      span: [159, 2, 28]
    }
    location {
      path: [4, 5, 2, 0, 4]
      span: [159, 2, 158, 18]
    }
    location {
      path: [4, 5, 2, 0, 6]
      span: [159, 2, 11]
    }
    location {
      path: [4, 5, 2, 0, 1]
      span: [159, 12, 23]
    }
    location {
      path: [4, 5, 2, 0, 3]
      span: [159, 26, 27]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "security/access/PartnerPermissions.proto"
  package: "security.access"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "PartnerAccess"
    field {
      name: "active"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "active"
    }
    field {
      name: "granted_by"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "grantedBy"
    }
    field {
      name: "granted_at"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "grantedAt"
    }
    field {
      name: "privileges"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".security.access.PartnerPermission"
      json_name: "privileges"
    }
    field {
      name: "locations"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".security.access.LocationAccess"
      json_name: "locations"
    }
    field {
      name: "all_locations"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "allLocations"
    }
    field {
      name: "admin"
      number: 100
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "admin"
    }
  }
  message_type {
    name: "LocationAccess"
    field {
      name: "active"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "active"
    }
    field {
      name: "granted_by"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "grantedBy"
    }
    field {
      name: "granted_at"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "grantedAt"
    }
    field {
      name: "admin"
      number: 100
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "admin"
    }
  }
  enum_type {
    name: "PartnerPermission"
    value {
      name: "OWNER"
      number: 0
    }
    value {
      name: "SUPERVISOR"
      number: 1
    }
    value {
      name: "BILLING"
      number: 2
    }
    value {
      name: "AUDIT"
      number: 3
    }
    value {
      name: "READONLY"
      number: 4
    }
  }
  options {
    java_package: "io.bloombox.schema.security.access"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 37, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 23]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 59]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 59]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 58]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 31]
    }
    location {
      path: [5, 0]
      span: [12, 0, 18, 1]
    }
    location {
      path: [5, 0, 1]
      span: [12, 5, 22]
    }
    location {
      path: [5, 0, 2, 0]
      span: [13, 2, 12]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [13, 2, 7]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [13, 10, 11]
    }
    location {
      path: [5, 0, 2, 1]
      span: [14, 2, 17]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [14, 2, 12]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [14, 15, 16]
    }
    location {
      path: [5, 0, 2, 2]
      span: [15, 2, 14]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [15, 2, 9]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [15, 12, 13]
    }
    location {
      path: [5, 0, 2, 3]
      span: [16, 2, 12]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [16, 2, 7]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [16, 10, 11]
    }
    location {
      path: [5, 0, 2, 4]
      span: [17, 2, 15]
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [17, 2, 10]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [17, 13, 14]
    }
    location {
      path: [4, 0]
      span: [21, 0, 29, 1]
    }
    location {
      path: [4, 0, 1]
      span: [21, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [22, 2, 18]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [22, 2, 21, 23]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [22, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [22, 7, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [22, 16, 17]
    }
    location {
      path: [4, 0, 2, 1]
      span: [23, 2, 24]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [23, 2, 22, 18]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [23, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [23, 9, 19]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [23, 22, 23]
    }
    location {
      path: [4, 0, 2, 2]
      span: [24, 2, 34]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [24, 2, 23, 24]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [24, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [24, 19, 29]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [24, 32, 33]
    }
    location {
      path: [4, 0, 2, 3]
      span: [25, 2, 44]
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [25, 2, 10]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [25, 11, 28]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [25, 29, 39]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [25, 42, 43]
    }
    location {
      path: [4, 0, 2, 4]
      span: [26, 2, 40]
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [26, 2, 10]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [26, 11, 25]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [26, 26, 35]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [26, 38, 39]
    }
    location {
      path: [4, 0, 2, 5]
      span: [27, 2, 25]
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [27, 2, 26, 40]
    }
    location {
      path: [4, 0, 2, 5, 5]
      span: [27, 2, 6]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [27, 7, 20]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [27, 23, 24]
    }
    location {
      path: [4, 0, 2, 6]
      span: [28, 2, 19]
    }
    location {
      path: [4, 0, 2, 6, 4]
      span: [28, 2, 27, 25]
    }
    location {
      path: [4, 0, 2, 6, 5]
      span: [28, 2, 6]
    }
    location {
      path: [4, 0, 2, 6, 1]
      span: [28, 7, 12]
    }
    location {
      path: [4, 0, 2, 6, 3]
      span: [28, 15, 18]
    }
    location {
      path: [4, 1]
      span: [32, 0, 37, 1]
    }
    location {
      path: [4, 1, 1]
      span: [32, 8, 22]
    }
    location {
      path: [4, 1, 2, 0]
      span: [33, 2, 18]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [33, 2, 32, 24]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [33, 2, 6]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [33, 7, 13]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [33, 16, 17]
    }
    location {
      path: [4, 1, 2, 1]
      span: [34, 2, 24]
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [34, 2, 33, 18]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [34, 2, 8]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [34, 9, 19]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [34, 22, 23]
    }
    location {
      path: [4, 1, 2, 2]
      span: [35, 2, 34]
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [35, 2, 34, 24]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [35, 2, 18]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [35, 19, 29]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [35, 32, 33]
    }
    location {
      path: [4, 1, 2, 3]
      span: [36, 2, 19]
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [36, 2, 35, 34]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [36, 2, 6]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [36, 7, 12]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [36, 15, 18]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/User.proto"
  package: "identity"
  dependency: "bq_field.proto"
  dependency: "media/MediaItem.proto"
  dependency: "temporal/Instant.proto"
  dependency: "person/Person.proto"
  dependency: "identity/ID.proto"
  dependency: "identity/ids/UserDoctorRec.proto"
  dependency: "products/menu/Section.proto"
  dependency: "structs/Grow.proto"
  dependency: "structs/Species.proto"
  dependency: "structs/labtesting/TestResults.proto"
  dependency: "security/access/PartnerPermissions.proto"
  message_type {
    name: "UserKey"
    field {
      name: "uid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Unique ID for the user."
      }
      json_name: "uid"
    }
  }
  message_type {
    name: "User"
    field {
      name: "uid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Unique ID for the user."
      }
      json_name: "uid"
    }
    field {
      name: "flags"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.UserFlags"
      options {
        1025: "Boolean flags for this user."
      }
      json_name: "flags"
    }
    field {
      name: "person"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".person.Person"
      options {
        1025: "Person's information that backs this user."
      }
      json_name: "person"
    }
    field {
      name: "identification"
      number: 20
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".identity.ID"
      options {
        1024: 1
        1025: "Government ID associated with this user."
      }
      json_name: "identification"
    }
    field {
      name: "doctor_rec"
      number: 21
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".identity.ids.UserDoctorRec"
      options {
        1024: 1
        1025: "Doctor's recommendations associated with this user."
      }
      json_name: "doctorRec"
    }
    field {
      name: "seen"
      number: 30
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Last time this user was seen, via auth/login/enrollment etc."
      }
      json_name: "seen"
    }
    field {
      name: "signup"
      number: 31
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this user was created."
      }
      json_name: "signup"
    }
    field {
      name: "identities"
      number: 40
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".identity.User.IdentitiesEntry"
      options {
        1024: 1
        1025: "Identities associated with this user."
      }
      json_name: "identities"
    }
    field {
      name: "media"
      number: 41
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".identity.User.MediaEntry"
      options {
        1024: 1
        1025: "Media associated with this user."
      }
      json_name: "media"
    }
    field {
      name: "consumer"
      number: 100
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.ConsumerProfile"
      options {
        1025: "Consumer profile for this user."
      }
      json_name: "consumer"
    }
    field {
      name: "industry"
      number: 101
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.IndustryProfile"
      options {
        1025: "Industry profile for this user."
      }
      json_name: "industry"
    }
    nested_type {
      name: "IdentitiesEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".identity.UserIdentity"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "MediaEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".media.MediaItem"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
  }
  message_type {
    name: "UserFlags"
    field {
      name: "validated"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Indicates that the account has been validated."
      }
      json_name: "validated"
    }
    field {
      name: "suspended"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Indicates that the account is currently suspended."
      }
      json_name: "suspended"
    }
    field {
      name: "admin"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Indicates that the account has admin privileges."
      }
      json_name: "admin"
    }
    field {
      name: "beta"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Indicates that the account has access to beta systems."
      }
      json_name: "beta"
    }
    field {
      name: "sandbox"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Indicates that the account has access to sandbox systems."
      }
      json_name: "sandbox"
    }
  }
  message_type {
    name: "UserIdentity"
    field {
      name: "provider"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".identity.IdentityProvider"
      options {
        1025: "Provider for this external/foreign account."
      }
      json_name: "provider"
    }
    field {
      name: "id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Unique ID for this account with the specified provider."
      }
      json_name: "id"
    }
    field {
      name: "seen"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this identity was last user to authenticate the underlying user."
      }
      json_name: "seen"
    }
  }
  message_type {
    name: "ConsumerProfile"
    field {
      name: "active"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Profile active/inactive flag."
      }
      json_name: "active"
    }
    field {
      name: "favorite_dispensaries"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_STRING
      options {
        1025: "Enumerates favorite dispensaries for a user."
      }
      json_name: "favoriteDispensaries"
    }
    field {
      name: "enrollment_source"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".identity.EnrollmentSource"
      options {
        1025: "Specifies enrollment source attribution information."
      }
      json_name: "enrollmentSource"
    }
    field {
      name: "enrollment_channel"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Arbitrary string for the channel through which this user enrolled."
      }
      json_name: "enrollmentChannel"
    }
    field {
      name: "preferences"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.ConsumerPreferences"
      options {
        1025: "Preferences attached to a consumer account."
      }
      json_name: "preferences"
    }
  }
  message_type {
    name: "MenuPreferences"
    field {
      name: "section"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".products.menu.section.Section"
      options {
        1025: "Preferred menu sections or product types."
      }
      json_name: "section"
    }
    field {
      name: "feeling"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.labtesting.Feeling"
      options {
        1025: "Preferred feelings or experiential states."
      }
      json_name: "feeling"
    }
    field {
      name: "taste_note"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.labtesting.TasteNote"
      options {
        1025: "Preferred tasting notes."
      }
      json_name: "tasteNote"
    }
    field {
      name: "desired_potency"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.labtesting.PotencyEstimate"
      options {
        1025: "Desired potency level."
      }
      json_name: "desiredPotency"
    }
    field {
      name: "cannabinoid_ratio"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.labtesting.CannabinoidRatio"
      options {
        1025: "Desired cannabinoid ratio."
      }
      json_name: "cannabinoidRatio"
    }
    field {
      name: "species"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.Species"
      options {
        1025: "Preferred species types."
      }
      json_name: "species"
    }
    field {
      name: "grow"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.Grow"
      options {
        1025: "Preferred grow types."
      }
      json_name: "grow"
    }
  }
  message_type {
    name: "ConsumerPreferences"
    field {
      name: "menu"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.MenuPreferences"
      options {
        1025: "Preferred menu sections/product types, and so on."
      }
      json_name: "menu"
    }
  }
  message_type {
    name: "ConsumerMembership"
    field {
      name: "referral_source"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".identity.EnrollmentSource"
      options {
        1025: "Referral source for this enrollment."
      }
      json_name: "referralSource"
    }
    field {
      name: "referral_channel"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Referral channel token - an artbirary, end-system provided value."
      }
      json_name: "referralChannel"
    }
    field {
      name: "signed_up_at"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this profile enrolled."
      }
      json_name: "signedUpAt"
    }
    field {
      name: "seen"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this profile was last seen."
      }
      json_name: "seen"
    }
    field {
      name: "foreign_id"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Foreign ID for this membership, in the partner-colocated membership system."
      }
      json_name: "foreignId"
    }
  }
  message_type {
    name: "IndustryProfile"
    field {
      name: "active"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Profile inactive/active status."
      }
      json_name: "active"
    }
    field {
      name: "partners"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".identity.IndustryProfile.PartnersEntry"
      options {
        1025: "Map of partner accesses levels to partner codes."
      }
      json_name: "partners"
    }
    nested_type {
      name: "PartnersEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".security.access.PartnerAccess"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
  }
  enum_type {
    name: "UserMediaType"
    value {
      name: "PICTURE"
      number: 0
    }
    value {
      name: "DRIVERS_LICENSE"
      number: 1
    }
    value {
      name: "DOCTOR_REC"
      number: 2
    }
  }
  enum_type {
    name: "IdentityProvider"
    value {
      name: "EMAIL"
      number: 0
    }
    value {
      name: "GOOGLE"
      number: 1
    }
    value {
      name: "FACEBOOK"
      number: 2
    }
    value {
      name: "TWITTER"
      number: 3
    }
  }
  enum_type {
    name: "EnrollmentSource"
    value {
      name: "UNSPECIFIED"
      number: 0
    }
    value {
      name: "ONLINE"
      number: 1
    }
    value {
      name: "INTERNAL_APP"
      number: 2
    }
    value {
      name: "PARTNER_APP"
      number: 3
    }
    value {
      name: "IN_STORE"
      number: 4
    }
    value {
      name: "IMPORT"
      number: 5
    }
  }
  options {
    java_package: "io.bloombox.schema.identity"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 316, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 30]
    }
    location {
      path: [3, 2]
      span: [12, 7, 31]
    }
    location {
      path: [3, 3]
      span: [14, 7, 28]
    }
    location {
      path: [3, 4]
      span: [16, 7, 26]
    }
    location {
      path: [3, 5]
      span: [17, 7, 41]
    }
    location {
      path: [3, 6]
      span: [19, 7, 36]
    }
    location {
      path: [3, 7]
      span: [21, 7, 27]
    }
    location {
      path: [3, 8]
      span: [22, 7, 30]
    }
    location {
      path: [3, 9]
      span: [23, 7, 45]
    }
    location {
      path: [3, 10]
      span: [25, 7, 49]
    }
    location {
      path: [4, 0]
      span: [29, 0, 34, 1]
      leading_comments: " Represents a key that refers to a user account.\n"
    }
    location {
      path: [4, 0, 1]
      span: [29, 8, 15]
    }
    location {
      path: [4, 0, 2, 0]
      span: [31, 2, 33, 4]
      leading_comments: " Unique ID for the user.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [31, 2, 29, 17]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [31, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [31, 9, 12]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [31, 15, 16]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [31, 17, 33, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [32, 4, 59]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [32, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [32, 34, 59]
    }
    location {
      path: [4, 1]
      span: [38, 0, 97, 1]
      leading_comments: " Represents an individual who uses software.\n"
    }
    location {
      path: [4, 1, 1]
      span: [38, 8, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [40, 2, 42, 4]
      leading_comments: " Unique ID for the user.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [40, 2, 38, 14]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [40, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [40, 9, 12]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [40, 15, 16]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [40, 17, 42, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [41, 4, 59]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [41, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [41, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [41, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [41, 34, 59]
    }
    location {
      path: [4, 1, 2, 1]
      span: [45, 2, 47, 4]
      leading_comments: " Boolean flags for this user.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [45, 2, 42, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [45, 2, 11]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [45, 12, 17]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [45, 20, 21]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [45, 22, 47, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [46, 4, 64]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [46, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [46, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [46, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [46, 34, 64]
    }
    location {
      path: [4, 1, 2, 2]
      span: [50, 2, 52, 4]
      leading_comments: " Person's information that backs this user.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [50, 2, 47, 4]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [50, 2, 15]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [50, 16, 22]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [50, 25, 26]
    }
    location {
      path: [4, 1, 2, 2, 8]
      span: [50, 27, 52, 3]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0]
      span: [51, 4, 78]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2]
      span: [51, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0]
      span: [51, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [51, 5, 30]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 7]
      span: [51, 34, 78]
    }
    location {
      path: [4, 1, 2, 3]
      span: [55, 2, 58, 4]
      leading_comments: " Government ID associated with this user.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [55, 2, 10]
    }
    location {
      path: [4, 1, 2, 3, 6]
      span: [55, 11, 22]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [55, 23, 37]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [55, 40, 42]
    }
    location {
      path: [4, 1, 2, 3, 8]
      span: [55, 43, 58, 3]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0]
      span: [56, 4, 33]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2]
      span: [56, 4, 26]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0]
      span: [56, 4, 26]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [56, 5, 25]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 3]
      span: [56, 29, 33]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 1]
      span: [57, 4, 76]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 1, 2]
      span: [57, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 1, 2, 0]
      span: [57, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 1, 2, 0, 1]
      span: [57, 5, 30]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 1, 7]
      span: [57, 34, 76]
    }
    location {
      path: [4, 1, 2, 4]
      span: [61, 2, 64, 4]
      leading_comments: " Doctor's recommendations associated with this user.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [61, 2, 10]
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [61, 11, 37]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [61, 38, 48]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [61, 51, 53]
    }
    location {
      path: [4, 1, 2, 4, 8]
      span: [61, 54, 64, 3]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0]
      span: [62, 4, 33]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2]
      span: [62, 4, 26]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0]
      span: [62, 4, 26]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [62, 5, 25]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 3]
      span: [62, 29, 33]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 1]
      span: [63, 4, 87]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 1, 2]
      span: [63, 4, 31]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 1, 2, 0]
      span: [63, 4, 31]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 1, 2, 0, 1]
      span: [63, 5, 30]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 1, 7]
      span: [63, 34, 87]
    }
    location {
      path: [4, 1, 2, 5]
      span: [67, 2, 69, 4]
      leading_comments: " Last time this user was seen, via auth/login/enrollment etc.\n"
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [67, 2, 64, 4]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [67, 2, 18]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [67, 19, 23]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [67, 26, 28]
    }
    location {
      path: [4, 1, 2, 5, 8]
      span: [67, 29, 69, 3]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0]
      span: [68, 4, 96]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2]
      span: [68, 4, 31]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2, 0]
      span: [68, 4, 31]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [68, 5, 30]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 7]
      span: [68, 34, 96]
    }
    location {
      path: [4, 1, 2, 6]
      span: [72, 2, 74, 4]
      leading_comments: " Timestamp for when this user was created.\n"
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [72, 2, 69, 4]
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [72, 2, 18]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [72, 19, 25]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [72, 28, 30]
    }
    location {
      path: [4, 1, 2, 6, 8]
      span: [72, 31, 74, 3]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0]
      span: [73, 4, 77]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2]
      span: [73, 4, 31]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2, 0]
      span: [73, 4, 31]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2, 0, 1]
      span: [73, 5, 30]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 7]
      span: [73, 34, 77]
    }
    location {
      path: [4, 1, 2, 7]
      span: [77, 2, 80, 4]
      leading_comments: " Identities associated with this user.\n"
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [77, 2, 74, 4]
    }
    location {
      path: [4, 1, 2, 7, 6]
      span: [77, 2, 27]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [77, 28, 38]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [77, 41, 43]
    }
    location {
      path: [4, 1, 2, 7, 8]
      span: [77, 44, 80, 3]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0]
      span: [78, 4, 33]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2]
      span: [78, 4, 26]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2, 0]
      span: [78, 4, 26]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2, 0, 1]
      span: [78, 5, 25]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 3]
      span: [78, 29, 33]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 1]
      span: [79, 4, 73]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 1, 2]
      span: [79, 4, 31]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 1, 2, 0]
      span: [79, 4, 31]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 1, 2, 0, 1]
      span: [79, 5, 30]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 1, 7]
      span: [79, 34, 73]
    }
    location {
      path: [4, 1, 2, 8]
      span: [83, 2, 86, 4]
      leading_comments: " Media associated with this user.\n"
    }
    location {
      path: [4, 1, 2, 8, 4]
      span: [83, 2, 80, 4]
    }
    location {
      path: [4, 1, 2, 8, 6]
      span: [83, 2, 30]
    }
    location {
      path: [4, 1, 2, 8, 1]
      span: [83, 31, 36]
    }
    location {
      path: [4, 1, 2, 8, 3]
      span: [83, 39, 41]
    }
    location {
      path: [4, 1, 2, 8, 8]
      span: [83, 42, 86, 3]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0]
      span: [84, 4, 33]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2]
      span: [84, 4, 26]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2, 0]
      span: [84, 4, 26]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2, 0, 1]
      span: [84, 5, 25]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 3]
      span: [84, 29, 33]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 1]
      span: [85, 4, 68]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 1, 2]
      span: [85, 4, 31]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 1, 2, 0]
      span: [85, 4, 31]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 1, 2, 0, 1]
      span: [85, 5, 30]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 1, 7]
      span: [85, 34, 68]
    }
    location {
      path: [4, 1, 2, 9]
      span: [89, 2, 91, 4]
      leading_comments: " Consumer profile for this user.\n"
    }
    location {
      path: [4, 1, 2, 9, 4]
      span: [89, 2, 86, 4]
    }
    location {
      path: [4, 1, 2, 9, 6]
      span: [89, 2, 17]
    }
    location {
      path: [4, 1, 2, 9, 1]
      span: [89, 18, 26]
    }
    location {
      path: [4, 1, 2, 9, 3]
      span: [89, 29, 32]
    }
    location {
      path: [4, 1, 2, 9, 8]
      span: [89, 33, 91, 3]
    }
    location {
      path: [4, 1, 2, 9, 8, 999, 0]
      span: [90, 4, 67]
    }
    location {
      path: [4, 1, 2, 9, 8, 999, 0, 2]
      span: [90, 4, 31]
    }
    location {
      path: [4, 1, 2, 9, 8, 999, 0, 2, 0]
      span: [90, 4, 31]
    }
    location {
      path: [4, 1, 2, 9, 8, 999, 0, 2, 0, 1]
      span: [90, 5, 30]
    }
    location {
      path: [4, 1, 2, 9, 8, 999, 0, 7]
      span: [90, 34, 67]
    }
    location {
      path: [4, 1, 2, 10]
      span: [94, 2, 96, 4]
      leading_comments: " Industry profile for this user.\n"
    }
    location {
      path: [4, 1, 2, 10, 4]
      span: [94, 2, 91, 4]
    }
    location {
      path: [4, 1, 2, 10, 6]
      span: [94, 2, 17]
    }
    location {
      path: [4, 1, 2, 10, 1]
      span: [94, 18, 26]
    }
    location {
      path: [4, 1, 2, 10, 3]
      span: [94, 29, 32]
    }
    location {
      path: [4, 1, 2, 10, 8]
      span: [94, 33, 96, 3]
    }
    location {
      path: [4, 1, 2, 10, 8, 999, 0]
      span: [95, 4, 67]
    }
    location {
      path: [4, 1, 2, 10, 8, 999, 0, 2]
      span: [95, 4, 31]
    }
    location {
      path: [4, 1, 2, 10, 8, 999, 0, 2, 0]
      span: [95, 4, 31]
    }
    location {
      path: [4, 1, 2, 10, 8, 999, 0, 2, 0, 1]
      span: [95, 5, 30]
    }
    location {
      path: [4, 1, 2, 10, 8, 999, 0, 7]
      span: [95, 34, 67]
    }
    location {
      path: [4, 2]
      span: [101, 0, 126, 1]
      leading_comments: " Boolean flags that may be set on a user account.\n"
    }
    location {
      path: [4, 2, 1]
      span: [101, 8, 17]
    }
    location {
      path: [4, 2, 2, 0]
      span: [103, 2, 105, 4]
      leading_comments: " Indicates that the account has been validated.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [103, 2, 101, 19]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [103, 2, 6]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [103, 7, 16]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [103, 19, 20]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [103, 21, 105, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [104, 4, 82]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [104, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [104, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [104, 5, 30]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 7]
      span: [104, 34, 82]
    }
    location {
      path: [4, 2, 2, 1]
      span: [108, 2, 110, 4]
      leading_comments: " Indicates that the account is currently suspended.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [108, 2, 105, 4]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [108, 2, 6]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [108, 7, 16]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [108, 19, 20]
    }
    location {
      path: [4, 2, 2, 1, 8]
      span: [108, 21, 110, 3]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0]
      span: [109, 4, 86]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2]
      span: [109, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0]
      span: [109, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [109, 5, 30]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 7]
      span: [109, 34, 86]
    }
    location {
      path: [4, 2, 2, 2]
      span: [113, 2, 115, 4]
      leading_comments: " Indicates that the account has admin privileges.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [113, 2, 110, 4]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [113, 2, 6]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [113, 7, 12]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [113, 15, 16]
    }
    location {
      path: [4, 2, 2, 2, 8]
      span: [113, 17, 115, 3]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0]
      span: [114, 4, 84]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2]
      span: [114, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0]
      span: [114, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [114, 5, 30]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 7]
      span: [114, 34, 84]
    }
    location {
      path: [4, 2, 2, 3]
      span: [118, 2, 120, 4]
      leading_comments: " Indicates that the account has access to beta systems.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [118, 2, 115, 4]
    }
    location {
      path: [4, 2, 2, 3, 5]
      span: [118, 2, 6]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [118, 7, 11]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [118, 14, 15]
    }
    location {
      path: [4, 2, 2, 3, 8]
      span: [118, 16, 120, 3]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0]
      span: [119, 4, 90]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2]
      span: [119, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0]
      span: [119, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [119, 5, 30]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 7]
      span: [119, 34, 90]
    }
    location {
      path: [4, 2, 2, 4]
      span: [123, 2, 125, 4]
      leading_comments: " Indicates that the account has access to sandbox systems.\n"
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [123, 2, 120, 4]
    }
    location {
      path: [4, 2, 2, 4, 5]
      span: [123, 2, 6]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [123, 7, 14]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [123, 17, 18]
    }
    location {
      path: [4, 2, 2, 4, 8]
      span: [123, 19, 125, 3]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0]
      span: [124, 4, 93]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2]
      span: [124, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0]
      span: [124, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [124, 5, 30]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 7]
      span: [124, 34, 93]
    }
    location {
      path: [5, 0]
      span: [130, 0, 139, 1]
      leading_comments: " Types of media that may be attached to a user.\n"
    }
    location {
      path: [5, 0, 1]
      span: [130, 5, 18]
    }
    location {
      path: [5, 0, 2, 0]
      span: [132, 2, 14]
      leading_comments: " A portrait image of the person that this user represents.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [132, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [132, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [135, 2, 22]
      leading_comments: " Picture of the user's driver's license.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [135, 2, 17]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [135, 20, 21]
    }
    location {
      path: [5, 0, 2, 2]
      span: [138, 2, 17]
      leading_comments: " Picture of the user's doctor's rec.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [138, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [138, 15, 16]
    }
    location {
      path: [5, 1]
      span: [143, 0, 155, 1]
      leading_comments: " Enumerates providers through which users may authenticate.\n"
    }
    location {
      path: [5, 1, 1]
      span: [143, 5, 21]
    }
    location {
      path: [5, 1, 2, 0]
      span: [145, 2, 12]
      leading_comments: " Email/password-based authentication.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [145, 2, 7]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [145, 10, 11]
    }
    location {
      path: [5, 1, 2, 1]
      span: [148, 2, 13]
      leading_comments: " Authentication via Google OpenID/OAuth2.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [148, 2, 8]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [148, 11, 12]
    }
    location {
      path: [5, 1, 2, 2]
      span: [151, 2, 15]
      leading_comments: " OAuth2 Graph authentication via Facebook.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [151, 2, 10]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [151, 13, 14]
    }
    location {
      path: [5, 1, 2, 3]
      span: [154, 2, 14]
      leading_comments: " OAuth2 account authentication via Twitter.\n"
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [154, 2, 9]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [154, 12, 13]
    }
    location {
      path: [4, 3]
      span: [159, 0, 174, 1]
      leading_comments: " Represents an identity that may be associated with a user account.\n"
    }
    location {
      path: [4, 3, 1]
      span: [159, 8, 20]
    }
    location {
      path: [4, 3, 2, 0]
      span: [161, 2, 163, 4]
      leading_comments: " Provider for this external/foreign account.\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [161, 2, 159, 22]
    }
    location {
      path: [4, 3, 2, 0, 6]
      span: [161, 2, 18]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [161, 19, 27]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [161, 30, 31]
    }
    location {
      path: [4, 3, 2, 0, 8]
      span: [161, 32, 163, 3]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0]
      span: [162, 4, 79]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2]
      span: [162, 4, 31]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2, 0]
      span: [162, 4, 31]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [162, 5, 30]
    }
    location {
      path: [4, 3, 2, 0, 8, 999, 0, 7]
      span: [162, 34, 79]
    }
    location {
      path: [4, 3, 2, 1]
      span: [166, 2, 168, 4]
      leading_comments: " Unique ID for this account with the specified provider.\n"
    }
    location {
      path: [4, 3, 2, 1, 4]
      span: [166, 2, 163, 4]
    }
    location {
      path: [4, 3, 2, 1, 5]
      span: [166, 2, 8]
    }
    location {
      path: [4, 3, 2, 1, 1]
      span: [166, 9, 11]
    }
    location {
      path: [4, 3, 2, 1, 3]
      span: [166, 14, 15]
    }
    location {
      path: [4, 3, 2, 1, 8]
      span: [166, 16, 168, 3]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0]
      span: [167, 4, 91]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 2]
      span: [167, 4, 31]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 2, 0]
      span: [167, 4, 31]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [167, 5, 30]
    }
    location {
      path: [4, 3, 2, 1, 8, 999, 0, 7]
      span: [167, 34, 91]
    }
    location {
      path: [4, 3, 2, 2]
      span: [171, 2, 173, 4]
      leading_comments: " Timestamp for when this identity was last user to authenticate the underlying user.\n"
    }
    location {
      path: [4, 3, 2, 2, 4]
      span: [171, 2, 168, 4]
    }
    location {
      path: [4, 3, 2, 2, 6]
      span: [171, 2, 18]
    }
    location {
      path: [4, 3, 2, 2, 1]
      span: [171, 19, 23]
    }
    location {
      path: [4, 3, 2, 2, 3]
      span: [171, 26, 27]
    }
    location {
      path: [4, 3, 2, 2, 8]
      span: [171, 28, 173, 3]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0]
      span: [172, 4, 119]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 2]
      span: [172, 4, 31]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 2, 0]
      span: [172, 4, 31]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [172, 5, 30]
    }
    location {
      path: [4, 3, 2, 2, 8, 999, 0, 7]
      span: [172, 34, 119]
    }
    location {
      path: [5, 2]
      span: [178, 0, 196, 1]
      leading_comments: " Enumerates sources for user enrollments.\n"
    }
    location {
      path: [5, 2, 1]
      span: [178, 5, 21]
    }
    location {
      path: [5, 2, 2, 0]
      span: [180, 2, 18]
      leading_comments: " Unknown or unspecified enrollment source.\n"
    }
    location {
      path: [5, 2, 2, 0, 1]
      span: [180, 2, 13]
    }
    location {
      path: [5, 2, 2, 0, 2]
      span: [180, 16, 17]
    }
    location {
      path: [5, 2, 2, 1]
      span: [183, 2, 13]
      leading_comments: " Online enrollment.\n"
    }
    location {
      path: [5, 2, 2, 1, 1]
      span: [183, 2, 8]
    }
    location {
      path: [5, 2, 2, 1, 2]
      span: [183, 11, 12]
    }
    location {
      path: [5, 2, 2, 2]
      span: [186, 2, 19]
      leading_comments: " Internal application to Bloombox.\n"
    }
    location {
      path: [5, 2, 2, 2, 1]
      span: [186, 2, 14]
    }
    location {
      path: [5, 2, 2, 2, 2]
      span: [186, 17, 18]
    }
    location {
      path: [5, 2, 2, 3]
      span: [189, 2, 18]
      leading_comments: " Partner application integration.\n"
    }
    location {
      path: [5, 2, 2, 3, 1]
      span: [189, 2, 13]
    }
    location {
      path: [5, 2, 2, 3, 2]
      span: [189, 16, 17]
    }
    location {
      path: [5, 2, 2, 4]
      span: [192, 2, 15]
      leading_comments: " In-store physical sign up.\n"
    }
    location {
      path: [5, 2, 2, 4, 1]
      span: [192, 2, 10]
    }
    location {
      path: [5, 2, 2, 4, 2]
      span: [192, 13, 14]
    }
    location {
      path: [5, 2, 2, 5]
      span: [195, 2, 13]
      leading_comments: " Internally imported user.\n"
    }
    location {
      path: [5, 2, 2, 5, 1]
      span: [195, 2, 8]
    }
    location {
      path: [5, 2, 2, 5, 2]
      span: [195, 11, 12]
    }
    location {
      path: [4, 4]
      span: [200, 0, 225, 1]
      leading_comments: " User profile information for a cannabis consumer.\n"
    }
    location {
      path: [4, 4, 1]
      span: [200, 8, 23]
    }
    location {
      path: [4, 4, 2, 0]
      span: [202, 2, 204, 4]
      leading_comments: " Profile active/inactive flag.\n"
    }
    location {
      path: [4, 4, 2, 0, 4]
      span: [202, 2, 200, 25]
    }
    location {
      path: [4, 4, 2, 0, 5]
      span: [202, 2, 6]
    }
    location {
      path: [4, 4, 2, 0, 1]
      span: [202, 7, 13]
    }
    location {
      path: [4, 4, 2, 0, 3]
      span: [202, 16, 17]
    }
    location {
      path: [4, 4, 2, 0, 8]
      span: [202, 18, 204, 3]
    }
    location {
      path: [4, 4, 2, 0, 8, 999, 0]
      span: [203, 4, 65]
    }
    location {
      path: [4, 4, 2, 0, 8, 999, 0, 2]
      span: [203, 4, 31]
    }
    location {
      path: [4, 4, 2, 0, 8, 999, 0, 2, 0]
      span: [203, 4, 31]
    }
    location {
      path: [4, 4, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [203, 5, 30]
    }
    location {
      path: [4, 4, 2, 0, 8, 999, 0, 7]
      span: [203, 34, 65]
    }
    location {
      path: [4, 4, 2, 1]
      span: [207, 2, 209, 4]
      leading_comments: " Enumerates favorite dispensaries for a user.\n"
    }
    location {
      path: [4, 4, 2, 1, 4]
      span: [207, 2, 10]
    }
    location {
      path: [4, 4, 2, 1, 5]
      span: [207, 11, 17]
    }
    location {
      path: [4, 4, 2, 1, 1]
      span: [207, 18, 39]
    }
    location {
      path: [4, 4, 2, 1, 3]
      span: [207, 42, 43]
    }
    location {
      path: [4, 4, 2, 1, 8]
      span: [207, 44, 209, 3]
    }
    location {
      path: [4, 4, 2, 1, 8, 999, 0]
      span: [208, 4, 80]
    }
    location {
      path: [4, 4, 2, 1, 8, 999, 0, 2]
      span: [208, 4, 31]
    }
    location {
      path: [4, 4, 2, 1, 8, 999, 0, 2, 0]
      span: [208, 4, 31]
    }
    location {
      path: [4, 4, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [208, 5, 30]
    }
    location {
      path: [4, 4, 2, 1, 8, 999, 0, 7]
      span: [208, 34, 80]
    }
    location {
      path: [4, 4, 2, 2]
      span: [212, 2, 214, 4]
      leading_comments: " Specifies enrollment source attribution information.\n"
    }
    location {
      path: [4, 4, 2, 2, 4]
      span: [212, 2, 209, 4]
    }
    location {
      path: [4, 4, 2, 2, 6]
      span: [212, 2, 18]
    }
    location {
      path: [4, 4, 2, 2, 1]
      span: [212, 19, 36]
    }
    location {
      path: [4, 4, 2, 2, 3]
      span: [212, 39, 40]
    }
    location {
      path: [4, 4, 2, 2, 8]
      span: [212, 41, 214, 3]
    }
    location {
      path: [4, 4, 2, 2, 8, 999, 0]
      span: [213, 4, 88]
    }
    location {
      path: [4, 4, 2, 2, 8, 999, 0, 2]
      span: [213, 4, 31]
    }
    location {
      path: [4, 4, 2, 2, 8, 999, 0, 2, 0]
      span: [213, 4, 31]
    }
    location {
      path: [4, 4, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [213, 5, 30]
    }
    location {
      path: [4, 4, 2, 2, 8, 999, 0, 7]
      span: [213, 34, 88]
    }
    location {
      path: [4, 4, 2, 3]
      span: [217, 2, 219, 4]
      leading_comments: " Arbitrary string for the channel through which this user enrolled.\n"
    }
    location {
      path: [4, 4, 2, 3, 4]
      span: [217, 2, 214, 4]
    }
    location {
      path: [4, 4, 2, 3, 5]
      span: [217, 2, 8]
    }
    location {
      path: [4, 4, 2, 3, 1]
      span: [217, 9, 27]
    }
    location {
      path: [4, 4, 2, 3, 3]
      span: [217, 30, 31]
    }
    location {
      path: [4, 4, 2, 3, 8]
      span: [217, 32, 219, 3]
    }
    location {
      path: [4, 4, 2, 3, 8, 999, 0]
      span: [218, 4, 102]
    }
    location {
      path: [4, 4, 2, 3, 8, 999, 0, 2]
      span: [218, 4, 31]
    }
    location {
      path: [4, 4, 2, 3, 8, 999, 0, 2, 0]
      span: [218, 4, 31]
    }
    location {
      path: [4, 4, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [218, 5, 30]
    }
    location {
      path: [4, 4, 2, 3, 8, 999, 0, 7]
      span: [218, 34, 102]
    }
    location {
      path: [4, 4, 2, 4]
      span: [222, 2, 224, 4]
      leading_comments: " Preferences attached to a consumer account.\n"
    }
    location {
      path: [4, 4, 2, 4, 4]
      span: [222, 2, 219, 4]
    }
    location {
      path: [4, 4, 2, 4, 6]
      span: [222, 2, 21]
    }
    location {
      path: [4, 4, 2, 4, 1]
      span: [222, 22, 33]
    }
    location {
      path: [4, 4, 2, 4, 3]
      span: [222, 36, 37]
    }
    location {
      path: [4, 4, 2, 4, 8]
      span: [222, 38, 224, 3]
    }
    location {
      path: [4, 4, 2, 4, 8, 999, 0]
      span: [223, 4, 79]
    }
    location {
      path: [4, 4, 2, 4, 8, 999, 0, 2]
      span: [223, 4, 31]
    }
    location {
      path: [4, 4, 2, 4, 8, 999, 0, 2, 0]
      span: [223, 4, 31]
    }
    location {
      path: [4, 4, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [223, 5, 30]
    }
    location {
      path: [4, 4, 2, 4, 8, 999, 0, 7]
      span: [223, 34, 79]
    }
    location {
      path: [4, 5]
      span: [229, 0, 264, 1]
      leading_comments: " Consumer preferences related to menus and products.\n"
    }
    location {
      path: [4, 5, 1]
      span: [229, 8, 23]
    }
    location {
      path: [4, 5, 2, 0]
      span: [231, 2, 233, 4]
      leading_comments: " Preferred menu sections or product types.\n"
    }
    location {
      path: [4, 5, 2, 0, 4]
      span: [231, 2, 10]
    }
    location {
      path: [4, 5, 2, 0, 6]
      span: [231, 11, 40]
    }
    location {
      path: [4, 5, 2, 0, 1]
      span: [231, 41, 48]
    }
    location {
      path: [4, 5, 2, 0, 3]
      span: [231, 51, 52]
    }
    location {
      path: [4, 5, 2, 0, 8]
      span: [231, 53, 233, 3]
    }
    location {
      path: [4, 5, 2, 0, 8, 999, 0]
      span: [232, 4, 77]
    }
    location {
      path: [4, 5, 2, 0, 8, 999, 0, 2]
      span: [232, 4, 31]
    }
    location {
      path: [4, 5, 2, 0, 8, 999, 0, 2, 0]
      span: [232, 4, 31]
    }
    location {
      path: [4, 5, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [232, 5, 30]
    }
    location {
      path: [4, 5, 2, 0, 8, 999, 0, 7]
      span: [232, 34, 77]
    }
    location {
      path: [4, 5, 2, 1]
      span: [236, 2, 238, 4]
      leading_comments: " Preferred feelings or experiential states.\n"
    }
    location {
      path: [4, 5, 2, 1, 4]
      span: [236, 2, 10]
    }
    location {
      path: [4, 5, 2, 1, 6]
      span: [236, 11, 37]
    }
    location {
      path: [4, 5, 2, 1, 1]
      span: [236, 38, 45]
    }
    location {
      path: [4, 5, 2, 1, 3]
      span: [236, 48, 49]
    }
    location {
      path: [4, 5, 2, 1, 8]
      span: [236, 50, 238, 3]
    }
    location {
      path: [4, 5, 2, 1, 8, 999, 0]
      span: [237, 4, 78]
    }
    location {
      path: [4, 5, 2, 1, 8, 999, 0, 2]
      span: [237, 4, 31]
    }
    location {
      path: [4, 5, 2, 1, 8, 999, 0, 2, 0]
      span: [237, 4, 31]
    }
    location {
      path: [4, 5, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [237, 5, 30]
    }
    location {
      path: [4, 5, 2, 1, 8, 999, 0, 7]
      span: [237, 34, 78]
    }
    location {
      path: [4, 5, 2, 2]
      span: [241, 2, 243, 4]
      leading_comments: " Preferred tasting notes.\n"
    }
    location {
      path: [4, 5, 2, 2, 4]
      span: [241, 2, 10]
    }
    location {
      path: [4, 5, 2, 2, 6]
      span: [241, 11, 39]
    }
    location {
      path: [4, 5, 2, 2, 1]
      span: [241, 40, 50]
    }
    location {
      path: [4, 5, 2, 2, 3]
      span: [241, 53, 54]
    }
    location {
      path: [4, 5, 2, 2, 8]
      span: [241, 55, 243, 3]
    }
    location {
      path: [4, 5, 2, 2, 8, 999, 0]
      span: [242, 4, 60]
    }
    location {
      path: [4, 5, 2, 2, 8, 999, 0, 2]
      span: [242, 4, 31]
    }
    location {
      path: [4, 5, 2, 2, 8, 999, 0, 2, 0]
      span: [242, 4, 31]
    }
    location {
      path: [4, 5, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [242, 5, 30]
    }
    location {
      path: [4, 5, 2, 2, 8, 999, 0, 7]
      span: [242, 34, 60]
    }
    location {
      path: [4, 5, 2, 3]
      span: [246, 2, 248, 4]
      leading_comments: " Desired potency level.\n"
    }
    location {
      path: [4, 5, 2, 3, 4]
      span: [246, 2, 243, 4]
    }
    location {
      path: [4, 5, 2, 3, 6]
      span: [246, 2, 36]
    }
    location {
      path: [4, 5, 2, 3, 1]
      span: [246, 37, 52]
    }
    location {
      path: [4, 5, 2, 3, 3]
      span: [246, 55, 56]
    }
    location {
      path: [4, 5, 2, 3, 8]
      span: [246, 57, 248, 3]
    }
    location {
      path: [4, 5, 2, 3, 8, 999, 0]
      span: [247, 4, 58]
    }
    location {
      path: [4, 5, 2, 3, 8, 999, 0, 2]
      span: [247, 4, 31]
    }
    location {
      path: [4, 5, 2, 3, 8, 999, 0, 2, 0]
      span: [247, 4, 31]
    }
    location {
      path: [4, 5, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [247, 5, 30]
    }
    location {
      path: [4, 5, 2, 3, 8, 999, 0, 7]
      span: [247, 34, 58]
    }
    location {
      path: [4, 5, 2, 4]
      span: [251, 2, 253, 4]
      leading_comments: " Desired cannabinoid ratio.\n"
    }
    location {
      path: [4, 5, 2, 4, 4]
      span: [251, 2, 248, 4]
    }
    location {
      path: [4, 5, 2, 4, 6]
      span: [251, 2, 37]
    }
    location {
      path: [4, 5, 2, 4, 1]
      span: [251, 38, 55]
    }
    location {
      path: [4, 5, 2, 4, 3]
      span: [251, 58, 59]
    }
    location {
      path: [4, 5, 2, 4, 8]
      span: [251, 60, 253, 3]
    }
    location {
      path: [4, 5, 2, 4, 8, 999, 0]
      span: [252, 4, 62]
    }
    location {
      path: [4, 5, 2, 4, 8, 999, 0, 2]
      span: [252, 4, 31]
    }
    location {
      path: [4, 5, 2, 4, 8, 999, 0, 2, 0]
      span: [252, 4, 31]
    }
    location {
      path: [4, 5, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [252, 5, 30]
    }
    location {
      path: [4, 5, 2, 4, 8, 999, 0, 7]
      span: [252, 34, 62]
    }
    location {
      path: [4, 5, 2, 5]
      span: [256, 2, 258, 4]
      leading_comments: " Preferred species types.\n"
    }
    location {
      path: [4, 5, 2, 5, 4]
      span: [256, 2, 10]
    }
    location {
      path: [4, 5, 2, 5, 6]
      span: [256, 11, 26]
    }
    location {
      path: [4, 5, 2, 5, 1]
      span: [256, 27, 34]
    }
    location {
      path: [4, 5, 2, 5, 3]
      span: [256, 37, 38]
    }
    location {
      path: [4, 5, 2, 5, 8]
      span: [256, 39, 258, 3]
    }
    location {
      path: [4, 5, 2, 5, 8, 999, 0]
      span: [257, 4, 60]
    }
    location {
      path: [4, 5, 2, 5, 8, 999, 0, 2]
      span: [257, 4, 31]
    }
    location {
      path: [4, 5, 2, 5, 8, 999, 0, 2, 0]
      span: [257, 4, 31]
    }
    location {
      path: [4, 5, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [257, 5, 30]
    }
    location {
      path: [4, 5, 2, 5, 8, 999, 0, 7]
      span: [257, 34, 60]
    }
    location {
      path: [4, 5, 2, 6]
      span: [261, 2, 263, 4]
      leading_comments: " Preferred grow types.\n"
    }
    location {
      path: [4, 5, 2, 6, 4]
      span: [261, 2, 10]
    }
    location {
      path: [4, 5, 2, 6, 6]
      span: [261, 11, 23]
    }
    location {
      path: [4, 5, 2, 6, 1]
      span: [261, 24, 28]
    }
    location {
      path: [4, 5, 2, 6, 3]
      span: [261, 31, 32]
    }
    location {
      path: [4, 5, 2, 6, 8]
      span: [261, 33, 263, 3]
    }
    location {
      path: [4, 5, 2, 6, 8, 999, 0]
      span: [262, 4, 57]
    }
    location {
      path: [4, 5, 2, 6, 8, 999, 0, 2]
      span: [262, 4, 31]
    }
    location {
      path: [4, 5, 2, 6, 8, 999, 0, 2, 0]
      span: [262, 4, 31]
    }
    location {
      path: [4, 5, 2, 6, 8, 999, 0, 2, 0, 1]
      span: [262, 5, 30]
    }
    location {
      path: [4, 5, 2, 6, 8, 999, 0, 7]
      span: [262, 34, 57]
    }
    location {
      path: [4, 6]
      span: [268, 0, 273, 1]
      leading_comments: " Specifies preferences related to a user's profile as a cannabis consumer.\n"
    }
    location {
      path: [4, 6, 1]
      span: [268, 8, 27]
    }
    location {
      path: [4, 6, 2, 0]
      span: [270, 2, 272, 4]
      leading_comments: " Preferred menu sections/product types, and so on.\n"
    }
    location {
      path: [4, 6, 2, 0, 4]
      span: [270, 2, 268, 29]
    }
    location {
      path: [4, 6, 2, 0, 6]
      span: [270, 2, 17]
    }
    location {
      path: [4, 6, 2, 0, 1]
      span: [270, 18, 22]
    }
    location {
      path: [4, 6, 2, 0, 3]
      span: [270, 25, 27]
    }
    location {
      path: [4, 6, 2, 0, 8]
      span: [270, 28, 272, 3]
    }
    location {
      path: [4, 6, 2, 0, 8, 999, 0]
      span: [271, 4, 85]
    }
    location {
      path: [4, 6, 2, 0, 8, 999, 0, 2]
      span: [271, 4, 31]
    }
    location {
      path: [4, 6, 2, 0, 8, 999, 0, 2, 0]
      span: [271, 4, 31]
    }
    location {
      path: [4, 6, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [271, 5, 30]
    }
    location {
      path: [4, 6, 2, 0, 8, 999, 0, 7]
      span: [271, 34, 85]
    }
    location {
      path: [4, 7]
      span: [277, 0, 302, 1]
      leading_comments: " Represents a consumer's membership at a particular dispensary.\n"
    }
    location {
      path: [4, 7, 1]
      span: [277, 8, 26]
    }
    location {
      path: [4, 7, 2, 0]
      span: [279, 2, 281, 4]
      leading_comments: " Referral source for this enrollment.\n"
    }
    location {
      path: [4, 7, 2, 0, 4]
      span: [279, 2, 277, 28]
    }
    location {
      path: [4, 7, 2, 0, 6]
      span: [279, 2, 18]
    }
    location {
      path: [4, 7, 2, 0, 1]
      span: [279, 19, 34]
    }
    location {
      path: [4, 7, 2, 0, 3]
      span: [279, 37, 38]
    }
    location {
      path: [4, 7, 2, 0, 8]
      span: [279, 39, 281, 3]
    }
    location {
      path: [4, 7, 2, 0, 8, 999, 0]
      span: [280, 4, 72]
    }
    location {
      path: [4, 7, 2, 0, 8, 999, 0, 2]
      span: [280, 4, 31]
    }
    location {
      path: [4, 7, 2, 0, 8, 999, 0, 2, 0]
      span: [280, 4, 31]
    }
    location {
      path: [4, 7, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [280, 5, 30]
    }
    location {
      path: [4, 7, 2, 0, 8, 999, 0, 7]
      span: [280, 34, 72]
    }
    location {
      path: [4, 7, 2, 1]
      span: [284, 2, 286, 4]
      leading_comments: " Referral channel token - an artbirary, end-system provided value.\n"
    }
    location {
      path: [4, 7, 2, 1, 4]
      span: [284, 2, 281, 4]
    }
    location {
      path: [4, 7, 2, 1, 5]
      span: [284, 2, 8]
    }
    location {
      path: [4, 7, 2, 1, 1]
      span: [284, 9, 25]
    }
    location {
      path: [4, 7, 2, 1, 3]
      span: [284, 28, 29]
    }
    location {
      path: [4, 7, 2, 1, 8]
      span: [284, 30, 286, 3]
    }
    location {
      path: [4, 7, 2, 1, 8, 999, 0]
      span: [285, 4, 101]
    }
    location {
      path: [4, 7, 2, 1, 8, 999, 0, 2]
      span: [285, 4, 31]
    }
    location {
      path: [4, 7, 2, 1, 8, 999, 0, 2, 0]
      span: [285, 4, 31]
    }
    location {
      path: [4, 7, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [285, 5, 30]
    }
    location {
      path: [4, 7, 2, 1, 8, 999, 0, 7]
      span: [285, 34, 101]
    }
    location {
      path: [4, 7, 2, 2]
      span: [289, 2, 291, 4]
      leading_comments: " Timestamp for when this profile enrolled.\n"
    }
    location {
      path: [4, 7, 2, 2, 4]
      span: [289, 2, 286, 4]
    }
    location {
      path: [4, 7, 2, 2, 6]
      span: [289, 2, 18]
    }
    location {
      path: [4, 7, 2, 2, 1]
      span: [289, 19, 31]
    }
    location {
      path: [4, 7, 2, 2, 3]
      span: [289, 34, 35]
    }
    location {
      path: [4, 7, 2, 2, 8]
      span: [289, 36, 291, 3]
    }
    location {
      path: [4, 7, 2, 2, 8, 999, 0]
      span: [290, 4, 77]
    }
    location {
      path: [4, 7, 2, 2, 8, 999, 0, 2]
      span: [290, 4, 31]
    }
    location {
      path: [4, 7, 2, 2, 8, 999, 0, 2, 0]
      span: [290, 4, 31]
    }
    location {
      path: [4, 7, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [290, 5, 30]
    }
    location {
      path: [4, 7, 2, 2, 8, 999, 0, 7]
      span: [290, 34, 77]
    }
    location {
      path: [4, 7, 2, 3]
      span: [294, 2, 296, 4]
      leading_comments: " Timestamp for when this profile was last seen.\n"
    }
    location {
      path: [4, 7, 2, 3, 4]
      span: [294, 2, 291, 4]
    }
    location {
      path: [4, 7, 2, 3, 6]
      span: [294, 2, 18]
    }
    location {
      path: [4, 7, 2, 3, 1]
      span: [294, 19, 23]
    }
    location {
      path: [4, 7, 2, 3, 3]
      span: [294, 26, 27]
    }
    location {
      path: [4, 7, 2, 3, 8]
      span: [294, 28, 296, 3]
    }
    location {
      path: [4, 7, 2, 3, 8, 999, 0]
      span: [295, 4, 82]
    }
    location {
      path: [4, 7, 2, 3, 8, 999, 0, 2]
      span: [295, 4, 31]
    }
    location {
      path: [4, 7, 2, 3, 8, 999, 0, 2, 0]
      span: [295, 4, 31]
    }
    location {
      path: [4, 7, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [295, 5, 30]
    }
    location {
      path: [4, 7, 2, 3, 8, 999, 0, 7]
      span: [295, 34, 82]
    }
    location {
      path: [4, 7, 2, 4]
      span: [299, 2, 301, 4]
      leading_comments: " Foreign ID for this membership, in the partner-colocated membership system.\n"
    }
    location {
      path: [4, 7, 2, 4, 4]
      span: [299, 2, 296, 4]
    }
    location {
      path: [4, 7, 2, 4, 5]
      span: [299, 2, 8]
    }
    location {
      path: [4, 7, 2, 4, 1]
      span: [299, 9, 19]
    }
    location {
      path: [4, 7, 2, 4, 3]
      span: [299, 22, 23]
    }
    location {
      path: [4, 7, 2, 4, 8]
      span: [299, 24, 301, 3]
    }
    location {
      path: [4, 7, 2, 4, 8, 999, 0]
      span: [300, 4, 111]
    }
    location {
      path: [4, 7, 2, 4, 8, 999, 0, 2]
      span: [300, 4, 31]
    }
    location {
      path: [4, 7, 2, 4, 8, 999, 0, 2, 0]
      span: [300, 4, 31]
    }
    location {
      path: [4, 7, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [300, 5, 30]
    }
    location {
      path: [4, 7, 2, 4, 8, 999, 0, 7]
      span: [300, 34, 111]
    }
    location {
      path: [4, 8]
      span: [306, 0, 316, 1]
      leading_comments: " Profile for a cannabis industry professional of some sort.\n"
    }
    location {
      path: [4, 8, 1]
      span: [306, 8, 23]
    }
    location {
      path: [4, 8, 2, 0]
      span: [308, 2, 310, 4]
      leading_comments: " Profile inactive/active status.\n"
    }
    location {
      path: [4, 8, 2, 0, 4]
      span: [308, 2, 306, 25]
    }
    location {
      path: [4, 8, 2, 0, 5]
      span: [308, 2, 6]
    }
    location {
      path: [4, 8, 2, 0, 1]
      span: [308, 7, 13]
    }
    location {
      path: [4, 8, 2, 0, 3]
      span: [308, 16, 17]
    }
    location {
      path: [4, 8, 2, 0, 8]
      span: [308, 18, 310, 3]
    }
    location {
      path: [4, 8, 2, 0, 8, 999, 0]
      span: [309, 4, 67]
    }
    location {
      path: [4, 8, 2, 0, 8, 999, 0, 2]
      span: [309, 4, 31]
    }
    location {
      path: [4, 8, 2, 0, 8, 999, 0, 2, 0]
      span: [309, 4, 31]
    }
    location {
      path: [4, 8, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [309, 5, 30]
    }
    location {
      path: [4, 8, 2, 0, 8, 999, 0, 7]
      span: [309, 34, 67]
    }
    location {
      path: [4, 8, 2, 1]
      span: [313, 2, 315, 4]
      leading_comments: " Map of partner accesses levels to partner codes.\n"
    }
    location {
      path: [4, 8, 2, 1, 4]
      span: [313, 2, 310, 4]
    }
    location {
      path: [4, 8, 2, 1, 6]
      span: [313, 2, 44]
    }
    location {
      path: [4, 8, 2, 1, 1]
      span: [313, 45, 53]
    }
    location {
      path: [4, 8, 2, 1, 3]
      span: [313, 56, 57]
    }
    location {
      path: [4, 8, 2, 1, 8]
      span: [313, 58, 315, 3]
    }
    location {
      path: [4, 8, 2, 1, 8, 999, 0]
      span: [314, 4, 84]
    }
    location {
      path: [4, 8, 2, 1, 8, 999, 0, 2]
      span: [314, 4, 31]
    }
    location {
      path: [4, 8, 2, 1, 8, 999, 0, 2, 0]
      span: [314, 4, 31]
    }
    location {
      path: [4, 8, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [314, 5, 30]
    }
    location {
      path: [4, 8, 2, 1, 8, 999, 0, 7]
      span: [314, 34, 84]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/pass/PassKey.proto"
  package: "identity.pass"
  message_type {
    name: "PassKey"
    field {
      name: "encoded"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "encoded"
    }
    field {
      name: "serial"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "serial"
    }
    field {
      name: "uid"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uid"
    }
  }
  options {
    java_package: "io.bloombox.schema.pass"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 14, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 21]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 48]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 48]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 47]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 14, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 15]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 21]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 17]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 19, 20]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 20]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 21]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 9, 15]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 18, 19]
    }
    location {
      path: [4, 0, 2, 2]
      span: [13, 2, 17]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [13, 2, 12, 20]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [13, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [13, 9, 12]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [13, 15, 16]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "identity/pass/Pass.proto"
  package: "identity.pass"
  dependency: "identity/pass/PassKey.proto"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "Pass"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.pass.PassKey"
      json_name: "key"
    }
    field {
      name: "token"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "token"
    }
    field {
      name: "uri"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uri"
    }
    field {
      name: "active"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "active"
    }
    field {
      name: "issued"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "issued"
    }
    field {
      name: "suspended"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "suspended"
    }
  }
  options {
    java_package: "io.bloombox.schema.pass"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 20, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 21]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 48]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 48]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 47]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 36]
    }
    location {
      path: [3, 1]
      span: [10, 7, 31]
    }
    location {
      path: [4, 0]
      span: [13, 0, 20, 1]
    }
    location {
      path: [4, 0, 1]
      span: [13, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [14, 2, 18]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [14, 2, 13, 14]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [14, 2, 9]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [14, 10, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [14, 16, 17]
    }
    location {
      path: [4, 0, 2, 1]
      span: [15, 2, 19]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [15, 2, 14, 18]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [15, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [15, 9, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [15, 17, 18]
    }
    location {
      path: [4, 0, 2, 2]
      span: [16, 2, 17]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [16, 2, 15, 19]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [16, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [16, 9, 12]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [16, 15, 16]
    }
    location {
      path: [4, 0, 2, 3]
      span: [17, 2, 18]
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [17, 2, 16, 17]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [17, 2, 6]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [17, 7, 13]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [17, 16, 17]
    }
    location {
      path: [4, 0, 2, 4]
      span: [18, 2, 30]
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [18, 2, 17, 18]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [18, 2, 18]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [18, 19, 25]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [18, 28, 29]
    }
    location {
      path: [4, 0, 2, 5]
      span: [19, 2, 33]
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [19, 2, 18, 30]
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [19, 2, 18]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [19, 19, 28]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [19, 31, 32]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "partner/Partner.proto"
  package: "partner"
  dependency: "bq_field.proto"
  dependency: "media/MediaItem.proto"
  dependency: "temporal/Instant.proto"
  dependency: "contact/ContactInfo.proto"
  message_type {
    name: "PartnerKey"
    field {
      name: "code"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Short string that uniquely identifies a partner organization."
      }
      json_name: "code"
    }
  }
  message_type {
    name: "Partner"
    field {
      name: "code"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Short string that uniquely identifies this partner organization."
      }
      json_name: "code"
    }
    field {
      name: "name"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Full human-readable label for this partner organization."
      }
      json_name: "name"
    }
    field {
      name: "flags"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerFlags"
      options {
        1025: "Flags for various things about this partner account."
      }
      json_name: "flags"
    }
    field {
      name: "legal_name"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Legal name of the partner organization."
      }
      json_name: "legalName"
    }
    field {
      name: "contact"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".contact.ContactInfo"
      options {
        1025: "Contact information for this organization."
      }
      json_name: "contact"
    }
    field {
      name: "branding"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.MediaItem"
      options {
        1025: "Branding information for this organization."
      }
      json_name: "branding"
    }
    field {
      name: "channel"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".partner.PartnerChannel"
      options {
        1025: "Channel through which this partner organization interacts with Bloombox."
      }
      json_name: "channel"
    }
    field {
      name: "created"
      number: 100
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this record was created."
      }
      json_name: "created"
    }
    field {
      name: "modified"
      number: 101
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this record was last modified."
      }
      json_name: "modified"
    }
  }
  message_type {
    name: "PartnerFlags"
    field {
      name: "suspended"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies that the subject partner organization is currently suspended, organization wide, and has had access revoked to Bloombox systems."
      }
      json_name: "suspended"
    }
    field {
      name: "pastdue"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies that the subject partner organiztaion is currently in a past-due state, where their organization and related access has been heavily restricted."
      }
      json_name: "pastdue"
    }
    field {
      name: "beta"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies that the subject partner organization has access to beta features, clusters, and systems."
      }
      json_name: "beta"
    }
    field {
      name: "sandbox"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies that the subject partner organization has internal sandbox access."
      }
      json_name: "sandbox"
    }
    field {
      name: "internal"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies that the subject partner organization is a testing account held and managed internally by Bloombox, or by selected partners."
      }
      json_name: "internal"
    }
  }
  enum_type {
    name: "PartnerChannel"
    value {
      name: "DIRECT"
      number: 0
    }
  }
  options {
    java_package: "io.bloombox.schema.partner"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 112, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 30]
    }
    location {
      path: [3, 2]
      span: [12, 7, 31]
    }
    location {
      path: [3, 3]
      span: [13, 7, 34]
    }
    location {
      path: [4, 0]
      span: [17, 0, 22, 1]
      leading_comments: " Specifies a key that references a partner organization, with an account opened at Bloombox.\n"
    }
    location {
      path: [4, 0, 1]
      span: [17, 8, 18]
    }
    location {
      path: [4, 0, 2, 0]
      span: [19, 2, 21, 4]
      leading_comments: " Short string that uniquely identifies a partner organization.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [19, 2, 17, 20]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [19, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [19, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [19, 16, 17]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [19, 18, 21, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [20, 4, 97]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [20, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [20, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [20, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [20, 34, 97]
    }
    location {
      path: [4, 1]
      span: [28, 0, 73, 1]
      leading_comments: " Specifies information about a partner organization that has an account opened with Bloombox. A partner can own/manage\n multiple `Location`s, and is identified uniquely by a short `code`, which is a lowercase string suitable for use in\n a URL as a slug.\n"
    }
    location {
      path: [4, 1, 1]
      span: [28, 8, 15]
    }
    location {
      path: [4, 1, 2, 0]
      span: [30, 2, 32, 4]
      leading_comments: " Short string that uniquely identifies this partner organization.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [30, 2, 28, 17]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [30, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [30, 9, 13]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [30, 16, 17]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [30, 18, 32, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [31, 4, 100]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [31, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [31, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [31, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [31, 34, 100]
    }
    location {
      path: [4, 1, 2, 1]
      span: [35, 2, 37, 4]
      leading_comments: " Full human-readable label for this partner organization.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [35, 2, 32, 4]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [35, 2, 8]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [35, 9, 13]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [35, 16, 17]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [35, 18, 37, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [36, 4, 92]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [36, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [36, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [36, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [36, 34, 92]
    }
    location {
      path: [4, 1, 2, 2]
      span: [40, 2, 42, 4]
      leading_comments: " Flags for various things about this partner account.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [40, 2, 37, 4]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [40, 2, 14]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [40, 15, 20]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [40, 23, 24]
    }
    location {
      path: [4, 1, 2, 2, 8]
      span: [40, 25, 42, 3]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0]
      span: [41, 4, 88]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2]
      span: [41, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0]
      span: [41, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [41, 5, 30]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 7]
      span: [41, 34, 88]
    }
    location {
      path: [4, 1, 2, 3]
      span: [45, 2, 47, 4]
      leading_comments: " Legal name of the partner organization.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [45, 2, 42, 4]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [45, 2, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [45, 9, 19]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [45, 22, 23]
    }
    location {
      path: [4, 1, 2, 3, 8]
      span: [45, 24, 47, 3]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0]
      span: [46, 4, 75]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2]
      span: [46, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0]
      span: [46, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [46, 5, 30]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 7]
      span: [46, 34, 75]
    }
    location {
      path: [4, 1, 2, 4]
      span: [50, 2, 52, 4]
      leading_comments: " Contact information for this organization.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [50, 2, 47, 4]
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [50, 2, 21]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [50, 22, 29]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [50, 32, 33]
    }
    location {
      path: [4, 1, 2, 4, 8]
      span: [50, 34, 52, 3]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0]
      span: [51, 4, 78]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2]
      span: [51, 4, 31]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0]
      span: [51, 4, 31]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [51, 5, 30]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 7]
      span: [51, 34, 78]
    }
    location {
      path: [4, 1, 2, 5]
      span: [55, 2, 57, 4]
      leading_comments: " Branding information for this organization.\n"
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [55, 2, 52, 4]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [55, 2, 17]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [55, 18, 26]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [55, 29, 30]
    }
    location {
      path: [4, 1, 2, 5, 8]
      span: [55, 31, 57, 3]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0]
      span: [56, 4, 79]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2]
      span: [56, 4, 31]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2, 0]
      span: [56, 4, 31]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [56, 5, 30]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 7]
      span: [56, 34, 79]
    }
    location {
      path: [4, 1, 2, 6]
      span: [60, 2, 62, 4]
      leading_comments: " Channel through which this partner organization interacts with Bloombox.\n"
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [60, 2, 57, 4]
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [60, 2, 16]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [60, 17, 24]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [60, 27, 28]
    }
    location {
      path: [4, 1, 2, 6, 8]
      span: [60, 29, 62, 3]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0]
      span: [61, 4, 108]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2]
      span: [61, 4, 31]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2, 0]
      span: [61, 4, 31]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2, 0, 1]
      span: [61, 5, 30]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 7]
      span: [61, 34, 108]
    }
    location {
      path: [4, 1, 2, 7]
      span: [65, 2, 67, 4]
      leading_comments: " Timestamp for when this record was created.\n"
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [65, 2, 62, 4]
    }
    location {
      path: [4, 1, 2, 7, 6]
      span: [65, 2, 18]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [65, 19, 26]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [65, 29, 32]
    }
    location {
      path: [4, 1, 2, 7, 8]
      span: [65, 33, 67, 3]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0]
      span: [66, 4, 79]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2]
      span: [66, 4, 31]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2, 0]
      span: [66, 4, 31]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2, 0, 1]
      span: [66, 5, 30]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 7]
      span: [66, 34, 79]
    }
    location {
      path: [4, 1, 2, 8]
      span: [70, 2, 72, 4]
      leading_comments: " Timestamp for when this record was last modified.\n"
    }
    location {
      path: [4, 1, 2, 8, 4]
      span: [70, 2, 67, 4]
    }
    location {
      path: [4, 1, 2, 8, 6]
      span: [70, 2, 18]
    }
    location {
      path: [4, 1, 2, 8, 1]
      span: [70, 19, 27]
    }
    location {
      path: [4, 1, 2, 8, 3]
      span: [70, 30, 33]
    }
    location {
      path: [4, 1, 2, 8, 8]
      span: [70, 34, 72, 3]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0]
      span: [71, 4, 85]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2]
      span: [71, 4, 31]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2, 0]
      span: [71, 4, 31]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2, 0, 1]
      span: [71, 5, 30]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 7]
      span: [71, 34, 85]
    }
    location {
      path: [4, 2]
      span: [77, 0, 105, 1]
      leading_comments: " Specifies flags that may be set on a partner organization account.\n"
    }
    location {
      path: [4, 2, 1]
      span: [77, 8, 20]
    }
    location {
      path: [4, 2, 2, 0]
      span: [80, 2, 82, 4]
      leading_comments: " Specifies that the subject partner organization is currently suspended, organization wide, and has had access\n revoked to Bloombox systems.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [80, 2, 77, 22]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [80, 2, 6]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [80, 7, 16]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [80, 19, 20]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [80, 21, 82, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [81, 4, 174]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [81, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [81, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [81, 5, 30]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 7]
      span: [81, 34, 174]
    }
    location {
      path: [4, 2, 2, 1]
      span: [86, 2, 88, 4]
      leading_comments: " Specifies that the subject partner organiztaion is currently in a past-due state, where their organization and\n related access has been heavily restricted.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [86, 2, 82, 4]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [86, 2, 6]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [86, 7, 14]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [86, 17, 18]
    }
    location {
      path: [4, 2, 2, 1, 8]
      span: [86, 19, 88, 3]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0]
      span: [87, 4, 190]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2]
      span: [87, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0]
      span: [87, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [87, 5, 30]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 7]
      span: [87, 34, 190]
    }
    location {
      path: [4, 2, 2, 2]
      span: [91, 2, 93, 4]
      leading_comments: " Specifies that the subject partner organization has access to beta features, clusters, and systems.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [91, 2, 88, 4]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [91, 2, 6]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [91, 7, 11]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [91, 14, 15]
    }
    location {
      path: [4, 2, 2, 2, 8]
      span: [91, 16, 93, 3]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0]
      span: [92, 4, 135]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2]
      span: [92, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0]
      span: [92, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [92, 5, 30]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 7]
      span: [92, 34, 135]
    }
    location {
      path: [4, 2, 2, 3]
      span: [96, 2, 98, 4]
      leading_comments: " Specifies that the subject partner organization has internal sandbox access.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [96, 2, 93, 4]
    }
    location {
      path: [4, 2, 2, 3, 5]
      span: [96, 2, 6]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [96, 7, 14]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [96, 17, 18]
    }
    location {
      path: [4, 2, 2, 3, 8]
      span: [96, 19, 98, 3]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0]
      span: [97, 4, 112]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2]
      span: [97, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0]
      span: [97, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [97, 5, 30]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 7]
      span: [97, 34, 112]
    }
    location {
      path: [4, 2, 2, 4]
      span: [102, 2, 104, 4]
      leading_comments: " Specifies that the subject partner organization is a testing account held and managed internally by Bloombox, or\n by selected partners.\n"
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [102, 2, 98, 4]
    }
    location {
      path: [4, 2, 2, 4, 5]
      span: [102, 2, 6]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [102, 7, 15]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [102, 18, 19]
    }
    location {
      path: [4, 2, 2, 4, 8]
      span: [102, 20, 104, 3]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0]
      span: [103, 4, 170]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2]
      span: [103, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0]
      span: [103, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [103, 5, 30]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 7]
      span: [103, 34, 170]
    }
    location {
      path: [5, 0]
      span: [109, 0, 112, 1]
      leading_comments: " Channel through which a partner interacts with Bloombox.\n"
    }
    location {
      path: [5, 0, 1]
      span: [109, 5, 19]
    }
    location {
      path: [5, 0, 2, 0]
      span: [111, 2, 13]
      leading_comments: " Direct customers of Bloombox.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [111, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [111, 11, 12]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "device/Device.proto"
  package: "device"
  dependency: "bq_field.proto"
  message_type {
    name: "Device"
    field {
      name: "uuid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Universally unique identifier for this device."
      }
      json_name: "uuid"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".device.DeviceType"
      options {
        1025: "Type of this device."
      }
      json_name: "type"
    }
    field {
      name: "flags"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".device.DeviceFlags"
      options {
        1025: "Flags for this device."
      }
      json_name: "flags"
    }
    field {
      name: "key"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".device.DeviceCredentials"
      options {
        1025: "Credentials for this device."
      }
      json_name: "key"
    }
  }
  message_type {
    name: "DeviceFlags"
    field {
      name: "ephemeral"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Flag to mark a device as ephemeral, i.e. attached to a disposable identity."
      }
      json_name: "ephemeral"
    }
    field {
      name: "managed"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Flag to mark a device as managed by EMM systems."
      }
      json_name: "managed"
    }
  }
  message_type {
    name: "DeviceCredentials"
    field {
      name: "public_key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      options {
        1024: 1
      }
      json_name: "publicKey"
    }
    field {
      name: "private_key"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BYTES
      options {
        1024: 1
      }
      json_name: "privateKey"
    }
    field {
      name: "sha256"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "SHA256 hash of this device's public key."
      }
      json_name: "sha256"
    }
    field {
      name: "identity"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1024: 1
      }
      json_name: "identity"
    }
    field {
      name: "authorities"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_BYTES
      options {
        1024: 1
      }
      json_name: "authorities"
    }
  }
  enum_type {
    name: "DeviceType"
    value {
      name: "UNKNOWN_DEVICE_TYPE"
      number: 0
    }
    value {
      name: "DESKTOP"
      number: 1
    }
    value {
      name: "PHONE"
      number: 2
    }
    value {
      name: "TABLET"
      number: 3
    }
    value {
      name: "TV"
      number: 4
    }
  }
  options {
    java_package: "io.bloombox.schema.device"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 95, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 14]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 50]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 50]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 49]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [5, 0]
      span: [13, 0, 28, 1]
      leading_comments: " Enumerates major types of devices that might be encountered, including desktops, phones, tablets, TVs, and browsers.\n"
    }
    location {
      path: [5, 0, 1]
      span: [13, 5, 15]
    }
    location {
      path: [5, 0, 2, 0]
      span: [15, 2, 26]
      leading_comments: " The end-device type is not known.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [15, 2, 21]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [15, 24, 25]
    }
    location {
      path: [5, 0, 2, 1]
      span: [18, 2, 14]
      leading_comments: " The end-device is a desktop of some kind.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [18, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [18, 12, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [21, 2, 12]
      leading_comments: " The end-device is a phone.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [21, 2, 7]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [21, 10, 11]
    }
    location {
      path: [5, 0, 2, 3]
      span: [24, 2, 13]
      leading_comments: " The end-device is a tablet.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [24, 2, 8]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [24, 11, 12]
    }
    location {
      path: [5, 0, 2, 4]
      span: [27, 2, 9]
      leading_comments: " The end-device is a TV of some kind.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [27, 2, 4]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [27, 7, 8]
    }
    location {
      path: [4, 0]
      span: [32, 0, 52, 1]
      leading_comments: " Specifies a structure that describes a known device.\n"
    }
    location {
      path: [4, 0, 1]
      span: [32, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [34, 2, 36, 4]
      leading_comments: " Universally unique identifier for this device.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [34, 2, 32, 16]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [34, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [34, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [34, 16, 17]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [34, 18, 36, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [35, 4, 82]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [35, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [35, 34, 82]
    }
    location {
      path: [4, 0, 2, 1]
      span: [39, 2, 41, 4]
      leading_comments: " Type of this device.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [39, 2, 36, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [39, 2, 12]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [39, 13, 17]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [39, 20, 21]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [39, 22, 41, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [40, 4, 56]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [40, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [40, 34, 56]
    }
    location {
      path: [4, 0, 2, 2]
      span: [44, 2, 46, 4]
      leading_comments: " Flags for this device.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [44, 2, 41, 4]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [44, 2, 13]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [44, 14, 19]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [44, 22, 23]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [44, 24, 46, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [45, 4, 58]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [45, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [45, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [45, 34, 58]
    }
    location {
      path: [4, 0, 2, 3]
      span: [49, 2, 51, 4]
      leading_comments: " Credentials for this device.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [49, 2, 46, 4]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [49, 2, 19]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [49, 20, 23]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [49, 26, 27]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [49, 28, 51, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [50, 4, 64]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [50, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [50, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [50, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [50, 34, 64]
    }
    location {
      path: [4, 1]
      span: [56, 0, 66, 1]
      leading_comments: " Stateful flags that may be set on a device.\n"
    }
    location {
      path: [4, 1, 1]
      span: [56, 8, 19]
    }
    location {
      path: [4, 1, 2, 0]
      span: [58, 2, 60, 4]
      leading_comments: " Flag to mark a device as ephemeral, i.e. attached to a disposable identity.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [58, 2, 56, 21]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [58, 2, 6]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [58, 7, 16]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [58, 19, 20]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [58, 21, 60, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [59, 4, 111]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [59, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [59, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [59, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [59, 34, 111]
    }
    location {
      path: [4, 1, 2, 1]
      span: [63, 2, 65, 4]
      leading_comments: " Flag to mark a device as managed by EMM systems.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [63, 2, 60, 4]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [63, 2, 6]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [63, 7, 14]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [63, 17, 18]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [63, 19, 65, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [64, 4, 84]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [64, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [64, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [64, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [64, 34, 84]
    }
    location {
      path: [4, 2]
      span: [70, 0, 95, 1]
      leading_comments: " Credentials that assert a device's identity or authorization.\n"
    }
    location {
      path: [4, 2, 1]
      span: [70, 8, 25]
    }
    location {
      path: [4, 2, 2, 0]
      span: [72, 2, 74, 4]
      leading_comments: " Raw bytes for a device's public key.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [72, 2, 70, 27]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [72, 2, 7]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [72, 8, 18]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [72, 21, 22]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [72, 23, 74, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [73, 4, 33]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [73, 4, 26]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [73, 4, 26]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [73, 5, 25]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 3]
      span: [73, 29, 33]
    }
    location {
      path: [4, 2, 2, 1]
      span: [77, 2, 79, 4]
      leading_comments: " Raw bytes for the device's private key.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [77, 2, 74, 4]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [77, 2, 7]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [77, 8, 19]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [77, 22, 23]
    }
    location {
      path: [4, 2, 2, 1, 8]
      span: [77, 24, 79, 3]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0]
      span: [78, 4, 33]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2]
      span: [78, 4, 26]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0]
      span: [78, 4, 26]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [78, 5, 25]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 3]
      span: [78, 29, 33]
    }
    location {
      path: [4, 2, 2, 2]
      span: [82, 2, 84, 4]
      leading_comments: " SHA256 hash of this device's public key.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [82, 2, 79, 4]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [82, 2, 8]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [82, 9, 15]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [82, 18, 19]
    }
    location {
      path: [4, 2, 2, 2, 8]
      span: [82, 20, 84, 3]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0]
      span: [83, 4, 76]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2]
      span: [83, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0]
      span: [83, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [83, 5, 30]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 7]
      span: [83, 34, 76]
    }
    location {
      path: [4, 2, 2, 3]
      span: [87, 2, 89, 4]
      leading_comments: " A device's raw identity payload.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [87, 2, 84, 4]
    }
    location {
      path: [4, 2, 2, 3, 5]
      span: [87, 2, 8]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [87, 9, 17]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [87, 20, 21]
    }
    location {
      path: [4, 2, 2, 3, 8]
      span: [87, 22, 89, 3]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0]
      span: [88, 4, 33]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2]
      span: [88, 4, 26]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0]
      span: [88, 4, 26]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [88, 5, 25]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 3]
      span: [88, 29, 33]
    }
    location {
      path: [4, 2, 2, 4]
      span: [92, 2, 94, 4]
      leading_comments: " Repeated PEM authority payloads, asserted as trusted by the server.\n"
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [92, 2, 10]
    }
    location {
      path: [4, 2, 2, 4, 5]
      span: [92, 11, 16]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [92, 17, 28]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [92, 31, 32]
    }
    location {
      path: [4, 2, 2, 4, 8]
      span: [92, 33, 94, 3]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0]
      span: [93, 4, 33]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2]
      span: [93, 4, 26]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0]
      span: [93, 4, 26]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [93, 5, 25]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 3]
      span: [93, 29, 33]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "partner/PartnerLocation.proto"
  package: "partner"
  dependency: "bq_field.proto"
  dependency: "partner/Partner.proto"
  dependency: "media/MediaItem.proto"
  dependency: "temporal/Instant.proto"
  dependency: "contact/ContactInfo.proto"
  message_type {
    name: "PartnerLocationKey"
    field {
      name: "partner"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerKey"
      options {
        1025: "Specifies the partner that owns this location."
      }
      json_name: "partner"
    }
    field {
      name: "code"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Short string that uniquely identifies this location, under a given partner account."
      }
      json_name: "code"
    }
  }
  message_type {
    name: "PartnerLocation"
    field {
      name: "code"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Short, unique string that identifies this location, scoped to the parent organization."
      }
      json_name: "code"
    }
    field {
      name: "partner"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.Partner"
      options {
        1024: 1
      }
      json_name: "partner"
    }
    field {
      name: "name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Name of this location, in human-readable verbose form."
      }
      json_name: "name"
    }
    field {
      name: "label"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Label for this location in the administrative dashboard. If this is not specified, `name` is shown."
      }
      json_name: "label"
    }
    field {
      name: "flags"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerFlags"
      options {
        1025: "Flags that specify conditions applied to this partner location."
      }
      json_name: "flags"
    }
    field {
      name: "contact"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".contact.ContactInfo"
      options {
        1025: "Contact information for this location."
      }
      json_name: "contact"
    }
    field {
      name: "branding"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".media.MediaItem"
      options {
        1025: "Branding specific to this location. Partner-level branding is used if this is left unspecified."
      }
      json_name: "branding"
    }
    field {
      name: "created"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this record was created."
      }
      json_name: "created"
    }
    field {
      name: "modified"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1025: "Timestamp for when this record was last modified."
      }
      json_name: "modified"
    }
  }
  options {
    java_package: "io.bloombox.schema.partner"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 78, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 23]
    }
    location {
      path: [3, 1]
      span: [11, 7, 30]
    }
    location {
      path: [3, 2]
      span: [12, 7, 30]
    }
    location {
      path: [3, 3]
      span: [13, 7, 31]
    }
    location {
      path: [3, 4]
      span: [14, 7, 34]
    }
    location {
      path: [4, 0]
      span: [18, 0, 28, 1]
      leading_comments: " Specifies a key that references a location owned by a partner organization that has an active account with Bloombox.\n"
    }
    location {
      path: [4, 0, 1]
      span: [18, 8, 26]
    }
    location {
      path: [4, 0, 2, 0]
      span: [20, 2, 22, 4]
      leading_comments: " Specifies the partner that owns this location.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [20, 2, 18, 28]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [20, 2, 20]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [20, 21, 28]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [20, 31, 32]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [20, 33, 22, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [21, 4, 82]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [21, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [21, 34, 82]
    }
    location {
      path: [4, 0, 2, 1]
      span: [25, 2, 27, 4]
      leading_comments: " Short string that uniquely identifies this location, under a given partner account.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [25, 2, 22, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [25, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [25, 9, 13]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [25, 16, 17]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [25, 18, 27, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [26, 4, 119]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [26, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [26, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [26, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [26, 34, 119]
    }
    location {
      path: [4, 1]
      span: [33, 0, 78, 1]
      leading_comments: " Specifies information about a brick-and-mortar location owned by a partner organization that has an active account\n with Bloombox.\n"
    }
    location {
      path: [4, 1, 1]
      span: [33, 8, 23]
    }
    location {
      path: [4, 1, 2, 0]
      span: [35, 2, 37, 4]
      leading_comments: " Short, unique string that identifies this location, scoped to the parent organization.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [35, 2, 33, 25]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [35, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [35, 9, 13]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [35, 16, 17]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [35, 18, 37, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [36, 4, 122]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [36, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [36, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [36, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [36, 34, 122]
    }
    location {
      path: [4, 1, 2, 1]
      span: [40, 2, 42, 4]
      leading_comments: " Partner record that owns this location.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [40, 2, 37, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [40, 2, 17]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [40, 18, 25]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [40, 28, 29]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [40, 30, 42, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [41, 4, 33]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [41, 4, 26]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [41, 4, 26]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [41, 5, 25]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 3]
      span: [41, 29, 33]
    }
    location {
      path: [4, 1, 2, 2]
      span: [45, 2, 47, 4]
      leading_comments: " Name of this location, in human-readable verbose form.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [45, 2, 42, 4]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [45, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [45, 9, 13]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [45, 16, 17]
    }
    location {
      path: [4, 1, 2, 2, 8]
      span: [45, 18, 47, 3]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0]
      span: [46, 4, 90]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2]
      span: [46, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0]
      span: [46, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [46, 5, 30]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 7]
      span: [46, 34, 90]
    }
    location {
      path: [4, 1, 2, 3]
      span: [50, 2, 52, 4]
      leading_comments: " Label for this location in the administrative dashboard. If this is not specified, `name` is shown.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [50, 2, 47, 4]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [50, 2, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [50, 9, 14]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [50, 17, 18]
    }
    location {
      path: [4, 1, 2, 3, 8]
      span: [50, 19, 52, 3]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0]
      span: [51, 4, 135]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2]
      span: [51, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0]
      span: [51, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [51, 5, 30]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 7]
      span: [51, 34, 135]
    }
    location {
      path: [4, 1, 2, 4]
      span: [55, 2, 57, 4]
      leading_comments: " Flags that specify conditions applied to this partner location.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [55, 2, 52, 4]
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [55, 2, 22]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [55, 23, 28]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [55, 31, 32]
    }
    location {
      path: [4, 1, 2, 4, 8]
      span: [55, 33, 57, 3]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0]
      span: [56, 4, 99]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2]
      span: [56, 4, 31]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0]
      span: [56, 4, 31]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [56, 5, 30]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 7]
      span: [56, 34, 99]
    }
    location {
      path: [4, 1, 2, 5]
      span: [60, 2, 62, 4]
      leading_comments: " Contact information for this location.\n"
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [60, 2, 57, 4]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [60, 2, 21]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [60, 22, 29]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [60, 32, 33]
    }
    location {
      path: [4, 1, 2, 5, 8]
      span: [60, 34, 62, 3]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0]
      span: [61, 4, 74]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2]
      span: [61, 4, 31]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2, 0]
      span: [61, 4, 31]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [61, 5, 30]
    }
    location {
      path: [4, 1, 2, 5, 8, 999, 0, 7]
      span: [61, 34, 74]
    }
    location {
      path: [4, 1, 2, 6]
      span: [65, 2, 67, 4]
      leading_comments: " Branding specific to this location. Partner-level branding is used if this is left unspecified.\n"
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [65, 2, 62, 4]
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [65, 2, 17]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [65, 18, 26]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [65, 29, 30]
    }
    location {
      path: [4, 1, 2, 6, 8]
      span: [65, 31, 67, 3]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0]
      span: [66, 4, 131]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2]
      span: [66, 4, 31]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2, 0]
      span: [66, 4, 31]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 2, 0, 1]
      span: [66, 5, 30]
    }
    location {
      path: [4, 1, 2, 6, 8, 999, 0, 7]
      span: [66, 34, 131]
    }
    location {
      path: [4, 1, 2, 7]
      span: [70, 2, 72, 4]
      leading_comments: " Timestamp for when this record was created.\n"
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [70, 2, 67, 4]
    }
    location {
      path: [4, 1, 2, 7, 6]
      span: [70, 2, 18]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [70, 19, 26]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [70, 29, 30]
    }
    location {
      path: [4, 1, 2, 7, 8]
      span: [70, 31, 72, 3]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0]
      span: [71, 4, 79]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2]
      span: [71, 4, 31]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2, 0]
      span: [71, 4, 31]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 2, 0, 1]
      span: [71, 5, 30]
    }
    location {
      path: [4, 1, 2, 7, 8, 999, 0, 7]
      span: [71, 34, 79]
    }
    location {
      path: [4, 1, 2, 8]
      span: [75, 2, 77, 4]
      leading_comments: " Timestamp for when this record was last modified.\n"
    }
    location {
      path: [4, 1, 2, 8, 4]
      span: [75, 2, 72, 4]
    }
    location {
      path: [4, 1, 2, 8, 6]
      span: [75, 2, 18]
    }
    location {
      path: [4, 1, 2, 8, 1]
      span: [75, 19, 27]
    }
    location {
      path: [4, 1, 2, 8, 3]
      span: [75, 30, 31]
    }
    location {
      path: [4, 1, 2, 8, 8]
      span: [75, 32, 77, 3]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0]
      span: [76, 4, 85]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2]
      span: [76, 4, 31]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2, 0]
      span: [76, 4, 31]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 2, 0, 1]
      span: [76, 5, 30]
    }
    location {
      path: [4, 1, 2, 8, 8, 999, 0, 7]
      span: [76, 34, 85]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "partner/PartnerDevice.proto"
  package: "partner"
  dependency: "device/Device.proto"
  dependency: "partner/Partner.proto"
  dependency: "partner/PartnerLocation.proto"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "PartnerDeviceKey"
    field {
      name: "location"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerLocationKey"
      json_name: "location"
    }
    field {
      name: "uuid"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uuid"
    }
  }
  message_type {
    name: "PartnerDevice"
    field {
      name: "uuid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uuid"
    }
    field {
      name: "partner"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.Partner"
      json_name: "partner"
    }
    field {
      name: "location"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerLocation"
      json_name: "location"
    }
    field {
      name: "type"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".partner.PartnerDeviceType"
      json_name: "type"
    }
    field {
      name: "flags"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerDeviceFlags"
      json_name: "flags"
    }
    field {
      name: "device"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".device.Device"
      json_name: "device"
    }
    field {
      name: "seen"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "seen"
    }
    field {
      name: "registered"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "registered"
    }
  }
  message_type {
    name: "PartnerDeviceFlags"
    field {
      name: "active"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "active"
    }
    field {
      name: "suspended"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "suspended"
    }
    field {
      name: "beta"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "beta"
    }
    field {
      name: "sandbox"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "sandbox"
    }
  }
  enum_type {
    name: "PartnerDeviceType"
    value {
      name: "UNSPECIFIED_DEVICE_TYPE"
      number: 0
    }
    value {
      name: "INTERNAL"
      number: 1
    }
    value {
      name: "MENU_TABLET"
      number: 10
    }
    value {
      name: "MENU_TV"
      number: 11
    }
    value {
      name: "CHECKIN_STATION"
      number: 20
    }
    value {
      name: "CHECKIN_TV"
      number: 21
    }
    value {
      name: "POS_REGISTER"
      number: 30
    }
  }
  options {
    java_package: "io.bloombox.schema.partner"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 56, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 28]
    }
    location {
      path: [3, 1]
      span: [10, 7, 30]
    }
    location {
      path: [3, 2]
      span: [11, 7, 38]
    }
    location {
      path: [3, 3]
      span: [12, 7, 31]
    }
    location {
      path: [5, 0]
      span: [15, 0, 30, 1]
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 22]
    }
    location {
      path: [5, 0, 2, 0]
      span: [16, 2, 30]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [16, 2, 25]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [16, 28, 29]
    }
    location {
      path: [5, 0, 2, 1]
      span: [18, 2, 15]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [18, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [18, 13, 14]
    }
    location {
      path: [5, 0, 2, 2]
      span: [21, 2, 19]
      leading_comments: " -- Menu Devices\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [21, 2, 13]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [21, 16, 18]
    }
    location {
      path: [5, 0, 2, 3]
      span: [22, 2, 15]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [22, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [22, 12, 14]
    }
    location {
      path: [5, 0, 2, 4]
      span: [25, 2, 23]
      leading_comments: " -- Checkin Devices\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [25, 2, 17]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [25, 20, 22]
    }
    location {
      path: [5, 0, 2, 5]
      span: [26, 2, 18]
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [26, 2, 12]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [26, 15, 17]
    }
    location {
      path: [5, 0, 2, 6]
      span: [29, 2, 20]
      leading_comments: " -- Point of Sale\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [29, 2, 14]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [29, 17, 19]
    }
    location {
      path: [4, 0]
      span: [33, 0, 36, 1]
    }
    location {
      path: [4, 0, 1]
      span: [33, 8, 24]
    }
    location {
      path: [4, 0, 2, 0]
      span: [34, 2, 42]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [34, 2, 33, 26]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [34, 2, 28]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [34, 29, 37]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [34, 40, 41]
    }
    location {
      path: [4, 0, 2, 1]
      span: [35, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [35, 2, 34, 42]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [35, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [35, 9, 13]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [35, 16, 17]
    }
    location {
      path: [4, 1]
      span: [39, 0, 48, 1]
    }
    location {
      path: [4, 1, 1]
      span: [39, 8, 21]
    }
    location {
      path: [4, 1, 2, 0]
      span: [40, 2, 18]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [40, 2, 39, 23]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [40, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [40, 9, 13]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [40, 16, 17]
    }
    location {
      path: [4, 1, 2, 1]
      span: [41, 2, 30]
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [41, 2, 40, 18]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [41, 2, 17]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [41, 18, 25]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [41, 28, 29]
    }
    location {
      path: [4, 1, 2, 2]
      span: [42, 2, 39]
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [42, 2, 41, 30]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [42, 2, 25]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [42, 26, 34]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [42, 37, 38]
    }
    location {
      path: [4, 1, 2, 3]
      span: [43, 2, 29]
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [43, 2, 42, 39]
    }
    location {
      path: [4, 1, 2, 3, 6]
      span: [43, 2, 19]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [43, 20, 24]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [43, 27, 28]
    }
    location {
      path: [4, 1, 2, 4]
      span: [44, 2, 31]
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [44, 2, 43, 29]
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [44, 2, 20]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [44, 21, 26]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [44, 29, 30]
    }
    location {
      path: [4, 1, 2, 5]
      span: [45, 2, 27]
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [45, 2, 44, 31]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [45, 2, 15]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [45, 16, 22]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [45, 25, 26]
    }
    location {
      path: [4, 1, 2, 6]
      span: [46, 2, 28]
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [46, 2, 45, 27]
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [46, 2, 18]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [46, 19, 23]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [46, 26, 27]
    }
    location {
      path: [4, 1, 2, 7]
      span: [47, 2, 34]
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [47, 2, 46, 28]
    }
    location {
      path: [4, 1, 2, 7, 6]
      span: [47, 2, 18]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [47, 19, 29]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [47, 32, 33]
    }
    location {
      path: [4, 2]
      span: [51, 0, 56, 1]
    }
    location {
      path: [4, 2, 1]
      span: [51, 8, 26]
    }
    location {
      path: [4, 2, 2, 0]
      span: [52, 2, 18]
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [52, 2, 51, 28]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [52, 2, 6]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [52, 7, 13]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [52, 16, 17]
    }
    location {
      path: [4, 2, 2, 1]
      span: [53, 2, 21]
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [53, 2, 52, 18]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [53, 2, 6]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [53, 7, 16]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [53, 19, 20]
    }
    location {
      path: [4, 2, 2, 2]
      span: [54, 2, 16]
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [54, 2, 53, 21]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [54, 2, 6]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [54, 7, 11]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [54, 14, 15]
    }
    location {
      path: [4, 2, 2, 3]
      span: [55, 2, 19]
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [55, 2, 54, 16]
    }
    location {
      path: [4, 2, 2, 3, 5]
      span: [55, 2, 6]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [55, 7, 14]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [55, 17, 18]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "partner/PartnerScope.proto"
  package: "partner"
  enum_type {
    name: "PartnerScope"
    value {
      name: "AUTH"
      number: 0
    }
    value {
      name: "CONTACT"
      number: 1
    }
    value {
      name: "DASHBOARD"
      number: 2
    }
    value {
      name: "MENU_DATA_READ"
      number: 10
    }
    value {
      name: "MENU_DATA_WRITE"
      number: 20
    }
    value {
      name: "SETTINGS"
      number: 50
    }
    value {
      name: "ACCESS"
      number: 51
    }
    value {
      name: "ADMIN"
      number: 100
    }
  }
  options {
    java_package: "io.bloombox.schema.partner"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 25, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 51]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 50]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [5, 0]
      span: [10, 0, 25, 1]
    }
    location {
      path: [5, 0, 1]
      span: [10, 5, 17]
    }
    location {
      path: [5, 0, 2, 0]
      span: [12, 2, 11]
      leading_comments: " - Basic\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [12, 2, 6]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [12, 9, 10]
    }
    location {
      path: [5, 0, 2, 1]
      span: [13, 2, 14]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [13, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [13, 12, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [14, 2, 16]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [14, 2, 11]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [14, 14, 15]
    }
    location {
      path: [5, 0, 2, 3]
      span: [17, 2, 22]
      leading_comments: " - Menus\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [17, 2, 16]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [17, 19, 21]
    }
    location {
      path: [5, 0, 2, 4]
      span: [18, 2, 23]
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [18, 2, 17]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [18, 20, 22]
    }
    location {
      path: [5, 0, 2, 5]
      span: [21, 2, 16]
      leading_comments: " - Special Scopes\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [21, 2, 10]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [21, 13, 15]
    }
    location {
      path: [5, 0, 2, 6]
      span: [22, 2, 14]
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [22, 2, 8]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [22, 11, 13]
    }
    location {
      path: [5, 0, 2, 7]
      span: [24, 2, 14]
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [24, 2, 7]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [24, 10, 13]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "security/AuthToken.proto"
  package: "security"
  message_type {
    name: "AuthToken"
    field {
      name: "encoded"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "encoded"
    }
  }
  options {
    java_package: "io.bloombox.schema.security"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 12, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 12, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 17]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 21]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 19]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 19, 20]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "security/DeviceToken.proto"
  package: "security"
  dependency: "device/Device.proto"
  dependency: "temporal/Instant.proto"
  dependency: "security/AuthToken.proto"
  message_type {
    name: "DeviceToken"
    field {
      name: "token"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".security.AuthToken"
      json_name: "token"
    }
    field {
      name: "device"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".device.Device"
      json_name: "device"
    }
    field {
      name: "issued"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "issued"
    }
    field {
      name: "expires"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "expires"
    }
  }
  options {
    java_package: "io.bloombox.schema.security"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 27, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 28]
    }
    location {
      path: [3, 1]
      span: [10, 7, 31]
    }
    location {
      path: [3, 2]
      span: [11, 7, 33]
    }
    location {
      path: [4, 0]
      span: [15, 0, 27, 1]
      leading_comments: " Specifies an auth token issued to a device, or some other machine-based actor.\n"
    }
    location {
      path: [4, 0, 1]
      span: [15, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [17, 2, 31]
      leading_comments: " Authentication token, usable by this device to authenticate to the API, etc.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [17, 2, 15, 21]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [17, 2, 20]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [17, 21, 26]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [17, 29, 30]
    }
    location {
      path: [4, 0, 2, 1]
      span: [20, 2, 27]
      leading_comments: " Information passed from the server to this device, including credentials, stateful flags, and so on.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [20, 2, 17, 31]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [20, 2, 15]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [20, 16, 22]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [20, 25, 26]
    }
    location {
      path: [4, 0, 2, 2]
      span: [23, 2, 30]
      leading_comments: " Issuance timestamp for this device token.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [23, 2, 20, 27]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [23, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [23, 19, 25]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [23, 28, 29]
    }
    location {
      path: [4, 0, 2, 3]
      span: [26, 2, 31]
      leading_comments: " Expiry timestamp for this device token.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [26, 2, 23, 30]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [26, 2, 18]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [26, 19, 26]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [26, 29, 30]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "security/IdentityToken.proto"
  package: "security"
  message_type {
    name: "IdentityToken"
    field {
      name: "uid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uid"
    }
    field {
      name: "encoded"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "encoded"
    }
    field {
      name: "issuer"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".security.IdentityTokenIssuer"
      json_name: "issuer"
    }
  }
  enum_type {
    name: "IdentityTokenIssuer"
    value {
      name: "INTERNAL"
      number: 0
    }
    value {
      name: "FIREBASE"
      number: 1
    }
    value {
      name: "AUTH0"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.security"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 21, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 14, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 23]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 12]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 15, 16]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 17]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 9, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 19, 20]
    }
    location {
      path: [4, 0, 2, 2]
      span: [13, 2, 33]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [13, 2, 12, 21]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [13, 2, 21]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [13, 22, 28]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [13, 31, 32]
    }
    location {
      path: [5, 0]
      span: [17, 0, 21, 1]
    }
    location {
      path: [5, 0, 1]
      span: [17, 5, 24]
    }
    location {
      path: [5, 0, 2, 0]
      span: [18, 2, 15]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [18, 2, 10]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [18, 13, 14]
    }
    location {
      path: [5, 0, 2, 1]
      span: [19, 2, 15]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [19, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [19, 13, 14]
    }
    location {
      path: [5, 0, 2, 2]
      span: [20, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [20, 2, 7]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [20, 10, 11]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "services/ServiceStatus.proto"
  package: "services"
  enum_type {
    name: "ServiceStatus"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "UP"
      number: 1
    }
    value {
      name: "DOWN"
      number: 2
    }
    value {
      name: "MAINTENANCE"
      number: 3
    }
  }
  options {
    java_package: "io.bloombox.schema.services"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 23, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [5, 0]
      span: [11, 0, 23, 1]
      leading_comments: " Specifies the status of this service in PING responses.\n"
    }
    location {
      path: [5, 0, 1]
      span: [11, 5, 18]
    }
    location {
      path: [5, 0, 2, 0]
      span: [13, 2, 14]
      leading_comments: " The state of the service is not known.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [13, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [13, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [16, 2, 9]
      leading_comments: " The service is up and functioning normally.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [16, 2, 4]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [16, 7, 8]
    }
    location {
      path: [5, 0, 2, 2]
      span: [19, 2, 11]
      leading_comments: " The service is down.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [19, 2, 6]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [19, 9, 10]
    }
    location {
      path: [5, 0, 2, 3]
      span: [22, 2, 18]
      leading_comments: " The service is under maintenance.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [22, 2, 13]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [22, 16, 17]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "google/api/http.proto"
  package: "google.api"
  message_type {
    name: "Http"
    field {
      name: "rules"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.api.HttpRule"
      json_name: "rules"
    }
  }
  message_type {
    name: "HttpRule"
    field {
      name: "selector"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "selector"
    }
    field {
      name: "get"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "get"
    }
    field {
      name: "put"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "put"
    }
    field {
      name: "post"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "post"
    }
    field {
      name: "delete"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "delete"
    }
    field {
      name: "patch"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "patch"
    }
    field {
      name: "custom"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.api.CustomHttpPattern"
      oneof_index: 0
      json_name: "custom"
    }
    field {
      name: "body"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "body"
    }
    field {
      name: "additional_bindings"
      number: 11
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.api.HttpRule"
      json_name: "additionalBindings"
    }
    oneof_decl {
      name: "pattern"
    }
  }
  message_type {
    name: "CustomHttpPattern"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "kind"
    }
    field {
      name: "path"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "path"
    }
  }
  options {
    java_package: "com.google.api"
    java_outer_classname: "HttpProto"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/googleapis/api/annotations;annotations"
    cc_enable_arenas: true
    objc_class_prefix: "GAPI"
  }
  source_code_info {
    location {
      span: [14, 0, 290, 1]
    }
    location {
      path: [12]
      span: [14, 0, 18]
      leading_detached_comments: " Copyright 2016 Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
    }
    location {
      path: [2]
      span: [16, 8, 18]
    }
    location {
      path: [8]
      span: [18, 0, 31]
    }
    location {
      path: [8, 999, 0]
      span: [18, 0, 31]
    }
    location {
      path: [8, 999, 0, 2]
      span: [18, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [18, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [18, 7, 23]
    }
    location {
      path: [8, 999, 0, 3]
      span: [18, 26, 30]
    }
    location {
      path: [8]
      span: [19, 0, 88]
    }
    location {
      path: [8, 999, 1]
      span: [19, 0, 88]
    }
    location {
      path: [8, 999, 1, 2]
      span: [19, 7, 17]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [19, 7, 17]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [19, 7, 17]
    }
    location {
      path: [8, 999, 1, 7]
      span: [19, 20, 87]
    }
    location {
      path: [8]
      span: [20, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [20, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [20, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [20, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [20, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [20, 29, 33]
    }
    location {
      path: [8]
      span: [21, 0, 42]
    }
    location {
      path: [8, 999, 3]
      span: [21, 0, 42]
    }
    location {
      path: [8, 999, 3, 2]
      span: [21, 7, 27]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [21, 7, 27]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [21, 7, 27]
    }
    location {
      path: [8, 999, 3, 7]
      span: [21, 30, 41]
    }
    location {
      path: [8]
      span: [22, 0, 39]
    }
    location {
      path: [8, 999, 4]
      span: [22, 0, 39]
    }
    location {
      path: [8, 999, 4, 2]
      span: [22, 7, 19]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [22, 7, 19]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [22, 7, 19]
    }
    location {
      path: [8, 999, 4, 7]
      span: [22, 22, 38]
    }
    location {
      path: [8]
      span: [23, 0, 34]
    }
    location {
      path: [8, 999, 5]
      span: [23, 0, 34]
    }
    location {
      path: [8, 999, 5, 2]
      span: [23, 7, 24]
    }
    location {
      path: [8, 999, 5, 2, 0]
      span: [23, 7, 24]
    }
    location {
      path: [8, 999, 5, 2, 0, 1]
      span: [23, 7, 24]
    }
    location {
      path: [8, 999, 5, 7]
      span: [23, 27, 33]
    }
    location {
      path: [4, 0]
      span: [29, 0, 34, 1]
      leading_comments: " Defines the HTTP configuration for a service. It contains a list of\n [HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method\n to one or more HTTP REST API methods.\n"
    }
    location {
      path: [4, 0, 1]
      span: [29, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [33, 2, 30]
      leading_comments: " A list of HTTP configuration rules that apply to individual API methods.\n\n **NOTE:** All service configuration rules follow \"last one wins\" order.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [33, 2, 10]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [33, 11, 19]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [33, 20, 25]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [33, 28, 29]
    }
    location {
      path: [4, 1]
      span: [242, 0, 281, 1]
      leading_comments: " `HttpRule` defines the mapping of an RPC method to one or more HTTP\n REST APIs.  The mapping determines what portions of the request\n message are populated from the path, query parameters, or body of\n the HTTP request.  The mapping is typically specified as an\n `google.api.http` annotation, see \"google/api/annotations.proto\"\n for details.\n\n The mapping consists of a field specifying the path template and\n method kind.  The path template can refer to fields in the request\n message, as in the example below which describes a REST GET\n operation on a resource collection of messages:\n\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http).get = \"/v1/messages/{message_id}/{sub.subfield}\";\n       }\n     }\n     message GetMessageRequest {\n       message SubMessage {\n         string subfield = 1;\n       }\n       string message_id = 1; // mapped to the URL\n       SubMessage sub = 2;    // `sub.subfield` is url-mapped\n     }\n     message Message {\n       string text = 1; // content of the resource\n     }\n\n The same http annotation can alternatively be expressed inside the\n `GRPC API Configuration` YAML file.\n\n     http:\n       rules:\n         - selector: <proto_package_name>.Messaging.GetMessage\n           get: /v1/messages/{message_id}/{sub.subfield}\n\n This definition enables an automatic, bidrectional mapping of HTTP\n JSON to RPC. Example:\n\n HTTP | RPC\n -----|-----\n `GET /v1/messages/123456/foo`  | `GetMessage(message_id: \"123456\" sub: SubMessage(subfield: \"foo\"))`\n\n In general, not only fields but also field paths can be referenced\n from a path pattern. Fields mapped to the path pattern cannot be\n repeated and must have a primitive (non-message) type.\n\n Any fields in the request message which are not bound by the path\n pattern automatically become (optional) HTTP query\n parameters. Assume the following definition of the request message:\n\n\n     message GetMessageRequest {\n       message SubMessage {\n         string subfield = 1;\n       }\n       string message_id = 1; // mapped to the URL\n       int64 revision = 2;    // becomes a parameter\n       SubMessage sub = 3;    // `sub.subfield` becomes a parameter\n     }\n\n\n This enables a HTTP JSON to RPC mapping as below:\n\n HTTP | RPC\n -----|-----\n `GET /v1/messages/123456?revision=2&sub.subfield=foo` | `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield: \"foo\"))`\n\n Note that fields which are mapped to HTTP parameters must have a\n primitive type or a repeated primitive type. Message types are not\n allowed. In the case of a repeated type, the parameter can be\n repeated in the URL, as in `...?param=A&param=B`.\n\n For HTTP method kinds which allow a request body, the `body` field\n specifies the mapping. Consider a REST update method on the\n message resource collection:\n\n\n     service Messaging {\n       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           put: \"/v1/messages/{message_id}\"\n           body: \"message\"\n         };\n       }\n     }\n     message UpdateMessageRequest {\n       string message_id = 1; // mapped to the URL\n       Message message = 2;   // mapped to the body\n     }\n\n\n The following HTTP JSON to RPC mapping is enabled, where the\n representation of the JSON in the request body is determined by\n protos JSON encoding:\n\n HTTP | RPC\n -----|-----\n `PUT /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" message { text: \"Hi!\" })`\n\n The special name `*` can be used in the body mapping to define that\n every field not bound by the path template should be mapped to the\n request body.  This enables the following alternative definition of\n the update method:\n\n     service Messaging {\n       rpc UpdateMessage(Message) returns (Message) {\n         option (google.api.http) = {\n           put: \"/v1/messages/{message_id}\"\n           body: \"*\"\n         };\n       }\n     }\n     message Message {\n       string message_id = 1;\n       string text = 2;\n     }\n\n\n The following HTTP JSON to RPC mapping is enabled:\n\n HTTP | RPC\n -----|-----\n `PUT /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id: \"123456\" text: \"Hi!\")`\n\n Note that when using `*` in the body mapping, it is not possible to\n have HTTP parameters, as all fields not bound by the path end in\n the body. This makes this option more rarely used in practice of\n defining REST APIs. The common usage of `*` is in custom methods\n which don't use the URL at all for transferring data.\n\n It is possible to define multiple HTTP methods for one RPC by using\n the `additional_bindings` option. Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           get: \"/v1/messages/{message_id}\"\n           additional_bindings {\n             get: \"/v1/users/{user_id}/messages/{message_id}\"\n           }\n         };\n       }\n     }\n     message GetMessageRequest {\n       string message_id = 1;\n       string user_id = 2;\n     }\n\n\n This enables the following two alternative HTTP JSON to RPC\n mappings:\n\n HTTP | RPC\n -----|-----\n `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")`\n `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id: \"123456\")`\n\n # Rules for HTTP mapping\n\n The rules for mapping HTTP path, query parameters, and body fields\n to the request message are as follows:\n\n 1. The `body` field specifies either `*` or a field path, or is\n    omitted. If omitted, it assumes there is no HTTP body.\n 2. Leaf fields (recursive expansion of nested messages in the\n    request) can be classified into three types:\n     (a) Matched in the URL template.\n     (b) Covered by body (if body is `*`, everything except (a) fields;\n         else everything under the body field)\n     (c) All other fields.\n 3. URL query parameters found in the HTTP request are mapped to (c) fields.\n 4. Any body sent with an HTTP request can contain only (b) fields.\n\n The syntax of the path template is as follows:\n\n     Template = \"/\" Segments [ Verb ] ;\n     Segments = Segment { \"/\" Segment } ;\n     Segment  = \"*\" | \"**\" | LITERAL | Variable ;\n     Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ;\n     FieldPath = IDENT { \".\" IDENT } ;\n     Verb     = \":\" LITERAL ;\n\n The syntax `*` matches a single path segment. It follows the semantics of\n [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String\n Expansion.\n\n The syntax `**` matches zero or more path segments. It follows the semantics\n of [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.3 Reserved\n Expansion. NOTE: it must be the last segment in the path except the Verb.\n\n The syntax `LITERAL` matches literal text in the URL path.\n\n The syntax `Variable` matches the entire path as specified by its template;\n this nested template must not contain further variables. If a variable\n matches a single path segment, its template may be omitted, e.g. `{var}`\n is equivalent to `{var=*}`.\n\n NOTE: the field paths in variables and in the `body` must not refer to\n repeated fields or map fields.\n\n Use CustomHttpPattern to specify any HTTP method that is not included in the\n `pattern` field, such as HEAD, or \"*\" to leave the HTTP method unspecified for\n a given URL path rule. The wild-card rule is useful for services that provide\n content to Web (HTML) clients.\n"
    }
    location {
      path: [4, 1, 1]
      span: [242, 8, 16]
    }
    location {
      path: [4, 1, 2, 0]
      span: [246, 2, 22]
      leading_comments: " Selects methods to which this rule applies.\n\n Refer to [selector][google.api.DocumentationRule.selector] for syntax details.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [246, 2, 242, 18]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [246, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [246, 9, 17]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [246, 20, 21]
    }
    location {
      path: [4, 1, 8, 0]
      span: [251, 2, 269, 3]
      leading_comments: " Determines the URL pattern is matched by this rules. This pattern can be\n used with any of the {get|put|post|delete|patch} methods. A custom method\n can be defined using the 'custom' field.\n"
    }
    location {
      path: [4, 1, 8, 0, 1]
      span: [251, 8, 15]
    }
    location {
      path: [4, 1, 2, 1]
      span: [253, 4, 19]
      leading_comments: " Used for listing and getting information about resources.\n"
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [253, 4, 10]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [253, 11, 14]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [253, 17, 18]
    }
    location {
      path: [4, 1, 2, 2]
      span: [256, 4, 19]
      leading_comments: " Used for updating a resource.\n"
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [256, 4, 10]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [256, 11, 14]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [256, 17, 18]
    }
    location {
      path: [4, 1, 2, 3]
      span: [259, 4, 20]
      leading_comments: " Used for creating a resource.\n"
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [259, 4, 10]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [259, 11, 15]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [259, 18, 19]
    }
    location {
      path: [4, 1, 2, 4]
      span: [262, 4, 22]
      leading_comments: " Used for deleting a resource.\n"
    }
    location {
      path: [4, 1, 2, 4, 5]
      span: [262, 4, 10]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [262, 11, 17]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [262, 20, 21]
    }
    location {
      path: [4, 1, 2, 5]
      span: [265, 4, 21]
      leading_comments: " Used for updating a resource.\n"
    }
    location {
      path: [4, 1, 2, 5, 5]
      span: [265, 4, 10]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [265, 11, 16]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [265, 19, 20]
    }
    location {
      path: [4, 1, 2, 6]
      span: [268, 4, 33]
      leading_comments: " Custom pattern is used for defining custom verbs.\n"
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [268, 4, 21]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [268, 22, 28]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [268, 31, 32]
    }
    location {
      path: [4, 1, 2, 7]
      span: [275, 2, 18]
      leading_comments: " The name of the request field whose value is mapped to the HTTP body, or\n `*` for mapping all fields not captured by the path pattern to the HTTP\n body. NOTE: the referred field must not be a repeated field and must be\n present at the top-level of request message type.\n"
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [275, 2, 269, 3]
    }
    location {
      path: [4, 1, 2, 7, 5]
      span: [275, 2, 8]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [275, 9, 13]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [275, 16, 17]
    }
    location {
      path: [4, 1, 2, 8]
      span: [280, 2, 45]
      leading_comments: " Additional HTTP bindings for the selector. Nested bindings must\n not contain an `additional_bindings` field themselves (that is,\n the nesting may only be one level deep).\n"
    }
    location {
      path: [4, 1, 2, 8, 4]
      span: [280, 2, 10]
    }
    location {
      path: [4, 1, 2, 8, 6]
      span: [280, 11, 19]
    }
    location {
      path: [4, 1, 2, 8, 1]
      span: [280, 20, 39]
    }
    location {
      path: [4, 1, 2, 8, 3]
      span: [280, 42, 44]
    }
    location {
      path: [4, 2]
      span: [284, 0, 290, 1]
      leading_comments: " A custom pattern is used for defining custom HTTP verb.\n"
    }
    location {
      path: [4, 2, 1]
      span: [284, 8, 25]
    }
    location {
      path: [4, 2, 2, 0]
      span: [286, 2, 18]
      leading_comments: " The name of this custom HTTP verb.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [286, 2, 284, 27]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [286, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [286, 9, 13]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [286, 16, 17]
    }
    location {
      path: [4, 2, 2, 1]
      span: [289, 2, 18]
      leading_comments: " The path matched by this custom verb.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [289, 2, 286, 18]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [289, 2, 8]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [289, 9, 13]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [289, 16, 17]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "google/api/annotations.proto"
  package: "google.api"
  dependency: "google/api/http.proto"
  dependency: "google/protobuf/descriptor.proto"
  extension {
    name: "http"
    extendee: ".google.protobuf.MethodOptions"
    number: 72295728
    label: LABEL_OPTIONAL
    type: TYPE_MESSAGE
    type_name: ".google.api.HttpRule"
    json_name: "http"
  }
  options {
    java_package: "com.google.api"
    java_outer_classname: "AnnotationsProto"
    java_multiple_files: true
    go_package: "google.golang.org/genproto/googleapis/api/annotations;annotations"
    objc_class_prefix: "GAPI"
  }
  source_code_info {
    location {
      span: [14, 0, 30, 1]
    }
    location {
      path: [12]
      span: [14, 0, 18]
      leading_detached_comments: " Copyright (c) 2015, Google Inc.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
    }
    location {
      path: [2]
      span: [16, 8, 18]
    }
    location {
      path: [3, 0]
      span: [18, 7, 30]
    }
    location {
      path: [3, 1]
      span: [19, 7, 41]
    }
    location {
      path: [8]
      span: [21, 0, 88]
    }
    location {
      path: [8, 999, 0]
      span: [21, 0, 88]
    }
    location {
      path: [8, 999, 0, 2]
      span: [21, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [21, 7, 17]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [21, 7, 17]
    }
    location {
      path: [8, 999, 0, 7]
      span: [21, 20, 87]
    }
    location {
      path: [8]
      span: [22, 0, 34]
    }
    location {
      path: [8, 999, 1]
      span: [22, 0, 34]
    }
    location {
      path: [8, 999, 1, 2]
      span: [22, 7, 26]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [22, 7, 26]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [22, 7, 26]
    }
    location {
      path: [8, 999, 1, 3]
      span: [22, 29, 33]
    }
    location {
      path: [8]
      span: [23, 0, 49]
    }
    location {
      path: [8, 999, 2]
      span: [23, 0, 49]
    }
    location {
      path: [8, 999, 2, 2]
      span: [23, 7, 27]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [23, 7, 27]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [23, 7, 27]
    }
    location {
      path: [8, 999, 2, 7]
      span: [23, 30, 48]
    }
    location {
      path: [8]
      span: [24, 0, 39]
    }
    location {
      path: [8, 999, 3]
      span: [24, 0, 39]
    }
    location {
      path: [8, 999, 3, 2]
      span: [24, 7, 19]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [24, 7, 19]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [24, 7, 19]
    }
    location {
      path: [8, 999, 3, 7]
      span: [24, 22, 38]
    }
    location {
      path: [8]
      span: [25, 0, 34]
    }
    location {
      path: [8, 999, 4]
      span: [25, 0, 34]
    }
    location {
      path: [8, 999, 4, 2]
      span: [25, 7, 24]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [25, 7, 24]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [25, 7, 24]
    }
    location {
      path: [8, 999, 4, 7]
      span: [25, 27, 33]
    }
    location {
      path: [7]
      span: [27, 0, 30, 1]
    }
    location {
      path: [7, 0]
      span: [29, 2, 27]
      leading_comments: " See `HttpRule`.\n"
    }
    location {
      path: [7, 0, 2]
      span: [27, 7, 36]
    }
    location {
      path: [7, 0, 4]
      span: [29, 2, 27, 38]
    }
    location {
      path: [7, 0, 6]
      span: [29, 2, 10]
    }
    location {
      path: [7, 0, 1]
      span: [29, 11, 15]
    }
    location {
      path: [7, 0, 3]
      span: [29, 18, 26]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "pos/v1beta1/POSService.proto"
  package: "services.pos.v1beta1"
  dependency: "services/ServiceStatus.proto"
  dependency: "google/api/annotations.proto"
  message_type {
    name: "Ping"
    nested_type {
      name: "Request"
    }
    nested_type {
      name: "Response"
      field {
        name: "status"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.ServiceStatus"
        json_name: "status"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.pos.v1beta1.Ping.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.pos.v1beta1.Ping.Response"
        json_name: "response"
      }
    }
  }
  enum_type {
    name: "POSError"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "INVALID_COLLECTION"
      number: 1
    }
    value {
      name: "INVALID_PARTNER"
      number: 2
    }
    value {
      name: "INVALID_LOCATION"
      number: 3
    }
    value {
      name: "INVALID_DEVICE"
      number: 4
    }
    value {
      name: "PARTNER_NOT_FOUND"
      number: 5
    }
    value {
      name: "LOCATION_NOT_FOUND"
      number: 6
    }
    value {
      name: "INVALID_PAYLOAD"
      number: 99
    }
  }
  service {
    name: "PointOfSale"
    method {
      name: "Ping"
      input_type: ".services.pos.v1beta1.Ping.Request"
      output_type: ".services.pos.v1beta1.Ping.Response"
      options {
        72295728 {
          2: "/v1beta1/ping"
        }
      }
    }
  }
  options {
    java_package: "io.bloombox.schema.services.pos.v1beta1"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 69, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 28]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 64]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 64]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 63]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 37]
    }
    location {
      path: [3, 1]
      span: [10, 7, 37]
    }
    location {
      path: [5, 0]
      span: [14, 0, 38, 1]
      leading_comments: " Enumerated error states that may be served from the POS service.\n"
    }
    location {
      path: [5, 0, 1]
      span: [14, 5, 13]
    }
    location {
      path: [5, 0, 2, 0]
      span: [16, 2, 14]
      leading_comments: " An unknown internal error occurred.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [16, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [16, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [19, 2, 25]
      leading_comments: " The collection value was missing or found to be invalid.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [19, 2, 20]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [19, 23, 24]
    }
    location {
      path: [5, 0, 2, 2]
      span: [22, 2, 22]
      leading_comments: " The partner code was missing or found to be invalid.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [22, 2, 17]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [22, 20, 21]
    }
    location {
      path: [5, 0, 2, 3]
      span: [25, 2, 23]
      leading_comments: " The location code was missing or found to be invalid.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [25, 2, 18]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [25, 21, 22]
    }
    location {
      path: [5, 0, 2, 4]
      span: [28, 2, 21]
      leading_comments: " The device key was missing or found to be invalid.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [28, 2, 16]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [28, 19, 20]
    }
    location {
      path: [5, 0, 2, 5]
      span: [31, 2, 24]
      leading_comments: " The specified partner could not be found.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [31, 2, 19]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [31, 22, 23]
    }
    location {
      path: [5, 0, 2, 6]
      span: [34, 2, 25]
      leading_comments: " The specified partner could not be found.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [34, 2, 20]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [34, 23, 24]
    }
    location {
      path: [5, 0, 2, 7]
      span: [37, 2, 23]
      leading_comments: " The request payload was invalid in some manner.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [37, 2, 17]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [37, 20, 22]
    }
    location {
      path: [4, 0]
      span: [42, 0, 61, 1]
      leading_comments: " Specifies an RPC operation to retrieve status information for the POS service.\n"
    }
    location {
      path: [4, 0, 1]
      span: [42, 8, 12]
    }
    location {
      path: [4, 0, 3, 0]
      span: [44, 2, 45, 3]
      leading_comments: " Specifies a request to ping the service.\n"
    }
    location {
      path: [4, 0, 3, 0, 1]
      span: [44, 10, 17]
    }
    location {
      path: [4, 0, 3, 1]
      span: [48, 2, 51, 3]
      leading_comments: " Specifies a response to a service ping.\n"
    }
    location {
      path: [4, 0, 3, 1, 1]
      span: [48, 10, 18]
    }
    location {
      path: [4, 0, 3, 1, 2, 0]
      span: [50, 4, 38]
      leading_comments: " Current service status.\n"
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 4]
      span: [50, 4, 48, 20]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 6]
      span: [50, 4, 26]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 1]
      span: [50, 27, 33]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 3]
      span: [50, 36, 37]
    }
    location {
      path: [4, 0, 3, 2]
      span: [54, 2, 60, 3]
      leading_comments: " Specifies an entire ping operation.\n"
    }
    location {
      path: [4, 0, 3, 2, 1]
      span: [54, 10, 19]
    }
    location {
      path: [4, 0, 3, 2, 2, 0]
      span: [56, 4, 24]
      leading_comments: " Request for service status.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 4]
      span: [56, 4, 54, 21]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 6]
      span: [56, 4, 11]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 1]
      span: [56, 12, 19]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 3]
      span: [56, 22, 23]
    }
    location {
      path: [4, 0, 3, 2, 2, 1]
      span: [59, 4, 26]
      leading_comments: " Response to a request for service status.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 4]
      span: [59, 4, 56, 24]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 6]
      span: [59, 4, 12]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 1]
      span: [59, 13, 21]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 3]
      span: [59, 24, 25]
    }
    location {
      path: [6, 0]
      span: [64, 0, 69, 1]
    }
    location {
      path: [6, 0, 1]
      span: [64, 8, 19]
    }
    location {
      path: [6, 0, 2, 0]
      span: [66, 2, 68, 3]
      leading_comments: " Ping the server.\n"
    }
    location {
      path: [6, 0, 2, 0, 1]
      span: [66, 6, 10]
    }
    location {
      path: [6, 0, 2, 0, 2]
      span: [66, 11, 23]
    }
    location {
      path: [6, 0, 2, 0, 3]
      span: [66, 34, 47]
    }
    location {
      path: [6, 0, 2, 0, 4]
      span: [67, 4, 51]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0]
      span: [67, 4, 51]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2]
      span: [67, 11, 32]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0]
      span: [67, 11, 28]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [67, 12, 27]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 1]
      span: [67, 29, 32]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 1, 1]
      span: [67, 29, 32]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 7]
      span: [67, 35, 50]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "base/ProductKind.proto"
  package: "base"
  enum_type {
    name: "ProductKind"
    value {
      name: "FLOWERS"
      number: 0
    }
    value {
      name: "EDIBLES"
      number: 1
    }
    value {
      name: "EXTRACTS"
      number: 2
    }
    value {
      name: "PREROLLS"
      number: 3
    }
    value {
      name: "APOTHECARY"
      number: 4
    }
    value {
      name: "CARTRIDGES"
      number: 5
    }
    value {
      name: "PLANTS"
      number: 6
    }
    value {
      name: "MERCHANDISE"
      number: 7
    }
  }
  options {
    java_package: "io.bloombox.schema.base"
    java_outer_classname: "BaseProductKind"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 37, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 12]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 47]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [5, 0]
      span: [13, 0, 37, 1]
      leading_comments: " Enumerates types of products known to the spec.\n"
    }
    location {
      path: [5, 0, 1]
      span: [13, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [15, 2, 14]
      leading_comments: " Traditional buds or 'flower'-based products, essentially sold in bags or jars.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [15, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [15, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [18, 2, 14]
      leading_comments: " Manufactured products that are edible, like drinks, snacks, candy, and food.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [18, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [18, 12, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [21, 2, 15]
      leading_comments: " Manufactured products that are concentrated from flowers in some manner, such as wax or oil.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [21, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [21, 13, 14]
    }
    location {
      path: [5, 0, 2, 3]
      span: [24, 2, 15]
      leading_comments: " Pre-rolled items, generally made from flowers, like a cigarette - this would cover joints, etc.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [24, 2, 10]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [24, 13, 14]
    }
    location {
      path: [5, 0, 2, 4]
      span: [27, 2, 17]
      leading_comments: " Tinctures, topicals, capsules, and other forms of manufactured cannabis.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [27, 2, 12]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [27, 15, 16]
    }
    location {
      path: [5, 0, 2, 5]
      span: [30, 2, 17]
      leading_comments: " Vaporizor cartridges, batteries, and kits.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [30, 2, 12]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [30, 15, 16]
    }
    location {
      path: [5, 0, 2, 6]
      span: [33, 2, 13]
      leading_comments: " Plants sold direct, in various forms such as pre-grown (clones) or raw seeds.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [33, 2, 8]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [33, 11, 12]
    }
    location {
      path: [5, 0, 2, 7]
      span: [36, 2, 18]
      leading_comments: " Merchandise, usually branded in-house. Also covers glassware and miscellaneous items.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [36, 2, 13]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [36, 16, 17]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "base/ProductType.proto"
  package: "base"
  dependency: "base/ProductKind.proto"
  message_type {
    name: "ProductType"
    field {
      name: "kind"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".base.ProductKind"
      json_name: "kind"
    }
  }
  options {
    java_package: "io.bloombox.schema.base"
    java_outer_classname: "BaseProductType"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 19, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 12]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 47]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [4, 0]
      span: [16, 0, 19, 1]
      leading_comments: " Specifies the enumeration of a product's type or categorical\n identity, along with any additional metadata.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 28]
      leading_comments: " Kind of product, enumerated in this same package as `ProductKind`.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 21]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 18]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 19, 23]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 26, 27]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "base/ProductKey.proto"
  package: "base"
  dependency: "bq_field.proto"
  dependency: "content/Name.proto"
  dependency: "base/ProductType.proto"
  message_type {
    name: "ProductReference"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Name"
      json_name: "name"
    }
    field {
      name: "key"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
  }
  message_type {
    name: "ProductKey"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1022: 1
        1025: "Product ID, an opaque string that is usually autogenerated."
      }
      json_name: "id"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductType"
      options {
        1024: 1
      }
      json_name: "type"
    }
  }
  options {
    java_package: "io.bloombox.schema.base"
    java_outer_classname: "BaseProductKey"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 42, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 12]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 48]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 47]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 27]
    }
    location {
      path: [3, 2]
      span: [14, 7, 31]
    }
    location {
      path: [4, 0]
      span: [18, 0, 24, 1]
      leading_comments: " Specifies a reference to a product.\n"
    }
    location {
      path: [4, 0, 1]
      span: [18, 8, 24]
    }
    location {
      path: [4, 0, 2, 0]
      span: [20, 2, 24]
      leading_comments: " Specifies the name of a product.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [20, 2, 18, 26]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [20, 2, 14]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [20, 15, 19]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [20, 22, 23]
    }
    location {
      path: [4, 0, 2, 1]
      span: [23, 2, 21]
      leading_comments: " Specifies the key, if known, of a product.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [23, 2, 20, 24]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [23, 2, 12]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [23, 13, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [23, 19, 20]
    }
    location {
      path: [4, 1]
      span: [29, 0, 42, 1]
      leading_comments: " Specifies a general key for a product, which is the combined specification of a product ID and type, which is\n enumerated in `base.ProductType`.\n"
    }
    location {
      path: [4, 1, 1]
      span: [29, 8, 18]
    }
    location {
      path: [4, 1, 2, 0]
      span: [33, 2, 36, 4]
      leading_comments: " Product ID, an opaque string that is usually autogenerated. Within the scope of an implementing system, this may\n also be a stringified integer such as an auto-incrementing ID, for relational-type systems. The product ID is\n expected to be globally addressable and unique across all product categories.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [33, 2, 29, 20]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [33, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [33, 9, 11]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [33, 14, 15]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [33, 16, 36, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [34, 4, 34]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [34, 4, 27]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [34, 4, 27]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [34, 5, 26]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 3]
      span: [34, 30, 34]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1]
      span: [35, 4, 95]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 2]
      span: [35, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 2, 0]
      span: [35, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [35, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 7]
      span: [35, 34, 95]
    }
    location {
      path: [4, 1, 2, 1]
      span: [39, 2, 41, 4]
      leading_comments: " Type of product the ID is referring to. In most cases this entry can be omitted.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [39, 2, 36, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [39, 2, 18]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [39, 19, 23]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [39, 26, 27]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [39, 28, 41, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [40, 4, 33]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [40, 4, 26]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [40, 4, 26]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [40, 5, 25]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 3]
      span: [40, 29, 33]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "commerce/Item.proto"
  package: "commerce"
  dependency: "base/ProductKey.proto"
  message_type {
    name: "VariantSpec"
    field {
      name: "variant"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.ProductVariant"
      json_name: "variant"
    }
    field {
      name: "weight"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.ProductWeight"
      oneof_index: 0
      json_name: "weight"
    }
    field {
      name: "size"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "size"
    }
    field {
      name: "color"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "color"
    }
    oneof_decl {
      name: "spec"
    }
  }
  message_type {
    name: "Item"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "variant"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".commerce.VariantSpec"
      json_name: "variant"
    }
    field {
      name: "count"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "count"
    }
    field {
      name: "price"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "price"
    }
    field {
      name: "cost"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "cost"
    }
  }
  enum_type {
    name: "ProductVariant"
    value {
      name: "WEIGHT"
      number: 0
    }
    value {
      name: "COLOR"
      number: 1
    }
    value {
      name: "SIZE"
      number: 2
    }
  }
  enum_type {
    name: "ProductWeight"
    value {
      name: "NO_WEIGHT"
      number: 0
    }
    value {
      name: "HALFGRAM"
      number: 1
    }
    value {
      name: "GRAM"
      number: 2
    }
    value {
      name: "EIGHTH"
      number: 3
    }
    value {
      name: "QUARTER"
      number: 4
    }
    value {
      name: "HALF"
      number: 5
    }
    value {
      name: "OZ"
      number: 6
    }
  }
  options {
    java_package: "io.bloombox.schema.commerce"
    java_outer_classname: "OrderItem"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 86, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 51]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 42]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 42]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 41]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [5, 0]
      span: [15, 0, 24, 1]
      leading_comments: " Specifies weight and price of  ordered product\n"
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 19]
    }
    location {
      path: [5, 0, 2, 0]
      span: [17, 2, 13]
      leading_comments: " Variance by product weight.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [17, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [17, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [20, 2, 12]
      leading_comments: " Variance by product color.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [20, 2, 7]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [20, 10, 11]
    }
    location {
      path: [5, 0, 2, 2]
      span: [23, 2, 11]
      leading_comments: " Variance by product size.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [23, 2, 6]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [23, 9, 10]
    }
    location {
      path: [5, 1]
      span: [28, 0, 49, 1]
      leading_comments: " Enumeration for potential weight of concentrates and flowers\n"
    }
    location {
      path: [5, 1, 1]
      span: [28, 5, 18]
    }
    location {
      path: [5, 1, 2, 0]
      span: [30, 2, 16]
      leading_comments: " The product has no weight value.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [30, 2, 11]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [30, 14, 15]
    }
    location {
      path: [5, 1, 2, 1]
      span: [33, 2, 15]
      leading_comments: " Half of one gram, usually for concentrates.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [33, 2, 10]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [33, 13, 14]
    }
    location {
      path: [5, 1, 2, 2]
      span: [36, 2, 11]
      leading_comments: " One gram.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [36, 2, 6]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [36, 9, 10]
    }
    location {
      path: [5, 1, 2, 3]
      span: [39, 2, 13]
      leading_comments: " An eighth of an ounce.\n"
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [39, 2, 8]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [39, 11, 12]
    }
    location {
      path: [5, 1, 2, 4]
      span: [42, 2, 14]
      leading_comments: " A quarter of an ounce.\n"
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [42, 2, 9]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [42, 12, 13]
    }
    location {
      path: [5, 1, 2, 5]
      span: [45, 2, 11]
      leading_comments: " A half ounce.\n"
    }
    location {
      path: [5, 1, 2, 5, 1]
      span: [45, 2, 6]
    }
    location {
      path: [5, 1, 2, 5, 2]
      span: [45, 9, 10]
    }
    location {
      path: [5, 1, 2, 6]
      span: [48, 2, 9]
      leading_comments: " A full ounce.\n"
    }
    location {
      path: [5, 1, 2, 6, 1]
      span: [48, 2, 4]
    }
    location {
      path: [5, 1, 2, 6, 2]
      span: [48, 7, 8]
    }
    location {
      path: [4, 0]
      span: [53, 0, 67, 1]
      leading_comments: " Specifies if it is a weighted product or a unit priced product and attaches that to item.\n"
    }
    location {
      path: [4, 0, 1]
      span: [53, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [55, 2, 29]
      leading_comments: " Specifies the variance type for this spec.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [55, 2, 53, 21]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [55, 2, 16]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [55, 17, 24]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [55, 27, 28]
    }
    location {
      path: [4, 0, 8, 0]
      span: [57, 2, 66, 3]
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [57, 8, 12]
    }
    location {
      path: [4, 0, 2, 1]
      span: [59, 4, 29]
      leading_comments: " Specifies a product weight, when varying by weight.\n"
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [59, 4, 17]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [59, 18, 24]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [59, 27, 28]
    }
    location {
      path: [4, 0, 2, 2]
      span: [62, 4, 20]
      leading_comments: " Specifies a size option for the product.\n"
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [62, 4, 10]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [62, 11, 15]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [62, 18, 19]
    }
    location {
      path: [4, 0, 2, 3]
      span: [65, 4, 21]
      leading_comments: " Specifies a color option for the product.\n"
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [65, 4, 10]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [65, 11, 16]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [65, 19, 20]
    }
    location {
      path: [4, 1]
      span: [71, 0, 86, 1]
      leading_comments: " Specifies the Item via the product key as well as weight, and count of product ordered\n"
    }
    location {
      path: [4, 1, 1]
      span: [71, 8, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [73, 2, 26]
      leading_comments: " Key for the item, which is the type and ID, combined.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [73, 2, 71, 14]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [73, 2, 17]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [73, 18, 21]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [73, 24, 25]
    }
    location {
      path: [4, 1, 2, 1]
      span: [76, 2, 35]
      leading_comments: " Variance specifications for this item.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [76, 2, 10]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [76, 11, 22]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [76, 23, 30]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [76, 33, 34]
    }
    location {
      path: [4, 1, 2, 2]
      span: [79, 2, 19]
      leading_comments: " Count of this item requested.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [79, 2, 76, 35]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [79, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [79, 9, 14]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [79, 17, 18]
    }
    location {
      path: [4, 1, 2, 3]
      span: [82, 2, 19]
      leading_comments: " Unit price of this item.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [82, 2, 79, 19]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [82, 2, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [82, 9, 14]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [82, 17, 18]
    }
    location {
      path: [4, 1, 2, 4]
      span: [85, 2, 18]
      leading_comments: " Line-item cost calculated from count and price.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [85, 2, 82, 19]
    }
    location {
      path: [4, 1, 2, 4, 5]
      span: [85, 2, 8]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [85, 9, 13]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [85, 16, 17]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "commerce/Delivery.proto"
  package: "commerce"
  dependency: "geo/Address.proto"
  message_type {
    name: "DeliveryDestination"
    field {
      name: "address"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Address"
      json_name: "address"
    }
    field {
      name: "instructions"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "instructions"
    }
  }
  options {
    java_package: "io.bloombox.schema.commerce"
    java_outer_classname: "OrderDelivery"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 21, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 51]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 26]
    }
    location {
      path: [4, 0]
      span: [15, 0, 21, 1]
      leading_comments: " Specifies the location to deliver the order.\n"
    }
    location {
      path: [4, 0, 1]
      span: [15, 8, 27]
    }
    location {
      path: [4, 0, 2, 0]
      span: [17, 2, 26]
      leading_comments: " Location/address.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [17, 2, 15, 29]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [17, 2, 13]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [17, 14, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [17, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [20, 2, 26]
      leading_comments: " Special delivery instructions\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [20, 2, 17, 26]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [20, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [20, 9, 21]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [20, 24, 25]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "commerce/Customer.proto"
  package: "commerce"
  dependency: "person/Person.proto"
  dependency: "identity/User.proto"
  message_type {
    name: "Customer"
    field {
      name: "person"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".person.Person"
      json_name: "person"
    }
    field {
      name: "foreign_id"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "foreignId"
    }
    field {
      name: "user"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.UserKey"
      json_name: "user"
    }
  }
  options {
    java_package: "io.bloombox.schema.commerce"
    java_outer_classname: "OrderCustomer"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 25, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 51]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 28]
    }
    location {
      path: [3, 1]
      span: [12, 7, 28]
    }
    location {
      path: [4, 0]
      span: [16, 0, 25, 1]
      leading_comments: " Customer identity.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 16]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 27]
      leading_comments: " Person attached to this customer.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 18]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 15]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 16, 22]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 25, 26]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 24]
      leading_comments: " Foreign system ID.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 27]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [21, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 9, 19]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 22, 23]
    }
    location {
      path: [4, 0, 2, 2]
      span: [24, 2, 28]
      leading_comments: " Logged-in user, if any.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [24, 2, 21, 24]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [24, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [24, 19, 23]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [24, 26, 27]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "commerce/Order.proto"
  package: "commerce"
  dependency: "bq_field.proto"
  dependency: "commerce/Item.proto"
  dependency: "commerce/Delivery.proto"
  dependency: "commerce/Customer.proto"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "OrderScheduling"
    field {
      name: "scheduling"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.SchedulingType"
      json_name: "scheduling"
    }
    field {
      name: "desired_time"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "desiredTime"
    }
  }
  message_type {
    name: "StatusCheckin"
    field {
      name: "status"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.OrderStatus"
      json_name: "status"
    }
    field {
      name: "instant"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "instant"
    }
    field {
      name: "message"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "message"
    }
  }
  message_type {
    name: "OrderKey"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Order ID, assigned by the server upon creation."
      }
      json_name: "id"
    }
  }
  message_type {
    name: "Order"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.OrderType"
      json_name: "type"
    }
    field {
      name: "status"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.OrderStatus"
      json_name: "status"
    }
    field {
      name: "customer"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".commerce.Customer"
      json_name: "customer"
    }
    field {
      name: "scheduling"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".commerce.OrderScheduling"
      json_name: "scheduling"
    }
    field {
      name: "destination"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".commerce.DeliveryDestination"
      json_name: "destination"
    }
    field {
      name: "notes"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "notes"
    }
    field {
      name: "item"
      number: 8
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".commerce.Item"
      json_name: "item"
    }
    field {
      name: "action_log"
      number: 9
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".commerce.StatusCheckin"
      json_name: "actionLog"
    }
    field {
      name: "created_at"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "createdAt"
    }
    field {
      name: "subtotal"
      number: 11
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "subtotal"
    }
  }
  enum_type {
    name: "OrderType"
    value {
      name: "PICKUP"
      number: 0
    }
    value {
      name: "DELIVERY"
      number: 1
    }
  }
  enum_type {
    name: "SchedulingType"
    value {
      name: "ASAP"
      number: 0
    }
    value {
      name: "TIMED"
      number: 1
    }
  }
  enum_type {
    name: "OrderStatus"
    value {
      name: "PENDING"
      number: 0
    }
    value {
      name: "APPROVED"
      number: 1
    }
    value {
      name: "REJECTED"
      number: 2
    }
    value {
      name: "ASSIGNED"
      number: 3
    }
    value {
      name: "EN_ROUTE"
      number: 4
    }
    value {
      name: "FULFILLED"
      number: 5
    }
  }
  options {
    java_package: "io.bloombox.schema.commerce"
    java_outer_classname: "CommercialOrder"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 127, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 51]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 28]
    }
    location {
      path: [3, 2]
      span: [14, 7, 32]
    }
    location {
      path: [3, 3]
      span: [15, 7, 32]
    }
    location {
      path: [3, 4]
      span: [16, 7, 31]
    }
    location {
      path: [5, 0]
      span: [20, 0, 26, 1]
      leading_comments: " Specifies the type of order requested.\n"
    }
    location {
      path: [5, 0, 1]
      span: [20, 5, 14]
    }
    location {
      path: [5, 0, 2, 0]
      span: [22, 2, 13]
      leading_comments: " Express pickup order.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [22, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [22, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [25, 2, 15]
      leading_comments: " Delivery order.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [25, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [25, 13, 14]
    }
    location {
      path: [5, 1]
      span: [30, 0, 36, 1]
      leading_comments: " Specifies the types of delivery timing.\n"
    }
    location {
      path: [5, 1, 1]
      span: [30, 5, 19]
    }
    location {
      path: [5, 1, 2, 0]
      span: [32, 2, 11]
      leading_comments: " As soon as possible.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [32, 2, 6]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [32, 9, 10]
    }
    location {
      path: [5, 1, 2, 1]
      span: [35, 2, 12]
      leading_comments: " Desired time.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [35, 2, 7]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [35, 10, 11]
    }
    location {
      path: [4, 0]
      span: [40, 0, 46, 1]
      leading_comments: " Specifies the desired timing of the delivery order.\n"
    }
    location {
      path: [4, 0, 1]
      span: [40, 8, 23]
    }
    location {
      path: [4, 0, 2, 0]
      span: [42, 2, 32]
      leading_comments: " Scheduling type, either 'ASAP' or a target time.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [42, 2, 40, 25]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [42, 2, 16]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [42, 17, 27]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [42, 30, 31]
    }
    location {
      path: [4, 0, 2, 1]
      span: [45, 2, 36]
      leading_comments: " Desired delivery time.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [45, 2, 42, 32]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [45, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [45, 19, 31]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [45, 34, 35]
    }
    location {
      path: [5, 2]
      span: [50, 0, 68, 1]
      leading_comments: " Enumeration for current status of order\n"
    }
    location {
      path: [5, 2, 1]
      span: [50, 5, 16]
    }
    location {
      path: [5, 2, 2, 0]
      span: [52, 2, 14]
      leading_comments: " Order has been submitted and is not yet approved.\n"
    }
    location {
      path: [5, 2, 2, 0, 1]
      span: [52, 2, 9]
    }
    location {
      path: [5, 2, 2, 0, 2]
      span: [52, 12, 13]
    }
    location {
      path: [5, 2, 2, 1]
      span: [55, 2, 15]
      leading_comments: " Order has been approved for fulfillment.\n"
    }
    location {
      path: [5, 2, 2, 1, 1]
      span: [55, 2, 10]
    }
    location {
      path: [5, 2, 2, 1, 2]
      span: [55, 13, 14]
    }
    location {
      path: [5, 2, 2, 2]
      span: [58, 2, 15]
      leading_comments: " Order could not be fulfilled for some reason.\n"
    }
    location {
      path: [5, 2, 2, 2, 1]
      span: [58, 2, 10]
    }
    location {
      path: [5, 2, 2, 2, 2]
      span: [58, 13, 14]
    }
    location {
      path: [5, 2, 2, 3]
      span: [61, 2, 15]
      leading_comments: " Order has been assigned.\n"
    }
    location {
      path: [5, 2, 2, 3, 1]
      span: [61, 2, 10]
    }
    location {
      path: [5, 2, 2, 3, 2]
      span: [61, 13, 14]
    }
    location {
      path: [5, 2, 2, 4]
      span: [64, 2, 15]
      leading_comments: " Order is en-route to the user (for delivery).\n"
    }
    location {
      path: [5, 2, 2, 4, 1]
      span: [64, 2, 10]
    }
    location {
      path: [5, 2, 2, 4, 2]
      span: [64, 13, 14]
    }
    location {
      path: [5, 2, 2, 5]
      span: [67, 2, 16]
      leading_comments: " Order has been fulfilled and is considered complete.\n"
    }
    location {
      path: [5, 2, 2, 5, 1]
      span: [67, 2, 11]
    }
    location {
      path: [5, 2, 2, 5, 2]
      span: [67, 14, 15]
    }
    location {
      path: [4, 1]
      span: [72, 0, 81, 1]
      leading_comments: " Specifies a moment at which an order changed status, when it happened, and, optionally, why.\n"
    }
    location {
      path: [4, 1, 1]
      span: [72, 8, 21]
    }
    location {
      path: [4, 1, 2, 0]
      span: [74, 2, 25]
      leading_comments: " Status the order moved to.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [74, 2, 72, 23]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [74, 2, 13]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [74, 14, 20]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [74, 23, 24]
    }
    location {
      path: [4, 1, 2, 1]
      span: [77, 2, 31]
      leading_comments: " Instant the order was moved to this status.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [77, 2, 74, 25]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [77, 2, 18]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [77, 19, 26]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [77, 29, 30]
    }
    location {
      path: [4, 1, 2, 2]
      span: [80, 2, 21]
      leading_comments: " Message or reason given for this status change, if any.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [80, 2, 77, 31]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [80, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [80, 9, 16]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [80, 19, 20]
    }
    location {
      path: [4, 2]
      span: [85, 0, 90, 1]
      leading_comments: " Specifies a unique key for a commercial order.\n"
    }
    location {
      path: [4, 2, 1]
      span: [85, 8, 16]
    }
    location {
      path: [4, 2, 2, 0]
      span: [87, 2, 89, 4]
      leading_comments: " Order ID, assigned by the server upon creation.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [87, 2, 85, 18]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [87, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [87, 9, 11]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [87, 14, 15]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [87, 16, 89, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [88, 4, 83]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [88, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [88, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [88, 5, 30]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 7]
      span: [88, 34, 83]
    }
    location {
      path: [4, 3]
      span: [94, 0, 127, 1]
      leading_comments: " Represents a full order submitted to the server for fulfillment, from an end-user, for delivery or express pickup.\n"
    }
    location {
      path: [4, 3, 1]
      span: [94, 8, 13]
    }
    location {
      path: [4, 3, 2, 0]
      span: [96, 2, 16]
      leading_comments: " ID assigned to the order by the server.\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [96, 2, 94, 15]
    }
    location {
      path: [4, 3, 2, 0, 5]
      span: [96, 2, 8]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [96, 9, 11]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [96, 14, 15]
    }
    location {
      path: [4, 3, 2, 1]
      span: [99, 2, 21]
      leading_comments: " Type of order requested.\n"
    }
    location {
      path: [4, 3, 2, 1, 4]
      span: [99, 2, 96, 16]
    }
    location {
      path: [4, 3, 2, 1, 6]
      span: [99, 2, 11]
    }
    location {
      path: [4, 3, 2, 1, 1]
      span: [99, 12, 16]
    }
    location {
      path: [4, 3, 2, 1, 3]
      span: [99, 19, 20]
    }
    location {
      path: [4, 3, 2, 2]
      span: [102, 2, 25]
      leading_comments: " Current status of this order.\n"
    }
    location {
      path: [4, 3, 2, 2, 4]
      span: [102, 2, 99, 21]
    }
    location {
      path: [4, 3, 2, 2, 6]
      span: [102, 2, 13]
    }
    location {
      path: [4, 3, 2, 2, 1]
      span: [102, 14, 20]
    }
    location {
      path: [4, 3, 2, 2, 3]
      span: [102, 23, 24]
    }
    location {
      path: [4, 3, 2, 3]
      span: [105, 2, 24]
      leading_comments: " Customer that submitted this order.\n"
    }
    location {
      path: [4, 3, 2, 3, 4]
      span: [105, 2, 102, 25]
    }
    location {
      path: [4, 3, 2, 3, 6]
      span: [105, 2, 10]
    }
    location {
      path: [4, 3, 2, 3, 1]
      span: [105, 11, 19]
    }
    location {
      path: [4, 3, 2, 3, 3]
      span: [105, 22, 23]
    }
    location {
      path: [4, 3, 2, 4]
      span: [108, 2, 33]
      leading_comments: " Scheduling spec for this order.\n"
    }
    location {
      path: [4, 3, 2, 4, 4]
      span: [108, 2, 105, 24]
    }
    location {
      path: [4, 3, 2, 4, 6]
      span: [108, 2, 17]
    }
    location {
      path: [4, 3, 2, 4, 1]
      span: [108, 18, 28]
    }
    location {
      path: [4, 3, 2, 4, 3]
      span: [108, 31, 32]
    }
    location {
      path: [4, 3, 2, 5]
      span: [111, 2, 38]
      leading_comments: " Location for delivery, if applicable.\n"
    }
    location {
      path: [4, 3, 2, 5, 4]
      span: [111, 2, 108, 33]
    }
    location {
      path: [4, 3, 2, 5, 6]
      span: [111, 2, 21]
    }
    location {
      path: [4, 3, 2, 5, 1]
      span: [111, 22, 33]
    }
    location {
      path: [4, 3, 2, 5, 3]
      span: [111, 36, 37]
    }
    location {
      path: [4, 3, 2, 6]
      span: [114, 2, 19]
      leading_comments: " User-provided notes or questions.\n"
    }
    location {
      path: [4, 3, 2, 6, 4]
      span: [114, 2, 111, 38]
    }
    location {
      path: [4, 3, 2, 6, 5]
      span: [114, 2, 8]
    }
    location {
      path: [4, 3, 2, 6, 1]
      span: [114, 9, 14]
    }
    location {
      path: [4, 3, 2, 6, 3]
      span: [114, 17, 18]
    }
    location {
      path: [4, 3, 2, 7]
      span: [117, 2, 25]
      leading_comments: " Items being ordered.\n"
    }
    location {
      path: [4, 3, 2, 7, 4]
      span: [117, 2, 10]
    }
    location {
      path: [4, 3, 2, 7, 6]
      span: [117, 11, 15]
    }
    location {
      path: [4, 3, 2, 7, 1]
      span: [117, 16, 20]
    }
    location {
      path: [4, 3, 2, 7, 3]
      span: [117, 23, 24]
    }
    location {
      path: [4, 3, 2, 8]
      span: [120, 2, 40]
      leading_comments: " Actions taken on this order.\n"
    }
    location {
      path: [4, 3, 2, 8, 4]
      span: [120, 2, 10]
    }
    location {
      path: [4, 3, 2, 8, 6]
      span: [120, 11, 24]
    }
    location {
      path: [4, 3, 2, 8, 1]
      span: [120, 25, 35]
    }
    location {
      path: [4, 3, 2, 8, 3]
      span: [120, 38, 39]
    }
    location {
      path: [4, 3, 2, 9]
      span: [123, 2, 35]
      leading_comments: " When this order was created.\n"
    }
    location {
      path: [4, 3, 2, 9, 4]
      span: [123, 2, 120, 40]
    }
    location {
      path: [4, 3, 2, 9, 6]
      span: [123, 2, 18]
    }
    location {
      path: [4, 3, 2, 9, 1]
      span: [123, 19, 29]
    }
    location {
      path: [4, 3, 2, 9, 3]
      span: [123, 32, 34]
    }
    location {
      path: [4, 3, 2, 10]
      span: [126, 2, 23]
      leading_comments: " Order subtotal.\n"
    }
    location {
      path: [4, 3, 2, 10, 4]
      span: [126, 2, 123, 35]
    }
    location {
      path: [4, 3, 2, 10, 5]
      span: [126, 2, 8]
    }
    location {
      path: [4, 3, 2, 10, 1]
      span: [126, 9, 17]
    }
    location {
      path: [4, 3, 2, 10, 3]
      span: [126, 20, 22]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "shop/v1/ShopService_v1.proto"
  package: "services.shop.v1"
  dependency: "identity/User.proto"
  dependency: "person/Person.proto"
  dependency: "commerce/Order.proto"
  dependency: "commerce/Customer.proto"
  dependency: "identity/ID.proto"
  dependency: "identity/ids/UserDoctorRec.proto"
  dependency: "services/ServiceStatus.proto"
  dependency: "partner/PartnerLocation.proto"
  dependency: "google/api/annotations.proto"
  message_type {
    name: "Ping"
    nested_type {
      name: "Request"
    }
    nested_type {
      name: "Response"
      field {
        name: "status"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.ServiceStatus"
        json_name: "status"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.Ping.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.Ping.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "ShopInfo"
    nested_type {
      name: "Request"
      field {
        name: "location"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".partner.PartnerLocationKey"
        json_name: "location"
      }
    }
    nested_type {
      name: "Response"
      field {
        name: "shop_status"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.shop.v1.ShopStatus"
        json_name: "shopStatus"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.ShopInfo.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.ShopInfo.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "EnrollMember"
    nested_type {
      name: "Request"
      field {
        name: "person"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".person.Person"
        json_name: "person"
      }
      field {
        name: "source"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".identity.EnrollmentSource"
        json_name: "source"
      }
      field {
        name: "channel"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "channel"
      }
      field {
        name: "doctor_rec"
        number: 4
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".identity.ids.UserDoctorRec"
        json_name: "doctorRec"
      }
      field {
        name: "government_id"
        number: 5
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".identity.ID"
        json_name: "governmentId"
      }
      field {
        name: "location"
        number: 6
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".partner.PartnerLocationKey"
        json_name: "location"
      }
      field {
        name: "password"
        number: 7
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "password"
      }
      field {
        name: "dry_run"
        number: 8
        label: LABEL_OPTIONAL
        type: TYPE_BOOL
        json_name: "dryRun"
      }
      field {
        name: "consumer_profile"
        number: 9
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".identity.ConsumerProfile"
        json_name: "consumerProfile"
      }
    }
    nested_type {
      name: "Response"
      field {
        name: "id"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "id"
      }
      field {
        name: "foreign_id"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        oneof_index: 0
        json_name: "foreignId"
      }
      field {
        name: "error"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.shop.v1.EnrollmentError"
        oneof_index: 0
        json_name: "error"
      }
      oneof_decl {
        name: "result"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.EnrollMember.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.EnrollMember.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "VerifyMember"
    nested_type {
      name: "Request"
      field {
        name: "email_address"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "emailAddress"
      }
      field {
        name: "location"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".partner.PartnerLocationKey"
        json_name: "location"
      }
    }
    nested_type {
      name: "Response"
      field {
        name: "verified"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_BOOL
        json_name: "verified"
      }
      field {
        name: "customer"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".commerce.Customer"
        oneof_index: 0
        json_name: "customer"
      }
      field {
        name: "error"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.shop.v1.VerifyError"
        oneof_index: 0
        json_name: "error"
      }
      oneof_decl {
        name: "result"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.VerifyMember.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.VerifyMember.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "CheckZipcode"
    nested_type {
      name: "Request"
      field {
        name: "zipcode"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "zipcode"
      }
      field {
        name: "location"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".partner.PartnerLocationKey"
        json_name: "location"
      }
    }
    nested_type {
      name: "Response"
      field {
        name: "supported"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_BOOL
        json_name: "supported"
      }
      field {
        name: "delivery_minimum"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_FLOAT
        json_name: "deliveryMinimum"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.CheckZipcode.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.CheckZipcode.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "SubmitOrder"
    nested_type {
      name: "Request"
      field {
        name: "order"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".commerce.Order"
        json_name: "order"
      }
      field {
        name: "location"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".partner.PartnerLocationKey"
        json_name: "location"
      }
    }
    nested_type {
      name: "Response"
      field {
        name: "error"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.shop.v1.OrderError"
        json_name: "error"
      }
      field {
        name: "order_id"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "orderId"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.SubmitOrder.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.SubmitOrder.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "GetOrder"
    nested_type {
      name: "Request"
      field {
        name: "order_id"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "orderId"
      }
      field {
        name: "location"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".partner.PartnerLocationKey"
        json_name: "location"
      }
    }
    nested_type {
      name: "Response"
      field {
        name: "success"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_BOOL
        json_name: "success"
      }
      field {
        name: "order"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".commerce.Order"
        json_name: "order"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.GetOrder.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.shop.v1.GetOrder.Response"
        json_name: "response"
      }
    }
  }
  enum_type {
    name: "VerifyError"
    value {
      name: "NOT_FOUND"
      number: 0
    }
    value {
      name: "REC_EXPIRED"
      number: 1
    }
    value {
      name: "ID_EXPIRED"
      number: 2
    }
    value {
      name: "INVALID_PAYLOAD"
      number: 3
    }
    value {
      name: "NOT_ELIGIBLE"
      number: 4
    }
  }
  enum_type {
    name: "OrderError"
    value {
      name: "NO_ERROR"
      number: 0
    }
    value {
      name: "INVALID_ORDER"
      number: 1
    }
    value {
      name: "USER_NOT_ELIGIBLE"
      number: 2
    }
    value {
      name: "ZIPCODE_NOT_ELIGIBLE"
      number: 3
    }
    value {
      name: "ZIPCODE_NOT_ACTIVE"
      number: 4
    }
    value {
      name: "ZIPCODE_MINIMUM_NOT_MET"
      number: 5
    }
    value {
      name: "INVALID_PARTNER"
      number: 6
    }
    value {
      name: "INVALID_LOCATION"
      number: 7
    }
    value {
      name: "INVALID_CUSTOMER"
      number: 8
    }
    value {
      name: "MISSING_DESTINATION"
      number: 9
    }
    value {
      name: "SHOP_NOT_OPEN"
      number: 10
    }
    value {
      name: "GLOBAL_MINIMUM_NOT_MET"
      number: 11
    }
    value {
      name: "MEMBERSHIP_NOT_FOUND"
      number: 12
    }
    value {
      name: "DUPLICATE_ORDER"
      number: 13
    }
  }
  enum_type {
    name: "EnrollmentError"
    value {
      name: "NO_ENROLLMENT_ERROR"
      number: 0
    }
    value {
      name: "INVALID_EMAIL"
      number: 1
    }
    value {
      name: "INVALID_NAME"
      number: 2
    }
    value {
      name: "INVALID_PHONE"
      number: 3
    }
    value {
      name: "INVALID_DATE_OF_BIRTH"
      number: 4
    }
    value {
      name: "INVALID_REC_ID"
      number: 5
    }
    value {
      name: "INVALID_REC_EXPIRATION"
      number: 6
    }
    value {
      name: "INVALID_REC_DOCTOR_NAME"
      number: 7
    }
    value {
      name: "INVALID_REC_DOCTOR_PHONE"
      number: 8
    }
    value {
      name: "INVALID_USDL_ID"
      number: 9
    }
    value {
      name: "INVALID_USDL_EXPIRATION"
      number: 11
    }
    value {
      name: "INVALID_USDL_JURISDICTION"
      number: 12
    }
    value {
      name: "ACCOUNT_CONFLICT"
      number: 13
    }
    value {
      name: "ACCOUNT_CONFLICT_EMAIL"
      number: 14
    }
    value {
      name: "ACCOUNT_CONFLICT_PHONE"
      number: 15
    }
    value {
      name: "INVALID_ENROLLMENT_PAYLOAD"
      number: 99
    }
  }
  enum_type {
    name: "ShopStatus"
    value {
      name: "OPEN"
      number: 0
    }
    value {
      name: "CLOSED"
      number: 1
    }
    value {
      name: "DELIVERY_ONLY"
      number: 2
    }
    value {
      name: "PICKUP_ONLY"
      number: 3
    }
  }
  service {
    name: "Shop"
    method {
      name: "Ping"
      input_type: ".services.shop.v1.Ping.Request"
      output_type: ".services.shop.v1.Ping.Response"
      options {
        72295728 {
          2: "/shop/v1/ping"
        }
      }
    }
    method {
      name: "ShopInfo"
      input_type: ".services.shop.v1.ShopInfo.Request"
      output_type: ".services.shop.v1.ShopInfo.Response"
      options {
        72295728 {
          2: "/shop/v1/partners/{location.partner.code}/locations/{location.code}/shop/info"
        }
      }
    }
    method {
      name: "EnrollMember"
      input_type: ".services.shop.v1.EnrollMember.Request"
      output_type: ".services.shop.v1.EnrollMember.Response"
      options {
        72295728 {
          4: "/shop/v1/partners/{location.partner.code}/locations/{location.code}/members"
          7: "*"
          11 {
            4: "/shop/v1/members"
            7: "*"
          }
        }
      }
    }
    method {
      name: "CheckZipcode"
      input_type: ".services.shop.v1.CheckZipcode.Request"
      output_type: ".services.shop.v1.CheckZipcode.Response"
      options {
        72295728 {
          2: "/shop/v1/partners/{location.partner.code}/locations/{location.code}/zipcheck/{zipcode}"
        }
      }
    }
    method {
      name: "VerifyMember"
      input_type: ".services.shop.v1.VerifyMember.Request"
      output_type: ".services.shop.v1.VerifyMember.Response"
      options {
        72295728 {
          2: "/shop/v1/partners/{location.partner.code}/locations/{location.code}/members/{email_address}/verify"
        }
      }
    }
    method {
      name: "SubmitOrder"
      input_type: ".services.shop.v1.SubmitOrder.Request"
      output_type: ".services.shop.v1.SubmitOrder.Response"
      options {
        72295728 {
          4: "/shop/v1/partners/{location.partner.code}/locations/{location.code}/orders"
          7: "order"
          11 {
            4: "/shop/v1/partners/{location.partner.code}/locations/{location.code}/orders/{order.id}"
            7: "order"
          }
        }
      }
    }
    method {
      name: "GetOrder"
      input_type: ".services.shop.v1.GetOrder.Request"
      output_type: ".services.shop.v1.GetOrder.Response"
      options {
        72295728 {
          2: "/shop/v1/partners/{location.partner.code}/locations/{location.code}/orders/{order_id}"
          11 {
            2: "/shop/v1/orders/{order_id}"
          }
        }
      }
    }
  }
  options {
    java_package: "io.bloombox.schema.services.shop"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 417, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 24]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 57]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 57]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 56]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 28]
    }
    location {
      path: [3, 1]
      span: [10, 7, 28]
    }
    location {
      path: [3, 2]
      span: [11, 7, 29]
    }
    location {
      path: [3, 3]
      span: [12, 7, 32]
    }
    location {
      path: [3, 4]
      span: [13, 7, 26]
    }
    location {
      path: [3, 5]
      span: [14, 7, 41]
    }
    location {
      path: [3, 6]
      span: [15, 7, 37]
    }
    location {
      path: [3, 7]
      span: [16, 7, 38]
    }
    location {
      path: [3, 8]
      span: [18, 7, 37]
    }
    location {
      path: [5, 0]
      span: [22, 0, 37, 1]
      leading_comments: " Enumerates errors that may prevent a user from being considered eligible for express and delivery orders.\n"
    }
    location {
      path: [5, 0, 1]
      span: [22, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [24, 2, 16]
      leading_comments: " The user could not be found at all.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [24, 2, 11]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [24, 14, 15]
    }
    location {
      path: [5, 0, 2, 1]
      span: [27, 2, 18]
      leading_comments: " The user was found, but their rec was expired.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [27, 2, 13]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [27, 16, 17]
    }
    location {
      path: [5, 0, 2, 2]
      span: [30, 2, 17]
      leading_comments: " The user was found, but their ID was expired.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [30, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [30, 15, 16]
    }
    location {
      path: [5, 0, 2, 3]
      span: [33, 2, 22]
      leading_comments: " The payload was invalid - usually an invalid email address.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [33, 2, 17]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [33, 20, 21]
    }
    location {
      path: [5, 0, 2, 4]
      span: [36, 2, 19]
      leading_comments: " Generic error that indicates the user is not eligible.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [36, 2, 14]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [36, 17, 18]
    }
    location {
      path: [5, 1]
      span: [40, 0, 82, 1]
      leading_comments: " Enumerates errors that may prevent a user from submitting an order for pickup or delivery.\n"
    }
    location {
      path: [5, 1, 1]
      span: [40, 5, 15]
    }
    location {
      path: [5, 1, 2, 0]
      span: [42, 2, 15]
      leading_comments: " No error occurred.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [42, 2, 10]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [42, 13, 14]
    }
    location {
      path: [5, 1, 2, 1]
      span: [45, 2, 20]
      leading_comments: " Generic invalid payload.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [45, 2, 15]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [45, 18, 19]
    }
    location {
      path: [5, 1, 2, 2]
      span: [48, 2, 24]
      leading_comments: " The user was not found to be eligible to submit orders.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [48, 2, 19]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [48, 22, 23]
    }
    location {
      path: [5, 1, 2, 3]
      span: [51, 2, 27]
      leading_comments: " Delivery is not supported within the zipcode provided.\n"
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [51, 2, 22]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [51, 25, 26]
    }
    location {
      path: [5, 1, 2, 4]
      span: [54, 2, 25]
      leading_comments: " Zipcode is eligible, but currently inactive.\n"
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [54, 2, 20]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [54, 23, 24]
    }
    location {
      path: [5, 1, 2, 5]
      span: [57, 2, 30]
      leading_comments: " Zipcode delivery minimum was not met by the order subtotal.\n"
    }
    location {
      path: [5, 1, 2, 5, 1]
      span: [57, 2, 25]
    }
    location {
      path: [5, 1, 2, 5, 2]
      span: [57, 28, 29]
    }
    location {
      path: [5, 1, 2, 6]
      span: [60, 2, 22]
      leading_comments: " The partner code was invalid.\n"
    }
    location {
      path: [5, 1, 2, 6, 1]
      span: [60, 2, 17]
    }
    location {
      path: [5, 1, 2, 6, 2]
      span: [60, 20, 21]
    }
    location {
      path: [5, 1, 2, 7]
      span: [63, 2, 23]
      leading_comments: " The location code was invalid.\n"
    }
    location {
      path: [5, 1, 2, 7, 1]
      span: [63, 2, 18]
    }
    location {
      path: [5, 1, 2, 7, 2]
      span: [63, 21, 22]
    }
    location {
      path: [5, 1, 2, 8]
      span: [66, 2, 23]
      leading_comments: " The customer record was found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 8, 1]
      span: [66, 2, 18]
    }
    location {
      path: [5, 1, 2, 8, 2]
      span: [66, 21, 22]
    }
    location {
      path: [5, 1, 2, 9]
      span: [69, 2, 26]
      leading_comments: " The request is of type DELIVERY but was missing destination information.\n"
    }
    location {
      path: [5, 1, 2, 9, 1]
      span: [69, 2, 21]
    }
    location {
      path: [5, 1, 2, 9, 2]
      span: [69, 24, 25]
    }
    location {
      path: [5, 1, 2, 10]
      span: [72, 2, 21]
      leading_comments: " The shop is not open right now for DELIVERY, or at the requested time for PICKUP.\n"
    }
    location {
      path: [5, 1, 2, 10, 1]
      span: [72, 2, 15]
    }
    location {
      path: [5, 1, 2, 10, 2]
      span: [72, 18, 20]
    }
    location {
      path: [5, 1, 2, 11]
      span: [75, 2, 30]
      leading_comments: " Global delivery or order minimum subtotal was not met.\n"
    }
    location {
      path: [5, 1, 2, 11, 1]
      span: [75, 2, 24]
    }
    location {
      path: [5, 1, 2, 11, 2]
      span: [75, 27, 29]
    }
    location {
      path: [5, 1, 2, 12]
      span: [78, 2, 28]
      leading_comments: " The user's membership could not be located for a given dispensary.\n"
    }
    location {
      path: [5, 1, 2, 12, 1]
      span: [78, 2, 22]
    }
    location {
      path: [5, 1, 2, 12, 2]
      span: [78, 25, 27]
    }
    location {
      path: [5, 1, 2, 13]
      span: [81, 2, 23]
      leading_comments: " The order was found to be a duplicate of another order.\n"
    }
    location {
      path: [5, 1, 2, 13, 1]
      span: [81, 2, 17]
    }
    location {
      path: [5, 1, 2, 13, 2]
      span: [81, 20, 22]
    }
    location {
      path: [5, 2]
      span: [85, 0, 133, 1]
      leading_comments: " Specifies errors that may be encountered during enrollment of a new user.\n"
    }
    location {
      path: [5, 2, 1]
      span: [85, 5, 20]
    }
    location {
      path: [5, 2, 2, 0]
      span: [87, 2, 26]
      leading_comments: " No error occurred.\n"
    }
    location {
      path: [5, 2, 2, 0, 1]
      span: [87, 2, 21]
    }
    location {
      path: [5, 2, 2, 0, 2]
      span: [87, 24, 25]
    }
    location {
      path: [5, 2, 2, 1]
      span: [90, 2, 20]
      leading_comments: " Invalid email address.\n"
    }
    location {
      path: [5, 2, 2, 1, 1]
      span: [90, 2, 15]
    }
    location {
      path: [5, 2, 2, 1, 2]
      span: [90, 18, 19]
    }
    location {
      path: [5, 2, 2, 2]
      span: [93, 2, 19]
      leading_comments: " Invalid name info.\n"
    }
    location {
      path: [5, 2, 2, 2, 1]
      span: [93, 2, 14]
    }
    location {
      path: [5, 2, 2, 2, 2]
      span: [93, 17, 18]
    }
    location {
      path: [5, 2, 2, 3]
      span: [96, 2, 20]
      leading_comments: " Invalid phone number.\n"
    }
    location {
      path: [5, 2, 2, 3, 1]
      span: [96, 2, 15]
    }
    location {
      path: [5, 2, 2, 3, 2]
      span: [96, 18, 19]
    }
    location {
      path: [5, 2, 2, 4]
      span: [99, 2, 28]
      leading_comments: " Invalid date of birth.\n"
    }
    location {
      path: [5, 2, 2, 4, 1]
      span: [99, 2, 23]
    }
    location {
      path: [5, 2, 2, 4, 2]
      span: [99, 26, 27]
    }
    location {
      path: [5, 2, 2, 5]
      span: [102, 2, 21]
      leading_comments: " Invalid recommendation ID\n"
    }
    location {
      path: [5, 2, 2, 5, 1]
      span: [102, 2, 16]
    }
    location {
      path: [5, 2, 2, 5, 2]
      span: [102, 19, 20]
    }
    location {
      path: [5, 2, 2, 6]
      span: [105, 2, 29]
      leading_comments: " Invalid recommendation expiry date.\n"
    }
    location {
      path: [5, 2, 2, 6, 1]
      span: [105, 2, 24]
    }
    location {
      path: [5, 2, 2, 6, 2]
      span: [105, 27, 28]
    }
    location {
      path: [5, 2, 2, 7]
      span: [108, 2, 30]
      leading_comments: " Invalid recommendation doctor name.\n"
    }
    location {
      path: [5, 2, 2, 7, 1]
      span: [108, 2, 25]
    }
    location {
      path: [5, 2, 2, 7, 2]
      span: [108, 28, 29]
    }
    location {
      path: [5, 2, 2, 8]
      span: [111, 2, 31]
      leading_comments: " Invalid recommendation doctor phone.\n"
    }
    location {
      path: [5, 2, 2, 8, 1]
      span: [111, 2, 26]
    }
    location {
      path: [5, 2, 2, 8, 2]
      span: [111, 29, 30]
    }
    location {
      path: [5, 2, 2, 9]
      span: [114, 2, 22]
      leading_comments: " Invalid USDL ID.\n"
    }
    location {
      path: [5, 2, 2, 9, 1]
      span: [114, 2, 17]
    }
    location {
      path: [5, 2, 2, 9, 2]
      span: [114, 20, 21]
    }
    location {
      path: [5, 2, 2, 10]
      span: [117, 2, 31]
      leading_comments: " Invalid USDL expiration date.\n"
    }
    location {
      path: [5, 2, 2, 10, 1]
      span: [117, 2, 25]
    }
    location {
      path: [5, 2, 2, 10, 2]
      span: [117, 28, 30]
    }
    location {
      path: [5, 2, 2, 11]
      span: [120, 2, 33]
      leading_comments: " Invalid USDL jurisdiction code.\n"
    }
    location {
      path: [5, 2, 2, 11, 1]
      span: [120, 2, 27]
    }
    location {
      path: [5, 2, 2, 11, 2]
      span: [120, 30, 32]
    }
    location {
      path: [5, 2, 2, 12]
      span: [123, 2, 24]
      leading_comments: " The account in question already exists.\n"
    }
    location {
      path: [5, 2, 2, 12, 1]
      span: [123, 2, 18]
    }
    location {
      path: [5, 2, 2, 12, 2]
      span: [123, 21, 23]
    }
    location {
      path: [5, 2, 2, 13]
      span: [126, 2, 30]
      leading_comments: " The account in question already exists, because the email in question is taken.\n"
    }
    location {
      path: [5, 2, 2, 13, 1]
      span: [126, 2, 24]
    }
    location {
      path: [5, 2, 2, 13, 2]
      span: [126, 27, 29]
    }
    location {
      path: [5, 2, 2, 14]
      span: [129, 2, 30]
      leading_comments: " The account in question already exists, because the phone number in question is taken.\n"
    }
    location {
      path: [5, 2, 2, 14, 1]
      span: [129, 2, 24]
    }
    location {
      path: [5, 2, 2, 14, 2]
      span: [129, 27, 29]
    }
    location {
      path: [5, 2, 2, 15]
      span: [132, 2, 34]
      leading_comments: " Invalid payload, in general.\n"
    }
    location {
      path: [5, 2, 2, 15, 1]
      span: [132, 2, 28]
    }
    location {
      path: [5, 2, 2, 15, 2]
      span: [132, 31, 33]
    }
    location {
      path: [5, 3]
      span: [137, 0, 149, 1]
      leading_comments: " Specifies statuses that an online shop itself may take, where it is either open/closed or only open for pickup or\n delivery.\n"
    }
    location {
      path: [5, 3, 1]
      span: [137, 5, 15]
    }
    location {
      path: [5, 3, 2, 0]
      span: [139, 2, 11]
      leading_comments: " The shop is currently open for business, for both delivery and pickup.\n"
    }
    location {
      path: [5, 3, 2, 0, 1]
      span: [139, 2, 6]
    }
    location {
      path: [5, 3, 2, 0, 2]
      span: [139, 9, 10]
    }
    location {
      path: [5, 3, 2, 1]
      span: [142, 2, 13]
      leading_comments: " The shop is currently closed.\n"
    }
    location {
      path: [5, 3, 2, 1, 1]
      span: [142, 2, 8]
    }
    location {
      path: [5, 3, 2, 1, 2]
      span: [142, 11, 12]
    }
    location {
      path: [5, 3, 2, 2]
      span: [145, 2, 20]
      leading_comments: " The shop is open, but for delivery only.\n"
    }
    location {
      path: [5, 3, 2, 2, 1]
      span: [145, 2, 15]
    }
    location {
      path: [5, 3, 2, 2, 2]
      span: [145, 18, 19]
    }
    location {
      path: [5, 3, 2, 3]
      span: [148, 2, 18]
      leading_comments: " The shop is open, but for pickup only.\n"
    }
    location {
      path: [5, 3, 2, 3, 1]
      span: [148, 2, 13]
    }
    location {
      path: [5, 3, 2, 3, 2]
      span: [148, 16, 17]
    }
    location {
      path: [4, 0]
      span: [152, 0, 168, 1]
      leading_comments: " Specifies an RPC operation to retrieve status information for the Shop API.\n"
    }
    location {
      path: [4, 0, 1]
      span: [152, 8, 12]
    }
    location {
      path: [4, 0, 3, 0]
      span: [153, 2, 154, 3]
    }
    location {
      path: [4, 0, 3, 0, 1]
      span: [153, 10, 17]
    }
    location {
      path: [4, 0, 3, 1]
      span: [156, 2, 159, 3]
    }
    location {
      path: [4, 0, 3, 1, 1]
      span: [156, 10, 18]
    }
    location {
      path: [4, 0, 3, 1, 2, 0]
      span: [158, 4, 38]
      leading_comments: " Current service status.\n"
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 4]
      span: [158, 4, 156, 20]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 6]
      span: [158, 4, 26]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 1]
      span: [158, 27, 33]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 3]
      span: [158, 36, 37]
    }
    location {
      path: [4, 0, 3, 2]
      span: [161, 2, 167, 3]
    }
    location {
      path: [4, 0, 3, 2, 1]
      span: [161, 10, 19]
    }
    location {
      path: [4, 0, 3, 2, 2, 0]
      span: [163, 4, 24]
      leading_comments: " Request for member verification.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 4]
      span: [163, 4, 161, 21]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 6]
      span: [163, 4, 11]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 1]
      span: [163, 12, 19]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 3]
      span: [163, 22, 23]
    }
    location {
      path: [4, 0, 3, 2, 2, 1]
      span: [166, 4, 26]
      leading_comments: " Response for member verification.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 4]
      span: [166, 4, 163, 24]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 6]
      span: [166, 4, 12]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 1]
      span: [166, 13, 21]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 3]
      span: [166, 24, 25]
    }
    location {
      path: [4, 1]
      span: [171, 0, 189, 1]
      leading_comments: " Specifies an RPC operation to check the status of an online store, for availability/hours status, etc.\n"
    }
    location {
      path: [4, 1, 1]
      span: [171, 8, 16]
    }
    location {
      path: [4, 1, 3, 0]
      span: [172, 2, 175, 3]
    }
    location {
      path: [4, 1, 3, 0, 1]
      span: [172, 10, 17]
    }
    location {
      path: [4, 1, 3, 0, 2, 0]
      span: [174, 4, 44]
      leading_comments: " Location key.\n"
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 4]
      span: [174, 4, 172, 19]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 6]
      span: [174, 4, 30]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 1]
      span: [174, 31, 39]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 3]
      span: [174, 42, 43]
    }
    location {
      path: [4, 1, 3, 1]
      span: [177, 2, 180, 3]
    }
    location {
      path: [4, 1, 3, 1, 1]
      span: [177, 10, 18]
    }
    location {
      path: [4, 1, 3, 1, 2, 0]
      span: [179, 4, 31]
      leading_comments: " Indicates the current status of the online shop in question.\n"
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 4]
      span: [179, 4, 177, 20]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 6]
      span: [179, 4, 14]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 1]
      span: [179, 15, 26]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 3]
      span: [179, 29, 30]
    }
    location {
      path: [4, 1, 3, 2]
      span: [182, 2, 188, 3]
    }
    location {
      path: [4, 1, 3, 2, 1]
      span: [182, 10, 19]
    }
    location {
      path: [4, 1, 3, 2, 2, 0]
      span: [184, 4, 24]
      leading_comments: " Request for shop status.\n"
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 4]
      span: [184, 4, 182, 21]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 6]
      span: [184, 4, 11]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 1]
      span: [184, 12, 19]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 3]
      span: [184, 22, 23]
    }
    location {
      path: [4, 1, 3, 2, 2, 1]
      span: [187, 4, 26]
      leading_comments: " Response to a request for shop status.\n"
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 4]
      span: [187, 4, 184, 24]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 6]
      span: [187, 4, 12]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 1]
      span: [187, 13, 21]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 3]
      span: [187, 24, 25]
    }
    location {
      path: [4, 2]
      span: [192, 0, 245, 1]
      leading_comments: " Specifies an RPC operation to enroll/onboard a new user as a member of a retail dispensary.\n"
    }
    location {
      path: [4, 2, 1]
      span: [192, 8, 20]
    }
    location {
      path: [4, 2, 3, 0]
      span: [193, 2, 222, 3]
    }
    location {
      path: [4, 2, 3, 0, 1]
      span: [193, 10, 17]
    }
    location {
      path: [4, 2, 3, 0, 2, 0]
      span: [195, 4, 29]
      leading_comments: " Person record we are enrolling as a member.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 4]
      span: [195, 4, 193, 19]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 6]
      span: [195, 4, 17]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 1]
      span: [195, 18, 24]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 3]
      span: [195, 27, 28]
    }
    location {
      path: [4, 2, 3, 0, 2, 1]
      span: [198, 4, 41]
      leading_comments: " Source for this enrollment.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 4]
      span: [198, 4, 195, 29]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 6]
      span: [198, 4, 29]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 1]
      span: [198, 30, 36]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 3]
      span: [198, 39, 40]
    }
    location {
      path: [4, 2, 3, 0, 2, 2]
      span: [201, 4, 23]
      leading_comments: " Channel that passed us this enrollment.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 4]
      span: [201, 4, 198, 41]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 5]
      span: [201, 4, 10]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 1]
      span: [201, 11, 18]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 3]
      span: [201, 21, 22]
    }
    location {
      path: [4, 2, 3, 0, 2, 3]
      span: [204, 4, 46]
      leading_comments: " Holds information about the user's cannabis recommendation.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 4]
      span: [204, 4, 201, 23]
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 6]
      span: [204, 4, 30]
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 1]
      span: [204, 31, 41]
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 3]
      span: [204, 44, 45]
    }
    location {
      path: [4, 2, 3, 0, 2, 4]
      span: [207, 4, 34]
      leading_comments: " Holds information about the user's driver's license.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 4, 4]
      span: [207, 4, 204, 46]
    }
    location {
      path: [4, 2, 3, 0, 2, 4, 6]
      span: [207, 4, 15]
    }
    location {
      path: [4, 2, 3, 0, 2, 4, 1]
      span: [207, 16, 29]
    }
    location {
      path: [4, 2, 3, 0, 2, 4, 3]
      span: [207, 32, 33]
    }
    location {
      path: [4, 2, 3, 0, 2, 5]
      span: [210, 4, 44]
      leading_comments: " Specifies the partner we are enrolling to.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 5, 4]
      span: [210, 4, 207, 34]
    }
    location {
      path: [4, 2, 3, 0, 2, 5, 6]
      span: [210, 4, 30]
    }
    location {
      path: [4, 2, 3, 0, 2, 5, 1]
      span: [210, 31, 39]
    }
    location {
      path: [4, 2, 3, 0, 2, 5, 3]
      span: [210, 42, 43]
    }
    location {
      path: [4, 2, 3, 0, 2, 6]
      span: [214, 4, 24]
      leading_comments: " Base64-encoded password. This is for transmission ONLY - do NOT store this value without first either encrypting\n it strongly, or perfoming a subsequent salt-and-SHA routine.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 6, 4]
      span: [214, 4, 210, 44]
    }
    location {
      path: [4, 2, 3, 0, 2, 6, 5]
      span: [214, 4, 10]
    }
    location {
      path: [4, 2, 3, 0, 2, 6, 1]
      span: [214, 11, 19]
    }
    location {
      path: [4, 2, 3, 0, 2, 6, 3]
      span: [214, 22, 23]
    }
    location {
      path: [4, 2, 3, 0, 2, 7]
      span: [218, 4, 21]
      leading_comments: " Flag to indicate that this is a dry run, and we should not actually write the user to any external\n or persistence systems.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 7, 4]
      span: [218, 4, 214, 24]
    }
    location {
      path: [4, 2, 3, 0, 2, 7, 5]
      span: [218, 4, 8]
    }
    location {
      path: [4, 2, 3, 0, 2, 7, 1]
      span: [218, 9, 16]
    }
    location {
      path: [4, 2, 3, 0, 2, 7, 3]
      span: [218, 19, 20]
    }
    location {
      path: [4, 2, 3, 0, 2, 8]
      span: [221, 4, 50]
      leading_comments: " Specifies information related to a cannabis consumer's consumption preferences.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 8, 4]
      span: [221, 4, 218, 21]
    }
    location {
      path: [4, 2, 3, 0, 2, 8, 6]
      span: [221, 4, 28]
    }
    location {
      path: [4, 2, 3, 0, 2, 8, 1]
      span: [221, 29, 45]
    }
    location {
      path: [4, 2, 3, 0, 2, 8, 3]
      span: [221, 48, 49]
    }
    location {
      path: [4, 2, 3, 1]
      span: [224, 2, 236, 3]
    }
    location {
      path: [4, 2, 3, 1, 1]
      span: [224, 10, 18]
    }
    location {
      path: [4, 2, 3, 1, 2, 0]
      span: [226, 4, 18]
      leading_comments: " Resulting ID from the new enrollment.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 4]
      span: [226, 4, 224, 20]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 5]
      span: [226, 4, 10]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 1]
      span: [226, 11, 13]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 3]
      span: [226, 16, 17]
    }
    location {
      path: [4, 2, 3, 1, 8, 0]
      span: [229, 4, 235, 5]
      leading_comments: " Result from the operation.\n"
    }
    location {
      path: [4, 2, 3, 1, 8, 0, 1]
      span: [229, 10, 16]
    }
    location {
      path: [4, 2, 3, 1, 2, 1]
      span: [231, 6, 28]
      leading_comments: " Foreign ID, i.e. local identifier assigned to a new user.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 5]
      span: [231, 6, 12]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 1]
      span: [231, 13, 23]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 3]
      span: [231, 26, 27]
    }
    location {
      path: [4, 2, 3, 1, 2, 2]
      span: [234, 6, 32]
      leading_comments: " Error that prevented a successful response.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 6]
      span: [234, 6, 21]
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 1]
      span: [234, 22, 27]
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 3]
      span: [234, 30, 31]
    }
    location {
      path: [4, 2, 3, 2]
      span: [238, 2, 244, 3]
    }
    location {
      path: [4, 2, 3, 2, 1]
      span: [238, 10, 19]
    }
    location {
      path: [4, 2, 3, 2, 2, 0]
      span: [240, 4, 24]
      leading_comments: " Request for member enrollment.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 4]
      span: [240, 4, 238, 21]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 6]
      span: [240, 4, 11]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 1]
      span: [240, 12, 19]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 3]
      span: [240, 22, 23]
    }
    location {
      path: [4, 2, 3, 2, 2, 1]
      span: [243, 4, 26]
      leading_comments: " Response to a request for member enrollment.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 4]
      span: [243, 4, 240, 24]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 6]
      span: [243, 4, 12]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 1]
      span: [243, 13, 21]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 3]
      span: [243, 24, 25]
    }
    location {
      path: [4, 3]
      span: [248, 0, 277, 1]
      leading_comments: " Specifies an RPC operation to validate that a web user is eligible for express and delivery orders.\n"
    }
    location {
      path: [4, 3, 1]
      span: [248, 8, 20]
    }
    location {
      path: [4, 3, 3, 0]
      span: [249, 2, 255, 3]
    }
    location {
      path: [4, 3, 3, 0, 1]
      span: [249, 10, 17]
    }
    location {
      path: [4, 3, 3, 0, 2, 0]
      span: [251, 4, 29]
      leading_comments: " Email address to verify, encoded in Base 64.\n"
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 4]
      span: [251, 4, 249, 19]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 5]
      span: [251, 4, 10]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 1]
      span: [251, 11, 24]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 3]
      span: [251, 27, 28]
    }
    location {
      path: [4, 3, 3, 0, 2, 1]
      span: [254, 4, 44]
      leading_comments: " Location key.\n"
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 4]
      span: [254, 4, 251, 29]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 6]
      span: [254, 4, 30]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 1]
      span: [254, 31, 39]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 3]
      span: [254, 42, 43]
    }
    location {
      path: [4, 3, 3, 1]
      span: [257, 2, 268, 3]
    }
    location {
      path: [4, 3, 3, 1, 1]
      span: [257, 10, 18]
    }
    location {
      path: [4, 3, 3, 1, 2, 0]
      span: [259, 4, 22]
      leading_comments: " Verification status - up/down.\n"
    }
    location {
      path: [4, 3, 3, 1, 2, 0, 4]
      span: [259, 4, 257, 20]
    }
    location {
      path: [4, 3, 3, 1, 2, 0, 5]
      span: [259, 4, 8]
    }
    location {
      path: [4, 3, 3, 1, 2, 0, 1]
      span: [259, 9, 17]
    }
    location {
      path: [4, 3, 3, 1, 2, 0, 3]
      span: [259, 20, 21]
    }
    location {
      path: [4, 3, 3, 1, 8, 0]
      span: [261, 4, 267, 5]
    }
    location {
      path: [4, 3, 3, 1, 8, 0, 1]
      span: [261, 10, 16]
    }
    location {
      path: [4, 3, 3, 1, 2, 1]
      span: [263, 6, 37]
      leading_comments: " Verified customer record.\n"
    }
    location {
      path: [4, 3, 3, 1, 2, 1, 6]
      span: [263, 6, 23]
    }
    location {
      path: [4, 3, 3, 1, 2, 1, 1]
      span: [263, 24, 32]
    }
    location {
      path: [4, 3, 3, 1, 2, 1, 3]
      span: [263, 35, 36]
    }
    location {
      path: [4, 3, 3, 1, 2, 2]
      span: [266, 6, 28]
      leading_comments: " Error that prevented verification, if any.\n"
    }
    location {
      path: [4, 3, 3, 1, 2, 2, 6]
      span: [266, 6, 17]
    }
    location {
      path: [4, 3, 3, 1, 2, 2, 1]
      span: [266, 18, 23]
    }
    location {
      path: [4, 3, 3, 1, 2, 2, 3]
      span: [266, 26, 27]
    }
    location {
      path: [4, 3, 3, 2]
      span: [270, 2, 276, 3]
    }
    location {
      path: [4, 3, 3, 2, 1]
      span: [270, 10, 19]
    }
    location {
      path: [4, 3, 3, 2, 2, 0]
      span: [272, 4, 24]
      leading_comments: " Request for member verification.\n"
    }
    location {
      path: [4, 3, 3, 2, 2, 0, 4]
      span: [272, 4, 270, 21]
    }
    location {
      path: [4, 3, 3, 2, 2, 0, 6]
      span: [272, 4, 11]
    }
    location {
      path: [4, 3, 3, 2, 2, 0, 1]
      span: [272, 12, 19]
    }
    location {
      path: [4, 3, 3, 2, 2, 0, 3]
      span: [272, 22, 23]
    }
    location {
      path: [4, 3, 3, 2, 2, 1]
      span: [275, 4, 26]
      leading_comments: " Response for member verification.\n"
    }
    location {
      path: [4, 3, 3, 2, 2, 1, 4]
      span: [275, 4, 272, 24]
    }
    location {
      path: [4, 3, 3, 2, 2, 1, 6]
      span: [275, 4, 12]
    }
    location {
      path: [4, 3, 3, 2, 2, 1, 1]
      span: [275, 13, 21]
    }
    location {
      path: [4, 3, 3, 2, 2, 1, 3]
      span: [275, 24, 25]
    }
    location {
      path: [4, 4]
      span: [280, 0, 304, 1]
      leading_comments: " Specifies a request and response cycle to validate a US zipcode for delivery eligibility.\n"
    }
    location {
      path: [4, 4, 1]
      span: [280, 8, 20]
    }
    location {
      path: [4, 4, 3, 0]
      span: [281, 2, 287, 3]
    }
    location {
      path: [4, 4, 3, 0, 1]
      span: [281, 10, 17]
    }
    location {
      path: [4, 4, 3, 0, 2, 0]
      span: [283, 4, 23]
      leading_comments: " Zip code to check.\n"
    }
    location {
      path: [4, 4, 3, 0, 2, 0, 4]
      span: [283, 4, 281, 19]
    }
    location {
      path: [4, 4, 3, 0, 2, 0, 5]
      span: [283, 4, 10]
    }
    location {
      path: [4, 4, 3, 0, 2, 0, 1]
      span: [283, 11, 18]
    }
    location {
      path: [4, 4, 3, 0, 2, 0, 3]
      span: [283, 21, 22]
    }
    location {
      path: [4, 4, 3, 0, 2, 1]
      span: [286, 4, 44]
      leading_comments: " Location to check.\n"
    }
    location {
      path: [4, 4, 3, 0, 2, 1, 4]
      span: [286, 4, 283, 23]
    }
    location {
      path: [4, 4, 3, 0, 2, 1, 6]
      span: [286, 4, 30]
    }
    location {
      path: [4, 4, 3, 0, 2, 1, 1]
      span: [286, 31, 39]
    }
    location {
      path: [4, 4, 3, 0, 2, 1, 3]
      span: [286, 42, 43]
    }
    location {
      path: [4, 4, 3, 1]
      span: [289, 2, 295, 3]
    }
    location {
      path: [4, 4, 3, 1, 1]
      span: [289, 10, 18]
    }
    location {
      path: [4, 4, 3, 1, 2, 0]
      span: [291, 4, 23]
      leading_comments: " Whether that zipcode is supported for delivery or not.\n"
    }
    location {
      path: [4, 4, 3, 1, 2, 0, 4]
      span: [291, 4, 289, 20]
    }
    location {
      path: [4, 4, 3, 1, 2, 0, 5]
      span: [291, 4, 8]
    }
    location {
      path: [4, 4, 3, 1, 2, 0, 1]
      span: [291, 9, 18]
    }
    location {
      path: [4, 4, 3, 1, 2, 0, 3]
      span: [291, 21, 22]
    }
    location {
      path: [4, 4, 3, 1, 2, 1]
      span: [294, 4, 31]
      leading_comments: " Order minimum for delivery in this zipcode.\n"
    }
    location {
      path: [4, 4, 3, 1, 2, 1, 4]
      span: [294, 4, 291, 23]
    }
    location {
      path: [4, 4, 3, 1, 2, 1, 5]
      span: [294, 4, 9]
    }
    location {
      path: [4, 4, 3, 1, 2, 1, 1]
      span: [294, 10, 26]
    }
    location {
      path: [4, 4, 3, 1, 2, 1, 3]
      span: [294, 29, 30]
    }
    location {
      path: [4, 4, 3, 2]
      span: [297, 2, 303, 3]
    }
    location {
      path: [4, 4, 3, 2, 1]
      span: [297, 10, 19]
    }
    location {
      path: [4, 4, 3, 2, 2, 0]
      span: [299, 4, 24]
      leading_comments: " Request for zipcode eligibility verification.\n"
    }
    location {
      path: [4, 4, 3, 2, 2, 0, 4]
      span: [299, 4, 297, 21]
    }
    location {
      path: [4, 4, 3, 2, 2, 0, 6]
      span: [299, 4, 11]
    }
    location {
      path: [4, 4, 3, 2, 2, 0, 1]
      span: [299, 12, 19]
    }
    location {
      path: [4, 4, 3, 2, 2, 0, 3]
      span: [299, 22, 23]
    }
    location {
      path: [4, 4, 3, 2, 2, 1]
      span: [302, 4, 26]
      leading_comments: " Response to a request for zipcode eligibility verification.\n"
    }
    location {
      path: [4, 4, 3, 2, 2, 1, 4]
      span: [302, 4, 299, 24]
    }
    location {
      path: [4, 4, 3, 2, 2, 1, 6]
      span: [302, 4, 12]
    }
    location {
      path: [4, 4, 3, 2, 2, 1, 1]
      span: [302, 13, 21]
    }
    location {
      path: [4, 4, 3, 2, 2, 1, 3]
      span: [302, 24, 25]
    }
    location {
      path: [4, 5]
      span: [307, 0, 331, 1]
      leading_comments: " Specifies an RPC operation to submit an express pickup or delivery order.\n"
    }
    location {
      path: [4, 5, 1]
      span: [307, 8, 19]
    }
    location {
      path: [4, 5, 3, 0]
      span: [308, 2, 314, 3]
    }
    location {
      path: [4, 5, 3, 0, 1]
      span: [308, 10, 17]
    }
    location {
      path: [4, 5, 3, 0, 2, 0]
      span: [310, 4, 29]
      leading_comments: " Order to submit.\n"
    }
    location {
      path: [4, 5, 3, 0, 2, 0, 4]
      span: [310, 4, 308, 19]
    }
    location {
      path: [4, 5, 3, 0, 2, 0, 6]
      span: [310, 4, 18]
    }
    location {
      path: [4, 5, 3, 0, 2, 0, 1]
      span: [310, 19, 24]
    }
    location {
      path: [4, 5, 3, 0, 2, 0, 3]
      span: [310, 27, 28]
    }
    location {
      path: [4, 5, 3, 0, 2, 1]
      span: [313, 4, 44]
      leading_comments: " Location to check.\n"
    }
    location {
      path: [4, 5, 3, 0, 2, 1, 4]
      span: [313, 4, 310, 29]
    }
    location {
      path: [4, 5, 3, 0, 2, 1, 6]
      span: [313, 4, 30]
    }
    location {
      path: [4, 5, 3, 0, 2, 1, 1]
      span: [313, 31, 39]
    }
    location {
      path: [4, 5, 3, 0, 2, 1, 3]
      span: [313, 42, 43]
    }
    location {
      path: [4, 5, 3, 1]
      span: [316, 2, 322, 3]
    }
    location {
      path: [4, 5, 3, 1, 1]
      span: [316, 10, 18]
    }
    location {
      path: [4, 5, 3, 1, 2, 0]
      span: [318, 4, 25]
      leading_comments: " Error, if any.\n"
    }
    location {
      path: [4, 5, 3, 1, 2, 0, 4]
      span: [318, 4, 316, 20]
    }
    location {
      path: [4, 5, 3, 1, 2, 0, 6]
      span: [318, 4, 14]
    }
    location {
      path: [4, 5, 3, 1, 2, 0, 1]
      span: [318, 15, 20]
    }
    location {
      path: [4, 5, 3, 1, 2, 0, 3]
      span: [318, 23, 24]
    }
    location {
      path: [4, 5, 3, 1, 2, 1]
      span: [321, 4, 24]
      leading_comments: " ID assigned to the new order, if no error occurred.\n"
    }
    location {
      path: [4, 5, 3, 1, 2, 1, 4]
      span: [321, 4, 318, 25]
    }
    location {
      path: [4, 5, 3, 1, 2, 1, 5]
      span: [321, 4, 10]
    }
    location {
      path: [4, 5, 3, 1, 2, 1, 1]
      span: [321, 11, 19]
    }
    location {
      path: [4, 5, 3, 1, 2, 1, 3]
      span: [321, 22, 23]
    }
    location {
      path: [4, 5, 3, 2]
      span: [324, 2, 330, 3]
    }
    location {
      path: [4, 5, 3, 2, 1]
      span: [324, 10, 19]
    }
    location {
      path: [4, 5, 3, 2, 2, 0]
      span: [326, 4, 24]
      leading_comments: " Request for order submission.\n"
    }
    location {
      path: [4, 5, 3, 2, 2, 0, 4]
      span: [326, 4, 324, 21]
    }
    location {
      path: [4, 5, 3, 2, 2, 0, 6]
      span: [326, 4, 11]
    }
    location {
      path: [4, 5, 3, 2, 2, 0, 1]
      span: [326, 12, 19]
    }
    location {
      path: [4, 5, 3, 2, 2, 0, 3]
      span: [326, 22, 23]
    }
    location {
      path: [4, 5, 3, 2, 2, 1]
      span: [329, 4, 26]
      leading_comments: " Response from order submission.\n"
    }
    location {
      path: [4, 5, 3, 2, 2, 1, 4]
      span: [329, 4, 326, 24]
    }
    location {
      path: [4, 5, 3, 2, 2, 1, 6]
      span: [329, 4, 12]
    }
    location {
      path: [4, 5, 3, 2, 2, 1, 1]
      span: [329, 13, 21]
    }
    location {
      path: [4, 5, 3, 2, 2, 1, 3]
      span: [329, 24, 25]
    }
    location {
      path: [4, 6]
      span: [334, 0, 358, 1]
      leading_comments: " Specifies an RPC operation to retrieve information about an existing express pickup or delivery order.\n"
    }
    location {
      path: [4, 6, 1]
      span: [334, 8, 16]
    }
    location {
      path: [4, 6, 3, 0]
      span: [335, 2, 341, 3]
    }
    location {
      path: [4, 6, 3, 0, 1]
      span: [335, 10, 17]
    }
    location {
      path: [4, 6, 3, 0, 2, 0]
      span: [337, 4, 24]
      leading_comments: " Order ID to retrieve.\n"
    }
    location {
      path: [4, 6, 3, 0, 2, 0, 4]
      span: [337, 4, 335, 19]
    }
    location {
      path: [4, 6, 3, 0, 2, 0, 5]
      span: [337, 4, 10]
    }
    location {
      path: [4, 6, 3, 0, 2, 0, 1]
      span: [337, 11, 19]
    }
    location {
      path: [4, 6, 3, 0, 2, 0, 3]
      span: [337, 22, 23]
    }
    location {
      path: [4, 6, 3, 0, 2, 1]
      span: [340, 4, 44]
      leading_comments: " Partner/location code.\n"
    }
    location {
      path: [4, 6, 3, 0, 2, 1, 4]
      span: [340, 4, 337, 24]
    }
    location {
      path: [4, 6, 3, 0, 2, 1, 6]
      span: [340, 4, 30]
    }
    location {
      path: [4, 6, 3, 0, 2, 1, 1]
      span: [340, 31, 39]
    }
    location {
      path: [4, 6, 3, 0, 2, 1, 3]
      span: [340, 42, 43]
    }
    location {
      path: [4, 6, 3, 1]
      span: [343, 2, 349, 3]
    }
    location {
      path: [4, 6, 3, 1, 1]
      span: [343, 10, 18]
    }
    location {
      path: [4, 6, 3, 1, 2, 0]
      span: [345, 4, 21]
      leading_comments: " Whether the order could be found or not.\n"
    }
    location {
      path: [4, 6, 3, 1, 2, 0, 4]
      span: [345, 4, 343, 20]
    }
    location {
      path: [4, 6, 3, 1, 2, 0, 5]
      span: [345, 4, 8]
    }
    location {
      path: [4, 6, 3, 1, 2, 0, 1]
      span: [345, 9, 16]
    }
    location {
      path: [4, 6, 3, 1, 2, 0, 3]
      span: [345, 19, 20]
    }
    location {
      path: [4, 6, 3, 1, 2, 1]
      span: [348, 4, 29]
      leading_comments: " Order identified by that ID, if it could be found.\n"
    }
    location {
      path: [4, 6, 3, 1, 2, 1, 4]
      span: [348, 4, 345, 21]
    }
    location {
      path: [4, 6, 3, 1, 2, 1, 6]
      span: [348, 4, 18]
    }
    location {
      path: [4, 6, 3, 1, 2, 1, 1]
      span: [348, 19, 24]
    }
    location {
      path: [4, 6, 3, 1, 2, 1, 3]
      span: [348, 27, 28]
    }
    location {
      path: [4, 6, 3, 2]
      span: [351, 2, 357, 3]
    }
    location {
      path: [4, 6, 3, 2, 1]
      span: [351, 10, 19]
    }
    location {
      path: [4, 6, 3, 2, 2, 0]
      span: [353, 4, 24]
      leading_comments: " Request for order status.\n"
    }
    location {
      path: [4, 6, 3, 2, 2, 0, 4]
      span: [353, 4, 351, 21]
    }
    location {
      path: [4, 6, 3, 2, 2, 0, 6]
      span: [353, 4, 11]
    }
    location {
      path: [4, 6, 3, 2, 2, 0, 1]
      span: [353, 12, 19]
    }
    location {
      path: [4, 6, 3, 2, 2, 0, 3]
      span: [353, 22, 23]
    }
    location {
      path: [4, 6, 3, 2, 2, 1]
      span: [356, 4, 26]
      leading_comments: " Response describing order status.\n"
    }
    location {
      path: [4, 6, 3, 2, 2, 1, 4]
      span: [356, 4, 353, 24]
    }
    location {
      path: [4, 6, 3, 2, 2, 1, 6]
      span: [356, 4, 12]
    }
    location {
      path: [4, 6, 3, 2, 2, 1, 1]
      span: [356, 13, 21]
    }
    location {
      path: [4, 6, 3, 2, 2, 1, 3]
      span: [356, 24, 25]
    }
    location {
      path: [6, 0]
      span: [362, 0, 417, 1]
      leading_comments: " Specifies the retail shop service, which provides functionality for pickup and delivery orders, member verification,\n member enrollment, and more.\n"
    }
    location {
      path: [6, 0, 1]
      span: [362, 8, 12]
    }
    location {
      path: [6, 0, 2, 0]
      span: [364, 2, 366, 3]
      leading_comments: " Ping the server.\n"
    }
    location {
      path: [6, 0, 2, 0, 1]
      span: [364, 6, 10]
    }
    location {
      path: [6, 0, 2, 0, 2]
      span: [364, 11, 23]
    }
    location {
      path: [6, 0, 2, 0, 3]
      span: [364, 34, 47]
    }
    location {
      path: [6, 0, 2, 0, 4]
      span: [365, 4, 51]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0]
      span: [365, 4, 51]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2]
      span: [365, 11, 32]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0]
      span: [365, 11, 28]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [365, 12, 27]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 1]
      span: [365, 29, 32]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 1, 1]
      span: [365, 29, 32]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 7]
      span: [365, 35, 50]
    }
    location {
      path: [6, 0, 2, 1]
      span: [369, 2, 371, 3]
      leading_comments: " Query info and status of a particular shop.\n"
    }
    location {
      path: [6, 0, 2, 1, 1]
      span: [369, 6, 14]
    }
    location {
      path: [6, 0, 2, 1, 2]
      span: [369, 15, 31]
    }
    location {
      path: [6, 0, 2, 1, 3]
      span: [369, 42, 59]
    }
    location {
      path: [6, 0, 2, 1, 4]
      span: [370, 4, 115]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0]
      span: [370, 4, 115]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2]
      span: [370, 11, 32]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 0]
      span: [370, 11, 28]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 0, 1]
      span: [370, 12, 27]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 1]
      span: [370, 29, 32]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 1, 1]
      span: [370, 29, 32]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 7]
      span: [370, 35, 114]
    }
    location {
      path: [6, 0, 2, 2]
      span: [374, 2, 383, 3]
      leading_comments: " Enroll a new member.\n"
    }
    location {
      path: [6, 0, 2, 2, 1]
      span: [374, 6, 18]
    }
    location {
      path: [6, 0, 2, 2, 2]
      span: [374, 19, 39]
    }
    location {
      path: [6, 0, 2, 2, 3]
      span: [374, 50, 71]
    }
    location {
      path: [6, 0, 2, 2, 4]
      span: [375, 4, 382, 6]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0]
      span: [375, 4, 382, 6]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2]
      span: [375, 11, 28]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2, 0]
      span: [375, 11, 28]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2, 0, 1]
      span: [375, 12, 27]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 8]
      span: [375, 31, 382, 5]
    }
    location {
      path: [6, 0, 2, 3]
      span: [386, 2, 388, 3]
      leading_comments: " Check if a given USPS zip code is supported for delivery.\n"
    }
    location {
      path: [6, 0, 2, 3, 1]
      span: [386, 6, 18]
    }
    location {
      path: [6, 0, 2, 3, 2]
      span: [386, 19, 39]
    }
    location {
      path: [6, 0, 2, 3, 3]
      span: [386, 50, 71]
    }
    location {
      path: [6, 0, 2, 3, 4]
      span: [387, 4, 124]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0]
      span: [387, 4, 124]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2]
      span: [387, 11, 32]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 0]
      span: [387, 11, 28]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 0, 1]
      span: [387, 12, 27]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 1]
      span: [387, 29, 32]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 1, 1]
      span: [387, 29, 32]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 7]
      span: [387, 35, 123]
    }
    location {
      path: [6, 0, 2, 4]
      span: [391, 2, 393, 3]
      leading_comments: " Verify a member by their email address.\n"
    }
    location {
      path: [6, 0, 2, 4, 1]
      span: [391, 6, 18]
    }
    location {
      path: [6, 0, 2, 4, 2]
      span: [391, 19, 39]
    }
    location {
      path: [6, 0, 2, 4, 3]
      span: [391, 50, 71]
    }
    location {
      path: [6, 0, 2, 4, 4]
      span: [392, 4, 136]
    }
    location {
      path: [6, 0, 2, 4, 4, 999, 0]
      span: [392, 4, 136]
    }
    location {
      path: [6, 0, 2, 4, 4, 999, 0, 2]
      span: [392, 11, 32]
    }
    location {
      path: [6, 0, 2, 4, 4, 999, 0, 2, 0]
      span: [392, 11, 28]
    }
    location {
      path: [6, 0, 2, 4, 4, 999, 0, 2, 0, 1]
      span: [392, 12, 27]
    }
    location {
      path: [6, 0, 2, 4, 4, 999, 0, 2, 1]
      span: [392, 29, 32]
    }
    location {
      path: [6, 0, 2, 4, 4, 999, 0, 2, 1, 1]
      span: [392, 29, 32]
    }
    location {
      path: [6, 0, 2, 4, 4, 999, 0, 7]
      span: [392, 35, 135]
    }
    location {
      path: [6, 0, 2, 5]
      span: [396, 2, 406, 3]
      leading_comments: " Submit an order for delivery or pickup.\n"
    }
    location {
      path: [6, 0, 2, 5, 1]
      span: [396, 6, 17]
    }
    location {
      path: [6, 0, 2, 5, 2]
      span: [396, 18, 37]
    }
    location {
      path: [6, 0, 2, 5, 3]
      span: [396, 48, 68]
    }
    location {
      path: [6, 0, 2, 5, 4]
      span: [397, 4, 405, 6]
    }
    location {
      path: [6, 0, 2, 5, 4, 999, 0]
      span: [397, 4, 405, 6]
    }
    location {
      path: [6, 0, 2, 5, 4, 999, 0, 2]
      span: [397, 11, 28]
    }
    location {
      path: [6, 0, 2, 5, 4, 999, 0, 2, 0]
      span: [397, 11, 28]
    }
    location {
      path: [6, 0, 2, 5, 4, 999, 0, 2, 0, 1]
      span: [397, 12, 27]
    }
    location {
      path: [6, 0, 2, 5, 4, 999, 0, 8]
      span: [397, 31, 405, 5]
    }
    location {
      path: [6, 0, 2, 6]
      span: [409, 2, 416, 3]
      leading_comments: " Retrieve an existing order.\n"
    }
    location {
      path: [6, 0, 2, 6, 1]
      span: [409, 6, 14]
    }
    location {
      path: [6, 0, 2, 6, 2]
      span: [409, 15, 31]
    }
    location {
      path: [6, 0, 2, 6, 3]
      span: [409, 42, 59]
    }
    location {
      path: [6, 0, 2, 6, 4]
      span: [410, 4, 415, 6]
    }
    location {
      path: [6, 0, 2, 6, 4, 999, 0]
      span: [410, 4, 415, 6]
    }
    location {
      path: [6, 0, 2, 6, 4, 999, 0, 2]
      span: [410, 11, 28]
    }
    location {
      path: [6, 0, 2, 6, 4, 999, 0, 2, 0]
      span: [410, 11, 28]
    }
    location {
      path: [6, 0, 2, 6, 4, 999, 0, 2, 0, 1]
      span: [410, 12, 27]
    }
    location {
      path: [6, 0, 2, 6, 4, 999, 0, 8]
      span: [410, 31, 415, 5]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/Version.proto"
  package: "structs"
  dependency: "bq_field.proto"
  message_type {
    name: "VersionSpec"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Version specified by arbitrary name."
      }
      oneof_index: 0
      json_name: "name"
    }
    oneof_decl {
      name: "spec"
    }
  }
  options {
    java_package: "io.bloombox.schema.struct"
    java_outer_classname: "Version"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 23, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 50]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 50]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 49]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 40]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 40]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 39]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [4, 0]
      span: [15, 0, 23, 1]
      leading_comments: " Structure that allows universal specification of most common version patterns.\n"
    }
    location {
      path: [4, 0, 1]
      span: [15, 8, 19]
    }
    location {
      path: [4, 0, 8, 0]
      span: [17, 2, 22, 3]
      leading_comments: " Specifies one of a few eligible version specification structures.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [17, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [19, 4, 21, 6]
      leading_comments: " Version specified by arbitrary name.\n"
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [19, 4, 10]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [19, 11, 15]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [19, 18, 19]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [19, 20, 21, 5]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [20, 6, 74]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [20, 6, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [20, 6, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [20, 7, 32]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [20, 36, 74]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/Scope.proto"
  package: "analytics"
  dependency: "bq_field.proto"
  message_type {
    name: "Scope"
    field {
      name: "partner"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Partner scope. Specifies, each-if-applicable and only in the following order-of-scope, the partner code, location code, and partner co-located device UUID that reported an event."
      }
      json_name: "partner"
    }
    field {
      name: "commercial"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Commercial scope. Specifies, each-if-applicable and only in the following order-of-scope, the section name, product key, and order key."
      }
      json_name: "commercial"
    }
    field {
      name: "order"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Order scope. Specifies, only if there is an active order, the order ID that was active when the event was sent."
      }
      json_name: "order"
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry"
    java_outer_classname: "AnalyticsScope"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 34, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 17]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 52]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [4, 0]
      span: [17, 0, 34, 1]
      leading_comments: " Specifies scope options applied to an event, including its \"partner scope,\" (or the partner/location/device under\n which the event was logged), and its \"commercial scope,\" (indicating the section/item/order involved in an event\n transaction), among others.\n"
    }
    location {
      path: [4, 0, 1]
      span: [17, 8, 13]
    }
    location {
      path: [4, 0, 2, 0]
      span: [20, 2, 22, 4]
      leading_comments: " Partner scope. Specifies, each-if-applicable and only in the following order-of-scope, the partner code, location\n code, and partner co-located device UUID that reported an event.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [20, 2, 17, 15]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [20, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [20, 9, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [20, 19, 20]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [20, 21, 22, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [21, 4, 214]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [21, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [21, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [21, 34, 214]
    }
    location {
      path: [4, 0, 2, 1]
      span: [26, 2, 28, 4]
      leading_comments: " Commercial scope. Specifies, each-if-applicable and only in the following order-of-scope, menu section name and\n product key.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [26, 2, 22, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [26, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [26, 9, 19]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [26, 22, 23]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [26, 24, 28, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [27, 4, 171]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [27, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [27, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [27, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [27, 34, 171]
    }
    location {
      path: [4, 0, 2, 2]
      span: [31, 2, 33, 4]
      leading_comments: " Order scope. Specifies, only if there is an active order, the order ID that was active when the event was sent.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [31, 2, 28, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [31, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [31, 9, 14]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [31, 17, 18]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [31, 19, 33, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [32, 4, 147]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [32, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [32, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [32, 34, 147]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/context/OS.proto"
  package: "analytics.context"
  dependency: "bq_field.proto"
  dependency: "structs/Version.proto"
  message_type {
    name: "DeviceOS"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.context.OSType"
      options {
        1022: 1
        1025: "Type of Operating System being expressed or specified."
      }
      json_name: "type"
    }
    field {
      name: "version"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.VersionSpec"
      options {
        1025: "Version of the OS running on the device."
      }
      json_name: "version"
    }
  }
  enum_type {
    name: "OSType"
    value {
      name: "OS_UNKNOWN"
      number: 0
    }
    value {
      name: "iOS"
      number: 100
    }
    value {
      name: "macOS"
      number: 101
    }
    value {
      name: "tvOS"
      number: 102
    }
    value {
      name: "watchOS"
      number: 103
    }
    value {
      name: "ANDROID"
      number: 200
    }
    value {
      name: "ANDROID_WEAR"
      number: 201
    }
    value {
      name: "WINDOWS"
      number: 4
    }
    value {
      name: "WINDOWS_PHONE"
      number: 5
    }
    value {
      name: "LINUX"
      number: 6
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry.context"
    java_outer_classname: "OperatingSystemContext"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 62, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 55]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 55]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 54]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [12, 7, 30]
    }
    location {
      path: [5, 0]
      span: [17, 0, 47, 1]
      leading_comments: " Specifies a device context where code is running natively. This is most applicable to native mobile applications and\n server applications.\n"
    }
    location {
      path: [5, 0, 1]
      span: [17, 5, 11]
    }
    location {
      path: [5, 0, 2, 0]
      span: [19, 2, 17]
      leading_comments: " Specifies that the OS is unknown or not applicable in this circumstance.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [19, 2, 12]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [19, 15, 16]
    }
    location {
      path: [5, 0, 2, 1]
      span: [22, 2, 12]
      leading_comments: " Specifies that the OS is iOS on an iPhone, iPad or iPod.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [22, 2, 5]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [22, 8, 11]
    }
    location {
      path: [5, 0, 2, 2]
      span: [25, 2, 14]
      leading_comments: " Specifies that the OS is macOS on an Apple Mac desktop or laptop.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [25, 2, 7]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [25, 10, 13]
    }
    location {
      path: [5, 0, 2, 3]
      span: [28, 2, 13]
      leading_comments: " Specifies that the OS is tvOS on an Apple TV device.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [28, 2, 6]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [28, 9, 12]
    }
    location {
      path: [5, 0, 2, 4]
      span: [31, 2, 16]
      leading_comments: " Specifies that the OS is watchOS running on an Apple Watch.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [31, 2, 9]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [31, 12, 15]
    }
    location {
      path: [5, 0, 2, 5]
      span: [34, 2, 16]
      leading_comments: " Specifies that the OS is Android on a phone or tablet or other device.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [34, 2, 9]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [34, 12, 15]
    }
    location {
      path: [5, 0, 2, 6]
      span: [37, 2, 21]
      leading_comments: " Specifies that the OS is Android Wear on some embedded wearable device, like a watch or Google Glass.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [37, 2, 14]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [37, 17, 20]
    }
    location {
      path: [5, 0, 2, 7]
      span: [40, 2, 14]
      leading_comments: " Specifies that the OS is Windows on a desktop, laptop, or some other device.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [40, 2, 9]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [40, 12, 13]
    }
    location {
      path: [5, 0, 2, 8]
      span: [43, 2, 20]
      leading_comments: " Specifies that the OS is Windows, running on a mobile device of some kind.\n"
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [43, 2, 15]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [43, 18, 19]
    }
    location {
      path: [5, 0, 2, 9]
      span: [46, 2, 12]
      leading_comments: " Specifies that the OS is some form of Linux.\n"
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [46, 2, 7]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [46, 10, 11]
    }
    location {
      path: [4, 0]
      span: [51, 0, 62, 1]
      leading_comments: " Structure describing a device's operating system, including type and version.\n"
    }
    location {
      path: [4, 0, 1]
      span: [51, 8, 16]
    }
    location {
      path: [4, 0, 2, 0]
      span: [53, 2, 56, 4]
      leading_comments: " Type of Operating System being expressed or specified.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [53, 2, 51, 18]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [53, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [53, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [53, 16, 17]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [53, 18, 56, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [54, 4, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [54, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [54, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [54, 5, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [54, 30, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1]
      span: [55, 4, 90]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2]
      span: [55, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0]
      span: [55, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [55, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 7]
      span: [55, 34, 90]
    }
    location {
      path: [4, 0, 2, 1]
      span: [59, 2, 61, 4]
      leading_comments: " Version of the OS running on the device.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [59, 2, 56, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [59, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [59, 22, 29]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [59, 32, 33]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [59, 34, 61, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [60, 4, 76]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [60, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [60, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [60, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [60, 34, 76]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/context/Library.proto"
  package: "analytics.context"
  dependency: "bq_field.proto"
  dependency: "structs/Version.proto"
  message_type {
    name: "DeviceLibrary"
    field {
      name: "variant"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1022: 1
        1025: "Variant name of the library being used to transmit data."
      }
      json_name: "variant"
    }
    field {
      name: "version"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.VersionSpec"
      options {
        1022: 1
        1025: "Version specification for the library being used to transmit data."
      }
      json_name: "version"
    }
    field {
      name: "client"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.context.APIClient"
      options {
        1025: "Specifies which internal Bloombox library sent this event, if any."
      }
      json_name: "client"
    }
  }
  enum_type {
    name: "APIClient"
    value {
      name: "UNIDENTIFIED"
      number: 0
    }
    value {
      name: "JAVA_SCRIPT"
      number: 1
    }
    value {
      name: "SWIFT"
      number: 2
    }
    value {
      name: "JAVA"
      number: 3
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry.context"
    java_outer_classname: "LibraryContext"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 49, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [12, 7, 30]
    }
    location {
      path: [5, 0]
      span: [16, 0, 28, 1]
      leading_comments: " Specifies known API client libraries, produced internally by Bloombox.\n"
    }
    location {
      path: [5, 0, 1]
      span: [16, 5, 14]
    }
    location {
      path: [5, 0, 2, 0]
      span: [18, 2, 19]
      leading_comments: " The underlying library specified no known API client library.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [18, 2, 14]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [18, 17, 18]
    }
    location {
      path: [5, 0, 2, 1]
      span: [21, 2, 18]
      leading_comments: " The underlying library is the official Bloombox JS Client.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [21, 2, 13]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [21, 16, 17]
    }
    location {
      path: [5, 0, 2, 2]
      span: [24, 2, 12]
      leading_comments: " The underlying library is the official Bloombox Swift Client.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [24, 2, 7]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [24, 10, 11]
    }
    location {
      path: [5, 0, 2, 3]
      span: [27, 2, 11]
      leading_comments: " The underlying library is the official Bloombox Java Client.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [27, 2, 6]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [27, 9, 10]
    }
    location {
      path: [4, 0]
      span: [32, 0, 49, 1]
      leading_comments: " Specifies information about the library being used to transmit data.\n"
    }
    location {
      path: [4, 0, 1]
      span: [32, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [34, 2, 37, 4]
      leading_comments: " Variant name of the library being used to transmit data.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [34, 2, 32, 23]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [34, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [34, 9, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [34, 19, 20]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [34, 21, 37, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [35, 4, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [35, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [35, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [35, 5, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [35, 30, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1]
      span: [36, 4, 92]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2]
      span: [36, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0]
      span: [36, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [36, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 7]
      span: [36, 34, 92]
    }
    location {
      path: [4, 0, 2, 1]
      span: [40, 2, 43, 4]
      leading_comments: " Version specification for the library being used to transmit data.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [40, 2, 37, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [40, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [40, 22, 29]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [40, 32, 33]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [40, 34, 43, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [41, 4, 34]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [41, 4, 27]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [41, 4, 27]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [41, 5, 26]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 3]
      span: [41, 30, 34]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1]
      span: [42, 4, 102]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2]
      span: [42, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2, 0]
      span: [42, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2, 0, 1]
      span: [42, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 7]
      span: [42, 34, 102]
    }
    location {
      path: [4, 0, 2, 2]
      span: [46, 2, 48, 4]
      leading_comments: " Specifies, if applicable, the internally-produced client library in use.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [46, 2, 43, 4]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [46, 2, 11]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [46, 12, 18]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [46, 21, 22]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [46, 23, 48, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [47, 4, 102]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [47, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [47, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [47, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [47, 34, 102]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/context/Application.proto"
  package: "analytics.context"
  dependency: "bq_field.proto"
  dependency: "structs/Version.proto"
  message_type {
    name: "WebApplication"
    field {
      name: "origin"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Specifies an origin for a web application."
      }
      json_name: "origin"
    }
    field {
      name: "location"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Full, absolute URL the user was at when the event was sent."
      }
      json_name: "location"
    }
    field {
      name: "anchor"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Anchor in the URL, if any."
      }
      json_name: "anchor"
    }
    field {
      name: "title"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Title of the current webpage."
      }
      json_name: "title"
    }
    field {
      name: "referrer"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Referring URL for this webpage."
      }
      json_name: "referrer"
    }
    field {
      name: "protocol"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Protocol that was used to serve this URL."
      }
      json_name: "protocol"
    }
  }
  message_type {
    name: "DeviceApplication"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.context.ApplicationType"
      options {
        1022: 1
        1025: "Type of application."
      }
      json_name: "type"
    }
    field {
      name: "version"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.VersionSpec"
      options {
        1025: "Version for the reporting application."
      }
      json_name: "version"
    }
    field {
      name: "web"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.WebApplication"
      options {
        1025: "Specifies information about an event that was sent from a web application."
      }
      oneof_index: 0
      json_name: "web"
    }
    field {
      name: "bundle_id"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Specifies a bundle ID for an iOS application."
      }
      oneof_index: 0
      json_name: "bundleId"
    }
    field {
      name: "android_package_id"
      number: 30
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Specifies an application ID for an Android application."
      }
      oneof_index: 0
      json_name: "androidPackageId"
    }
    oneof_decl {
      name: "spec"
    }
  }
  enum_type {
    name: "ApplicationType"
    value {
      name: "INTERNAL"
      number: 0
    }
    value {
      name: "PARTNER"
      number: 1
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry.context"
    java_outer_classname: "ApplicationContext"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 89, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 50]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [12, 7, 30]
    }
    location {
      path: [5, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Enumerates types of applications that may run on a device and report telemetry information.\n"
    }
    location {
      path: [5, 0, 1]
      span: [16, 5, 20]
    }
    location {
      path: [5, 0, 2, 0]
      span: [18, 2, 15]
      leading_comments: " The application is internally produced and managed.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [18, 2, 10]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [18, 13, 14]
    }
    location {
      path: [5, 0, 2, 1]
      span: [21, 2, 14]
      leading_comments: " The application is partner colocated, hosted, or managed.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [21, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [21, 12, 13]
    }
    location {
      path: [4, 0]
      span: [26, 0, 56, 1]
      leading_comments: " Specifies information about a web application reporting information to the telemetry service.\n"
    }
    location {
      path: [4, 0, 1]
      span: [26, 8, 22]
    }
    location {
      path: [4, 0, 2, 0]
      span: [28, 2, 30, 4]
      leading_comments: " Specifies an origin for a web application.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [28, 2, 26, 24]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [28, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [28, 9, 15]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [28, 18, 19]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [28, 20, 30, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [29, 4, 78]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [29, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [29, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [29, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 7]
      span: [29, 34, 78]
    }
    location {
      path: [4, 0, 2, 1]
      span: [33, 2, 35, 4]
      leading_comments: " Full, absolute URL the user was at when the event was sent.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [33, 2, 30, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [33, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [33, 9, 17]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [33, 20, 21]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [33, 22, 35, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [34, 4, 95]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [34, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [34, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [34, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [34, 34, 95]
    }
    location {
      path: [4, 0, 2, 2]
      span: [38, 2, 40, 4]
      leading_comments: " Anchor in the URL, if any.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [38, 2, 35, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [38, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [38, 9, 15]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [38, 18, 19]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [38, 20, 40, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [39, 4, 62]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [39, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [39, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [39, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [39, 34, 62]
    }
    location {
      path: [4, 0, 2, 3]
      span: [43, 2, 45, 4]
      leading_comments: " Title of the current webpage.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [43, 2, 40, 4]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [43, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [43, 9, 14]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [43, 17, 18]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [43, 19, 45, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [44, 4, 65]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [44, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [44, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [44, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [44, 34, 65]
    }
    location {
      path: [4, 0, 2, 4]
      span: [48, 2, 50, 4]
      leading_comments: " Referring URL for this webpage.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [48, 2, 45, 4]
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [48, 2, 8]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [48, 9, 17]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [48, 20, 21]
    }
    location {
      path: [4, 0, 2, 4, 8]
      span: [48, 22, 50, 3]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0]
      span: [49, 4, 67]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2]
      span: [49, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0]
      span: [49, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [49, 5, 30]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 7]
      span: [49, 34, 67]
    }
    location {
      path: [4, 0, 2, 5]
      span: [53, 2, 55, 4]
      leading_comments: " Protocol that was used to serve this URL.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [53, 2, 50, 4]
    }
    location {
      path: [4, 0, 2, 5, 5]
      span: [53, 2, 8]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [53, 9, 17]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [53, 20, 21]
    }
    location {
      path: [4, 0, 2, 5, 8]
      span: [53, 22, 55, 3]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0]
      span: [54, 4, 77]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2]
      span: [54, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0]
      span: [54, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [54, 5, 30]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 7]
      span: [54, 34, 77]
    }
    location {
      path: [4, 1]
      span: [60, 0, 89, 1]
      leading_comments: " Specifies information about the application reporting information to the telemetry service.\n"
    }
    location {
      path: [4, 1, 1]
      span: [60, 8, 25]
    }
    location {
      path: [4, 1, 2, 0]
      span: [62, 2, 65, 4]
      leading_comments: " Type of application.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [62, 2, 60, 27]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [62, 2, 17]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [62, 18, 22]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [62, 25, 26]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [62, 27, 65, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [63, 4, 34]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [63, 4, 27]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [63, 4, 27]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [63, 5, 26]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 3]
      span: [63, 30, 34]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1]
      span: [64, 4, 56]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 2]
      span: [64, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 2, 0]
      span: [64, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [64, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 1, 7]
      span: [64, 34, 56]
    }
    location {
      path: [4, 1, 2, 1]
      span: [68, 2, 70, 4]
      leading_comments: " Version for the reporting application.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [68, 2, 65, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [68, 2, 21]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [68, 22, 29]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [68, 32, 33]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [68, 34, 70, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [69, 4, 74]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [69, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [69, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [69, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [69, 34, 74]
    }
    location {
      path: [4, 1, 8, 0]
      span: [73, 2, 88, 3]
      leading_comments: " Specifies which application is running. How that is specified depends on the architecture behind the application.\n"
    }
    location {
      path: [4, 1, 8, 0, 1]
      span: [73, 8, 12]
    }
    location {
      path: [4, 1, 2, 2]
      span: [75, 4, 77, 6]
      leading_comments: " Specifies information about an event that was sent from a web application.\n"
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [75, 4, 18]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [75, 19, 22]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [75, 25, 27]
    }
    location {
      path: [4, 1, 2, 2, 8]
      span: [75, 28, 77, 5]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0]
      span: [76, 6, 112]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2]
      span: [76, 6, 33]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0]
      span: [76, 6, 33]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [76, 7, 32]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 7]
      span: [76, 36, 112]
    }
    location {
      path: [4, 1, 2, 3]
      span: [80, 4, 82, 6]
      leading_comments: " Specifies a bundle ID for an iOS application.\n"
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [80, 4, 10]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [80, 11, 20]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [80, 23, 25]
    }
    location {
      path: [4, 1, 2, 3, 8]
      span: [80, 26, 82, 5]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0]
      span: [81, 6, 83]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2]
      span: [81, 6, 33]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0]
      span: [81, 6, 33]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [81, 7, 32]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 7]
      span: [81, 36, 83]
    }
    location {
      path: [4, 1, 2, 4]
      span: [85, 4, 87, 6]
      leading_comments: " Specifies an application ID for an Android application.\n"
    }
    location {
      path: [4, 1, 2, 4, 5]
      span: [85, 4, 10]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [85, 11, 29]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [85, 32, 34]
    }
    location {
      path: [4, 1, 2, 4, 8]
      span: [85, 35, 87, 5]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0]
      span: [86, 6, 93]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2]
      span: [86, 6, 33]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0]
      span: [86, 6, 33]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [86, 7, 32]
    }
    location {
      path: [4, 1, 2, 4, 8, 999, 0, 7]
      span: [86, 36, 93]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "proximity/BluetoothBeacon.proto"
  package: "proximity"
  dependency: "geo/Location.proto"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "BluetoothBeacon"
    field {
      name: "uuid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uuid"
    }
    field {
      name: "major"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "major"
    }
    field {
      name: "minor"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "minor"
    }
    field {
      name: "seen"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "seen"
    }
    field {
      name: "location"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Location"
      json_name: "location"
    }
    field {
      name: "accuracy"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.LocationAccuracy"
      json_name: "accuracy"
    }
  }
  options {
    java_package: "io.bloombox.schema.proximity"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 32, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 17]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 53]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 53]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 52]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 27]
    }
    location {
      path: [3, 1]
      span: [10, 7, 31]
    }
    location {
      path: [4, 0]
      span: [14, 0, 32, 1]
      leading_comments: " Specifies a Blutooth beacon signal, detected or emitted by a BLE device.\n"
    }
    location {
      path: [4, 0, 1]
      span: [14, 8, 23]
    }
    location {
      path: [4, 0, 2, 0]
      span: [16, 2, 18]
      leading_comments: " UUID for the device, as observed or broadcasted.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [16, 2, 14, 25]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [16, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [16, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [16, 16, 17]
    }
    location {
      path: [4, 0, 2, 1]
      span: [19, 2, 19]
      leading_comments: " 'Major' value in the BLE signal.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [19, 2, 16, 18]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [19, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [19, 9, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [19, 17, 18]
    }
    location {
      path: [4, 0, 2, 2]
      span: [22, 2, 19]
      leading_comments: " 'Minor' value in the BLE signal.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [22, 2, 19, 19]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [22, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [22, 9, 14]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [22, 17, 18]
    }
    location {
      path: [4, 0, 2, 3]
      span: [25, 2, 28]
      leading_comments: " Timestamp for when this beacon was witnessed.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [25, 2, 22, 19]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [25, 2, 18]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [25, 19, 23]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [25, 26, 27]
    }
    location {
      path: [4, 0, 2, 4]
      span: [28, 2, 28]
      leading_comments: " Location of the emitting or reporting (receiving) beacon.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [28, 2, 25, 28]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [28, 2, 14]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [28, 15, 23]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [28, 26, 27]
    }
    location {
      path: [4, 0, 2, 5]
      span: [31, 2, 36]
      leading_comments: " Estimate as to the distance accuracy of this beacon.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [31, 2, 28, 28]
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [31, 2, 22]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [31, 23, 31]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [31, 34, 35]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/context/NativeDevice.proto"
  package: "analytics.context"
  dependency: "bq_field.proto"
  dependency: "device/Device.proto"
  dependency: "structs/Version.proto"
  dependency: "analytics/context/OS.proto"
  dependency: "analytics/context/Application.proto"
  dependency: "proximity/BluetoothBeacon.proto"
  message_type {
    name: "PixelSize"
    field {
      name: "width"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      options {
        1022: 1
        1025: "Specifies the width portion of a pixel size."
      }
      json_name: "width"
    }
    field {
      name: "height"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      options {
        1022: 1
        1025: "Specifies the height portion of a pixel size."
      }
      json_name: "height"
    }
  }
  message_type {
    name: "DeviceScreen"
    field {
      name: "screen"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.PixelSize"
      options {
        1025: "Size of the screen."
      }
      json_name: "screen"
    }
    field {
      name: "viewport"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.PixelSize"
      options {
        1025: "Size of the viewport."
      }
      json_name: "viewport"
    }
    field {
      name: "density"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      options {
        1025: "Specifies the height portion of a pixel size."
      }
      json_name: "density"
    }
    field {
      name: "orientation"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.context.ScreenOrientation"
      options {
        1025: "Specifies the orientation of the screen at the time an event was captured."
      }
      json_name: "orientation"
    }
  }
  message_type {
    name: "NativeDeviceContext"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".device.DeviceType"
      options {
        1022: 1
        1025: "Specifies the type of native device."
      }
      json_name: "type"
    }
    field {
      name: "role"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.context.DeviceRole"
      options {
        1022: 1
        1025: "Specifies the role of the native device."
      }
      json_name: "role"
    }
    field {
      name: "os"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.DeviceOS"
      options {
        1022: 1
        1025: "Specifies the OS of the native device."
      }
      json_name: "os"
    }
    field {
      name: "beacon"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".proximity.BluetoothBeacon"
      options {
        1025: "BLE signal broadcasting from this device."
      }
      json_name: "beacon"
    }
    field {
      name: "witnessed"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".proximity.BluetoothBeacon"
      options {
        1022: 1
        1025: "BLE signals witnessed by this device."
      }
      json_name: "witnessed"
    }
    field {
      name: "screen"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.DeviceScreen"
      options {
        1025: "Information about the device screen."
      }
      json_name: "screen"
    }
  }
  enum_type {
    name: "DeviceRole"
    value {
      name: "CLIENT"
      number: 0
    }
    value {
      name: "SERVER"
      number: 1
    }
  }
  enum_type {
    name: "ScreenOrientation"
    value {
      name: "UNSPECIFIED_ORIENTATION"
      number: 0
    }
    value {
      name: "PORTRAIT"
      number: 1
    }
    value {
      name: "LANDSCAPE"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry.context"
    java_outer_classname: "DeviceContext"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 118, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 28]
    }
    location {
      path: [3, 2]
      span: [14, 7, 30]
    }
    location {
      path: [3, 3]
      span: [15, 7, 35]
    }
    location {
      path: [3, 4]
      span: [16, 7, 44]
    }
    location {
      path: [3, 5]
      span: [17, 7, 40]
    }
    location {
      path: [5, 0]
      span: [21, 0, 27, 1]
      leading_comments: " Specifies generic types of native devices that can be described.\n"
    }
    location {
      path: [5, 0, 1]
      span: [21, 5, 15]
    }
    location {
      path: [5, 0, 2, 0]
      span: [23, 2, 13]
      leading_comments: " Indicates that the native device is acting in the role of a client. This is the default option.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [23, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [23, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [26, 2, 13]
      leading_comments: " Indicates that the native device is acting in the role of a server.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [26, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [26, 11, 12]
    }
    location {
      path: [4, 0]
      span: [31, 0, 43, 1]
      leading_comments: " Carries information about a device display, including resolution, pixel density, and viewport size, if applicable.\n"
    }
    location {
      path: [4, 0, 1]
      span: [31, 8, 17]
    }
    location {
      path: [4, 0, 2, 0]
      span: [33, 2, 36, 4]
      leading_comments: " Specifies the width portion of a pixel size.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [33, 2, 31, 19]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [33, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [33, 9, 14]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [33, 17, 18]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [33, 19, 36, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [34, 4, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [34, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [34, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [34, 5, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [34, 30, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1]
      span: [35, 4, 80]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0]
      span: [35, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [35, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 7]
      span: [35, 34, 80]
    }
    location {
      path: [4, 0, 2, 1]
      span: [39, 2, 42, 4]
      leading_comments: " Specifies the height portion of a pixel size.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [39, 2, 36, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [39, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [39, 9, 15]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [39, 18, 19]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [39, 20, 42, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [40, 4, 34]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [40, 4, 27]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [40, 4, 27]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [40, 5, 26]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 3]
      span: [40, 30, 34]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1]
      span: [41, 4, 81]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2]
      span: [41, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2, 0]
      span: [41, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2, 0, 1]
      span: [41, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 7]
      span: [41, 34, 81]
    }
    location {
      path: [5, 1]
      span: [47, 0, 56, 1]
      leading_comments: " Specifies the screen orientation at the time an event was captured.\n"
    }
    location {
      path: [5, 1, 1]
      span: [47, 5, 22]
    }
    location {
      path: [5, 1, 2, 0]
      span: [49, 2, 30]
      leading_comments: " Unspecified or unknown screen orientation.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [49, 2, 25]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [49, 28, 29]
    }
    location {
      path: [5, 1, 2, 1]
      span: [52, 2, 15]
      leading_comments: " Portrait (i.e. width is less than height) screen orientation mode.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [52, 2, 10]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [52, 13, 14]
    }
    location {
      path: [5, 1, 2, 2]
      span: [55, 2, 16]
      leading_comments: " Landscape (i.e. height is less than width) screen orientation mode.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [55, 2, 11]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [55, 14, 15]
    }
    location {
      path: [4, 1]
      span: [60, 0, 80, 1]
      leading_comments: " Carries information about the screen being used on the device to display whatever is being instrumented.\n"
    }
    location {
      path: [4, 1, 1]
      span: [60, 8, 20]
    }
    location {
      path: [4, 1, 2, 0]
      span: [62, 2, 64, 4]
      leading_comments: " Size of the screen.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [62, 2, 60, 22]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [62, 2, 11]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [62, 12, 18]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [62, 21, 22]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [62, 23, 64, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [63, 4, 55]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [63, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [63, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [63, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [63, 34, 55]
    }
    location {
      path: [4, 1, 2, 1]
      span: [67, 2, 69, 4]
      leading_comments: " Size of the viewport.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [67, 2, 64, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [67, 2, 11]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [67, 12, 20]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [67, 23, 24]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [67, 25, 69, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [68, 4, 57]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [68, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [68, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [68, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [68, 34, 57]
    }
    location {
      path: [4, 1, 2, 2]
      span: [72, 2, 74, 4]
      leading_comments: " Specifies the pixel density of the screen.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [72, 2, 69, 4]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [72, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [72, 9, 16]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [72, 19, 20]
    }
    location {
      path: [4, 1, 2, 2, 8]
      span: [72, 21, 74, 3]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0]
      span: [73, 4, 81]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2]
      span: [73, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0]
      span: [73, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [73, 5, 30]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 7]
      span: [73, 34, 81]
    }
    location {
      path: [4, 1, 2, 3]
      span: [77, 2, 79, 4]
      leading_comments: " Specifies the orientation of the screen at the time an event was captured.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [77, 2, 74, 4]
    }
    location {
      path: [4, 1, 2, 3, 6]
      span: [77, 2, 19]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [77, 20, 31]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [77, 34, 35]
    }
    location {
      path: [4, 1, 2, 3, 8]
      span: [77, 36, 79, 3]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0]
      span: [78, 4, 110]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2]
      span: [78, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0]
      span: [78, 4, 31]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [78, 5, 30]
    }
    location {
      path: [4, 1, 2, 3, 8, 999, 0, 7]
      span: [78, 34, 110]
    }
    location {
      path: [4, 2]
      span: [84, 0, 118, 1]
      leading_comments: " Specifies a structure describing code running in some form of a native context.\n"
    }
    location {
      path: [4, 2, 1]
      span: [84, 8, 27]
    }
    location {
      path: [4, 2, 2, 0]
      span: [86, 2, 89, 4]
      leading_comments: " Specifies the type of native device.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [86, 2, 84, 29]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [86, 2, 19]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [86, 20, 24]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [86, 27, 28]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [86, 29, 89, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [87, 4, 34]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [87, 4, 27]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [87, 4, 27]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [87, 5, 26]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 3]
      span: [87, 30, 34]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1]
      span: [88, 4, 72]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 2]
      span: [88, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 2, 0]
      span: [88, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [88, 5, 30]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 7]
      span: [88, 34, 72]
    }
    location {
      path: [4, 2, 2, 1]
      span: [92, 2, 95, 4]
      leading_comments: " Specifies the type of native device.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [92, 2, 89, 4]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [92, 2, 12]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [92, 13, 17]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [92, 20, 21]
    }
    location {
      path: [4, 2, 2, 1, 8]
      span: [92, 22, 95, 3]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0]
      span: [93, 4, 34]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2]
      span: [93, 4, 27]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0]
      span: [93, 4, 27]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [93, 5, 26]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 3]
      span: [93, 30, 34]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 1]
      span: [94, 4, 76]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 1, 2]
      span: [94, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 1, 2, 0]
      span: [94, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 1, 2, 0, 1]
      span: [94, 5, 30]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 1, 7]
      span: [94, 34, 76]
    }
    location {
      path: [4, 2, 2, 2]
      span: [98, 2, 101, 4]
      leading_comments: " Specifies the OS of the native device.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [98, 2, 95, 4]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [98, 2, 28]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [98, 29, 31]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [98, 34, 35]
    }
    location {
      path: [4, 2, 2, 2, 8]
      span: [98, 36, 101, 3]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0]
      span: [99, 4, 34]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2]
      span: [99, 4, 27]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0]
      span: [99, 4, 27]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [99, 5, 26]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 3]
      span: [99, 30, 34]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 1]
      span: [100, 4, 74]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 1, 2]
      span: [100, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 1, 2, 0]
      span: [100, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 1, 2, 0, 1]
      span: [100, 5, 30]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 1, 7]
      span: [100, 34, 74]
    }
    location {
      path: [4, 2, 2, 3]
      span: [104, 2, 106, 4]
      leading_comments: " Bluetooth Low Energy broadcast being emitted by this device.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [104, 2, 101, 4]
    }
    location {
      path: [4, 2, 2, 3, 6]
      span: [104, 2, 27]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [104, 28, 34]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [104, 37, 38]
    }
    location {
      path: [4, 2, 2, 3, 8]
      span: [104, 39, 106, 3]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0]
      span: [105, 4, 77]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2]
      span: [105, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0]
      span: [105, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [105, 5, 30]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 7]
      span: [105, 34, 77]
    }
    location {
      path: [4, 2, 2, 4]
      span: [109, 2, 112, 4]
      leading_comments: " BLE signals witnessed by this device.\n"
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [109, 2, 10]
    }
    location {
      path: [4, 2, 2, 4, 6]
      span: [109, 11, 36]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [109, 37, 46]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [109, 49, 50]
    }
    location {
      path: [4, 2, 2, 4, 8]
      span: [109, 51, 112, 3]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0]
      span: [110, 4, 34]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2]
      span: [110, 4, 27]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0]
      span: [110, 4, 27]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [110, 5, 26]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 3]
      span: [110, 30, 34]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 1]
      span: [111, 4, 73]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 1, 2]
      span: [111, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 1, 2, 0]
      span: [111, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 1, 2, 0, 1]
      span: [111, 5, 30]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 1, 7]
      span: [111, 34, 73]
    }
    location {
      path: [4, 2, 2, 5]
      span: [115, 2, 117, 4]
      leading_comments: " Information about the device screen.\n"
    }
    location {
      path: [4, 2, 2, 5, 4]
      span: [115, 2, 112, 4]
    }
    location {
      path: [4, 2, 2, 5, 6]
      span: [115, 2, 14]
    }
    location {
      path: [4, 2, 2, 5, 1]
      span: [115, 15, 21]
    }
    location {
      path: [4, 2, 2, 5, 3]
      span: [115, 24, 25]
    }
    location {
      path: [4, 2, 2, 5, 8]
      span: [115, 26, 117, 3]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0]
      span: [116, 4, 72]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 2]
      span: [116, 4, 31]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 2, 0]
      span: [116, 4, 31]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [116, 5, 30]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 7]
      span: [116, 34, 72]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/context/Browser.proto"
  package: "analytics.context"
  dependency: "bq_field.proto"
  dependency: "structs/Version.proto"
  dependency: "analytics/context/OS.proto"
  dependency: "analytics/context/Library.proto"
  dependency: "analytics/context/Application.proto"
  dependency: "analytics/context/NativeDevice.proto"
  message_type {
    name: "BrowserDeviceContext"
    field {
      name: "browser_type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.context.BrowserType"
      options {
        1022: 1
        1025: "Specifies the general browser type."
      }
      json_name: "browserType"
    }
    field {
      name: "version"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.VersionSpec"
      options {
        1025: "Version info for the browser."
      }
      json_name: "version"
    }
    field {
      name: "language"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Active language, as reported by the browser."
      }
      json_name: "language"
    }
    field {
      name: "user_agent"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Raw user-agent string sent or embedded by the browser."
      }
      json_name: "userAgent"
    }
    field {
      name: "touchpoints"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      options {
        1025: "Maximum touch points for a particular browser."
      }
      json_name: "touchpoints"
    }
    field {
      name: "hardware_concurrency"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      options {
        1025: "Hardware concurrency reported by the browser."
      }
      json_name: "hardwareConcurrency"
    }
    field {
      name: "color_depth"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      options {
        1025: "Color depth reported by the browser."
      }
      json_name: "colorDepth"
    }
  }
  enum_type {
    name: "BrowserType"
    value {
      name: "BROWSER_UNKNOWN"
      number: 0
    }
    value {
      name: "CHROME"
      number: 1
    }
    value {
      name: "SAFARI"
      number: 2
    }
    value {
      name: "FIREFOX"
      number: 3
    }
    value {
      name: "OPERA"
      number: 4
    }
    value {
      name: "IE_OR_EDGE"
      number: 5
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry.context"
    java_outer_classname: "BrowserContext"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 79, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 30]
    }
    location {
      path: [3, 2]
      span: [14, 7, 35]
    }
    location {
      path: [3, 3]
      span: [15, 7, 40]
    }
    location {
      path: [3, 4]
      span: [16, 7, 44]
    }
    location {
      path: [3, 5]
      span: [17, 7, 45]
    }
    location {
      path: [5, 0]
      span: [21, 0, 39, 1]
      leading_comments: " Specifies types of browsers or known browser engines.\n"
    }
    location {
      path: [5, 0, 1]
      span: [21, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [23, 2, 22]
      leading_comments: " Specifies an unknown or unrecognized browser.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [23, 2, 17]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [23, 20, 21]
    }
    location {
      path: [5, 0, 2, 1]
      span: [26, 2, 13]
      leading_comments: " Specifies Google Chrome.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [26, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [26, 11, 12]
    }
    location {
      path: [5, 0, 2, 2]
      span: [29, 2, 13]
      leading_comments: " Specifies Apple Safari.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [29, 2, 8]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [29, 11, 12]
    }
    location {
      path: [5, 0, 2, 3]
      span: [32, 2, 14]
      leading_comments: " Specifies Mozilla Firefox.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [32, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [32, 12, 13]
    }
    location {
      path: [5, 0, 2, 4]
      span: [35, 2, 12]
      leading_comments: " Specifies Opera.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [35, 2, 7]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [35, 10, 11]
    }
    location {
      path: [5, 0, 2, 5]
      span: [38, 2, 17]
      leading_comments: " Specifies Microsoft Edge or Microsoft Internet Explorer.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [38, 2, 12]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [38, 15, 16]
    }
    location {
      path: [4, 0]
      span: [43, 0, 79, 1]
      leading_comments: " Specifies a structure describing JavaScript code running in a web browser of some kind.\n"
    }
    location {
      path: [4, 0, 1]
      span: [43, 8, 28]
    }
    location {
      path: [4, 0, 2, 0]
      span: [45, 2, 48, 4]
      leading_comments: " Specifies the general browser type.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [45, 2, 43, 30]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [45, 2, 13]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [45, 14, 26]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [45, 29, 30]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [45, 31, 48, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [46, 4, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [46, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [46, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [46, 5, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [46, 30, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1]
      span: [47, 4, 71]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2]
      span: [47, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0]
      span: [47, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [47, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 7]
      span: [47, 34, 71]
    }
    location {
      path: [4, 0, 2, 1]
      span: [51, 2, 53, 4]
      leading_comments: " Version info for the browser.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [51, 2, 48, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [51, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [51, 22, 29]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [51, 32, 33]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [51, 34, 53, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [52, 4, 65]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [52, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [52, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [52, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [52, 34, 65]
    }
    location {
      path: [4, 0, 2, 2]
      span: [56, 2, 58, 4]
      leading_comments: " Active language, as reported by the browser.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [56, 2, 53, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [56, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [56, 9, 17]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [56, 20, 21]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [56, 22, 58, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [57, 4, 80]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [57, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [57, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [57, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [57, 34, 80]
    }
    location {
      path: [4, 0, 2, 3]
      span: [61, 2, 63, 4]
      leading_comments: " Raw user-agent string sent or embedded by the browser.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [61, 2, 58, 4]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [61, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [61, 9, 19]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [61, 22, 23]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [61, 24, 63, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [62, 4, 90]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [62, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [62, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [62, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [62, 34, 90]
    }
    location {
      path: [4, 0, 2, 4]
      span: [66, 2, 68, 4]
      leading_comments: " Maximum touch points for a particular browser.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [66, 2, 63, 4]
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [66, 2, 8]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [66, 9, 20]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [66, 23, 24]
    }
    location {
      path: [4, 0, 2, 4, 8]
      span: [66, 25, 68, 3]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0]
      span: [67, 4, 82]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2]
      span: [67, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0]
      span: [67, 4, 31]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [67, 5, 30]
    }
    location {
      path: [4, 0, 2, 4, 8, 999, 0, 7]
      span: [67, 34, 82]
    }
    location {
      path: [4, 0, 2, 5]
      span: [71, 2, 73, 4]
      leading_comments: " Hardware concurrency reported by the browser.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [71, 2, 68, 4]
    }
    location {
      path: [4, 0, 2, 5, 5]
      span: [71, 2, 8]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [71, 9, 29]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [71, 32, 33]
    }
    location {
      path: [4, 0, 2, 5, 8]
      span: [71, 34, 73, 3]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0]
      span: [72, 4, 81]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2]
      span: [72, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0]
      span: [72, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [72, 5, 30]
    }
    location {
      path: [4, 0, 2, 5, 8, 999, 0, 7]
      span: [72, 34, 81]
    }
    location {
      path: [4, 0, 2, 6]
      span: [76, 2, 78, 4]
      leading_comments: " Color depth reported by the browser.\n"
    }
    location {
      path: [4, 0, 2, 6, 4]
      span: [76, 2, 73, 4]
    }
    location {
      path: [4, 0, 2, 6, 5]
      span: [76, 2, 8]
    }
    location {
      path: [4, 0, 2, 6, 1]
      span: [76, 9, 20]
    }
    location {
      path: [4, 0, 2, 6, 3]
      span: [76, 23, 24]
    }
    location {
      path: [4, 0, 2, 6, 8]
      span: [76, 25, 78, 3]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0]
      span: [77, 4, 72]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 2]
      span: [77, 4, 31]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 2, 0]
      span: [77, 4, 31]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 2, 0, 1]
      span: [77, 5, 30]
    }
    location {
      path: [4, 0, 2, 6, 8, 999, 0, 7]
      span: [77, 34, 72]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/context/Collection.proto"
  package: "analytics.context"
  dependency: "bq_field.proto"
  message_type {
    name: "Collection"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1022: 1
        1025: "Specifies an unenumerated collection by name."
      }
      json_name: "name"
    }
    field {
      name: "internal"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      options {
        1025: "Specifies a specific collection as internal. Backend-only flag."
      }
      json_name: "internal"
    }
    field {
      name: "type"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.context.EventType"
      options {
        1025: "Specifies the type of event. Usually added by the telemetry backend."
      }
      json_name: "type"
    }
  }
  enum_type {
    name: "EventType"
    value {
      name: "GENERIC"
      number: 0
    }
    value {
      name: "COMMERCIAL"
      number: 1
    }
    value {
      name: "IDENTITY"
      number: 2
    }
    value {
      name: "EXPERIENCE"
      number: 3
    }
    value {
      name: "OPERATIONAL"
      number: 4
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry.context"
    java_outer_classname: "AnalyticsCollection"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 50, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 52]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 52]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 51]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [5, 0]
      span: [15, 0, 30, 1]
      leading_comments: " Enumerates categories of events supported by the telemetry system.\n"
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 14]
    }
    location {
      path: [5, 0, 2, 0]
      span: [17, 2, 14]
      leading_comments: " Generic event or error report with arbitrary payload.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [17, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [17, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [20, 2, 17]
      leading_comments: " Commercial analytics, like purchases, orders, and so on.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [20, 2, 12]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [20, 15, 16]
    }
    location {
      path: [5, 0, 2, 2]
      span: [23, 2, 15]
      leading_comments: " Identity analytics, like profile changes, auth grants and revocations, and so on.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [23, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [23, 13, 14]
    }
    location {
      path: [5, 0, 2, 3]
      span: [26, 2, 17]
      leading_comments: " Experience analytics, like pageviews, interactions, etc.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [26, 2, 12]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [26, 15, 16]
    }
    location {
      path: [5, 0, 2, 4]
      span: [29, 2, 18]
      leading_comments: " Operational analytics, like memory usage, network traffic, etc.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [29, 2, 13]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [29, 16, 17]
    }
    location {
      path: [4, 0]
      span: [34, 0, 50, 1]
      leading_comments: " Represents a specification for an analytics event collection.\n"
    }
    location {
      path: [4, 0, 1]
      span: [34, 8, 18]
    }
    location {
      path: [4, 0, 2, 0]
      span: [36, 2, 39, 4]
      leading_comments: " Specifies an unenumerated collection by name.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [36, 2, 34, 20]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [36, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [36, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [36, 16, 17]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [36, 18, 39, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [37, 4, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [37, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [37, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [37, 5, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [37, 30, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1]
      span: [38, 4, 81]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2]
      span: [38, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0]
      span: [38, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [38, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 7]
      span: [38, 34, 81]
    }
    location {
      path: [4, 0, 2, 1]
      span: [42, 2, 44, 4]
      leading_comments: " Specifies a specific collection as internal. Backend-only flag.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [42, 2, 39, 4]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [42, 2, 6]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [42, 7, 15]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [42, 18, 19]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [42, 20, 44, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [43, 4, 99]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [43, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [43, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [43, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 7]
      span: [43, 34, 99]
    }
    location {
      path: [4, 0, 2, 2]
      span: [47, 2, 49, 4]
      leading_comments: " Specifies the type of event. Usually added by the telemetry backend.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [47, 2, 44, 4]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [47, 2, 11]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [47, 12, 16]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [47, 19, 20]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [47, 21, 49, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [48, 4, 104]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [48, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [48, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [48, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [48, 34, 104]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/Context.proto"
  package: "analytics"
  dependency: "bq_field.proto"
  dependency: "geo/Location.proto"
  dependency: "identity/User.proto"
  dependency: "temporal/Instant.proto"
  dependency: "partner/Partner.proto"
  dependency: "partner/PartnerLocation.proto"
  dependency: "structs/Version.proto"
  dependency: "analytics/Scope.proto"
  dependency: "analytics/context/Browser.proto"
  dependency: "analytics/context/Library.proto"
  dependency: "analytics/context/Collection.proto"
  dependency: "analytics/context/Application.proto"
  dependency: "analytics/context/NativeDevice.proto"
  message_type {
    name: "EventPosition"
    field {
      name: "ingest"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1022: 1
        1023: "TIMESTAMP"
        1025: "Timestamp describing when this event was ingested by the backend telemetry pipeline."
      }
      json_name: "ingest"
    }
    field {
      name: "occurred"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1022: 1
        1023: "TIMESTAMP"
        1025: "Timestamp describing when this event occurred, as reported by the submitting device or endpoint."
      }
      json_name: "occurred"
    }
    field {
      name: "processed"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      options {
        1023: "TIMESTAMP"
        1025: "Timestamp describing when this event occurred, as reported by the submitting device or endpoint."
      }
      json_name: "processed"
    }
    field {
      name: "enriched"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      options {
        1023: "TIMESTAMP"
        1025: "Timestamps describing each instance of this event being enriched by the telemetry pipeline."
      }
      json_name: "enriched"
    }
  }
  message_type {
    name: "EventActors"
    field {
      name: "user"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.User"
      options {
        1025: "User account that was logged in when the event was submitted."
      }
      json_name: "user"
    }
    field {
      name: "partner"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.Partner"
      options {
        1025: "Partner account under which the event was submitted."
      }
      json_name: "partner"
    }
    field {
      name: "location"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerLocation"
      options {
        1025: "Location account under which this event was submitted."
      }
      json_name: "location"
    }
  }
  message_type {
    name: "Context"
    field {
      name: "collection"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.Collection"
      options {
        1022: 1
        1025: "Collection information, specifies event type or category."
      }
      json_name: "collection"
    }
    field {
      name: "user_key"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".identity.UserKey"
      options {
        1025: "Specifies the user associated with this event, if known."
      }
      json_name: "userKey"
    }
    field {
      name: "fingerprint"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Unique device fingerprint for this analytics context."
      }
      json_name: "fingerprint"
    }
    field {
      name: "group"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Arbitrary group ID for this event. Gathers events into buckets of variable size, usually used to indicate a user or device session."
      }
      json_name: "group"
    }
    field {
      name: "hostname"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "Hostname of the server or client that transmitted this information, if it is known."
      }
      json_name: "hostname"
    }
    field {
      name: "ip_address"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      options {
        1025: "IP address of the server or client that transmitted this information, if is is known."
      }
      json_name: "ipAddress"
    }
    field {
      name: "scope"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Scope"
      options {
        1025: "Partner and commercial scope of this event."
      }
      json_name: "scope"
    }
    field {
      name: "app"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.DeviceApplication"
      options {
        1025: "Application version information."
      }
      json_name: "app"
    }
    field {
      name: "library"
      number: 9
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.DeviceLibrary"
      options {
        1025: "Library version information."
      }
      json_name: "library"
    }
    field {
      name: "native"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.NativeDeviceContext"
      options {
        1025: "Specifies information about a native device, when the event is being sent from a native context of some kind, such as a mobile phone application or embedded device running partner code."
      }
      json_name: "native"
    }
    field {
      name: "browser"
      number: 11
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.context.BrowserDeviceContext"
      options {
        1025: "Specifies information about a web browser, when the event is being sent from some kind of web browsing context."
      }
      json_name: "browser"
    }
    field {
      name: "location"
      number: 12
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".geo.Location"
      options {
        1025: "Origin location for this event, as determined by geolocation or explicit inclusion in the event payload."
      }
      json_name: "location"
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry"
    java_outer_classname: "AnalyticsContext"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 146, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 17]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 52]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 48]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 27]
    }
    location {
      path: [3, 2]
      span: [15, 7, 28]
    }
    location {
      path: [3, 3]
      span: [17, 7, 31]
    }
    location {
      path: [3, 4]
      span: [19, 7, 30]
    }
    location {
      path: [3, 5]
      span: [20, 7, 38]
    }
    location {
      path: [3, 6]
      span: [22, 7, 30]
    }
    location {
      path: [3, 7]
      span: [24, 7, 30]
    }
    location {
      path: [3, 8]
      span: [25, 7, 40]
    }
    location {
      path: [3, 9]
      span: [26, 7, 40]
    }
    location {
      path: [3, 10]
      span: [27, 7, 43]
    }
    location {
      path: [3, 11]
      span: [28, 7, 44]
    }
    location {
      path: [3, 12]
      span: [29, 7, 45]
    }
    location {
      path: [4, 0]
      span: [34, 0, 60, 1]
      leading_comments: " Indicates temporal positioning - or, the \"when\" - for a telemetry event, post-ingest.\n"
    }
    location {
      path: [4, 0, 1]
      span: [34, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [36, 2, 40, 4]
      leading_comments: " Timestamp describing when this event was ingested by the backend telemetry pipeline.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [36, 2, 34, 23]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [36, 2, 18]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [36, 19, 25]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [36, 28, 29]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [36, 30, 40, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [37, 4, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [37, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [37, 4, 27]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [37, 5, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [37, 30, 34]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1]
      span: [38, 4, 47]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2]
      span: [38, 4, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0]
      span: [38, 4, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [38, 5, 32]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 1, 7]
      span: [38, 36, 47]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 2]
      span: [39, 4, 120]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 2, 2]
      span: [39, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 2, 2, 0]
      span: [39, 4, 31]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 2, 2, 0, 1]
      span: [39, 5, 30]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 2, 7]
      span: [39, 34, 120]
    }
    location {
      path: [4, 0, 2, 1]
      span: [43, 2, 47, 4]
      leading_comments: " Timestamp describing when this event occurred, as reported by the submitting device or endpoint.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [43, 2, 40, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [43, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [43, 19, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [43, 30, 31]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [43, 32, 47, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [44, 4, 34]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [44, 4, 27]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [44, 4, 27]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [44, 5, 26]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 3]
      span: [44, 30, 34]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1]
      span: [45, 4, 47]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2]
      span: [45, 4, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2, 0]
      span: [45, 4, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 2, 0, 1]
      span: [45, 5, 32]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 1, 7]
      span: [45, 36, 47]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 2]
      span: [46, 4, 132]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 2, 2]
      span: [46, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 2, 2, 0]
      span: [46, 4, 31]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 2, 2, 0, 1]
      span: [46, 5, 30]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 2, 7]
      span: [46, 34, 132]
    }
    location {
      path: [4, 0, 2, 2]
      span: [50, 2, 53, 4]
      leading_comments: " Timestamps describing each instance of this event being processed by the telemetry pipeline.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [50, 2, 47, 4]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [50, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [50, 9, 18]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [50, 21, 22]
    }
    location {
      path: [4, 0, 2, 2, 8]
      span: [50, 23, 53, 3]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0]
      span: [51, 4, 47]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2]
      span: [51, 4, 33]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0]
      span: [51, 4, 33]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [51, 5, 32]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 0, 7]
      span: [51, 36, 47]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 1]
      span: [52, 4, 132]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 1, 2]
      span: [52, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 1, 2, 0]
      span: [52, 4, 31]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 1, 2, 0, 1]
      span: [52, 5, 30]
    }
    location {
      path: [4, 0, 2, 2, 8, 999, 1, 7]
      span: [52, 34, 132]
    }
    location {
      path: [4, 0, 2, 3]
      span: [56, 2, 59, 4]
      leading_comments: " Timestamps describing each instance of this event being enriched by the telemetry pipeline.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [56, 2, 53, 4]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [56, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [56, 9, 17]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [56, 20, 21]
    }
    location {
      path: [4, 0, 2, 3, 8]
      span: [56, 22, 59, 3]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0]
      span: [57, 4, 47]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2]
      span: [57, 4, 33]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0]
      span: [57, 4, 33]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [57, 5, 32]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 0, 7]
      span: [57, 36, 47]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 1]
      span: [58, 4, 127]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 1, 2]
      span: [58, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 1, 2, 0]
      span: [58, 4, 31]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 1, 2, 0, 1]
      span: [58, 5, 30]
    }
    location {
      path: [4, 0, 2, 3, 8, 999, 1, 7]
      span: [58, 34, 127]
    }
    location {
      path: [4, 1]
      span: [64, 0, 79, 1]
      leading_comments: " Specifies full, inflated data records for contextually-related objects, w.r.t. the current event.\n"
    }
    location {
      path: [4, 1, 1]
      span: [64, 8, 19]
    }
    location {
      path: [4, 1, 2, 0]
      span: [66, 2, 68, 4]
      leading_comments: " User account that was logged in when the event was submitted.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [66, 2, 64, 21]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [66, 2, 16]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [66, 17, 21]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [66, 24, 25]
    }
    location {
      path: [4, 1, 2, 0, 8]
      span: [66, 26, 68, 3]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0]
      span: [67, 4, 97]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2]
      span: [67, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0]
      span: [67, 4, 31]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [67, 5, 30]
    }
    location {
      path: [4, 1, 2, 0, 8, 999, 0, 7]
      span: [67, 34, 97]
    }
    location {
      path: [4, 1, 2, 1]
      span: [71, 2, 73, 4]
      leading_comments: " Partner account under which the event was submitted.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [71, 2, 68, 4]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [71, 2, 17]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [71, 18, 25]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [71, 28, 29]
    }
    location {
      path: [4, 1, 2, 1, 8]
      span: [71, 30, 73, 3]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0]
      span: [72, 4, 88]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2]
      span: [72, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0]
      span: [72, 4, 31]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [72, 5, 30]
    }
    location {
      path: [4, 1, 2, 1, 8, 999, 0, 7]
      span: [72, 34, 88]
    }
    location {
      path: [4, 1, 2, 2]
      span: [76, 2, 78, 4]
      leading_comments: " Location account under which this event was submitted.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [76, 2, 73, 4]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [76, 2, 25]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [76, 26, 34]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [76, 37, 38]
    }
    location {
      path: [4, 1, 2, 2, 8]
      span: [76, 39, 78, 3]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0]
      span: [77, 4, 90]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2]
      span: [77, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0]
      span: [77, 4, 31]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [77, 5, 30]
    }
    location {
      path: [4, 1, 2, 2, 8, 999, 0, 7]
      span: [77, 34, 90]
    }
    location {
      path: [4, 2]
      span: [83, 0, 146, 1]
      leading_comments: " Specifies contextual metadata to include with events or exceptions recorded via analytics/telemetry ingest.\n"
    }
    location {
      path: [4, 2, 1]
      span: [83, 8, 15]
    }
    location {
      path: [4, 2, 2, 0]
      span: [85, 2, 88, 4]
      leading_comments: " Collection information, specifies event type or category.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [85, 2, 83, 17]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [85, 2, 30]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [85, 31, 41]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [85, 44, 45]
    }
    location {
      path: [4, 2, 2, 0, 8]
      span: [85, 46, 88, 3]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0]
      span: [86, 4, 34]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2]
      span: [86, 4, 27]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0]
      span: [86, 4, 27]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [86, 5, 26]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 0, 3]
      span: [86, 30, 34]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1]
      span: [87, 4, 93]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 2]
      span: [87, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 2, 0]
      span: [87, 4, 31]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 2, 0, 1]
      span: [87, 5, 30]
    }
    location {
      path: [4, 2, 2, 0, 8, 999, 1, 7]
      span: [87, 34, 93]
    }
    location {
      path: [4, 2, 2, 1]
      span: [91, 2, 93, 4]
      leading_comments: " Specifies the user associated with this event, if known.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [91, 2, 88, 4]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [91, 2, 19]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [91, 20, 28]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [91, 31, 32]
    }
    location {
      path: [4, 2, 2, 1, 8]
      span: [91, 33, 93, 3]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0]
      span: [92, 4, 92]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2]
      span: [92, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0]
      span: [92, 4, 31]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [92, 5, 30]
    }
    location {
      path: [4, 2, 2, 1, 8, 999, 0, 7]
      span: [92, 34, 92]
    }
    location {
      path: [4, 2, 2, 2]
      span: [96, 2, 98, 4]
      leading_comments: " Unique device fingerprint for this analytics context.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [96, 2, 93, 4]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [96, 2, 8]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [96, 9, 20]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [96, 23, 24]
    }
    location {
      path: [4, 2, 2, 2, 8]
      span: [96, 25, 98, 3]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0]
      span: [97, 4, 89]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2]
      span: [97, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0]
      span: [97, 4, 31]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 2, 0, 1]
      span: [97, 5, 30]
    }
    location {
      path: [4, 2, 2, 2, 8, 999, 0, 7]
      span: [97, 34, 89]
    }
    location {
      path: [4, 2, 2, 3]
      span: [102, 2, 104, 4]
      leading_comments: " Arbitrary group ID for this event. Gathers events into buckets of variable size, usually used to indicate a user\n or device session.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [102, 2, 98, 4]
    }
    location {
      path: [4, 2, 2, 3, 5]
      span: [102, 2, 8]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [102, 9, 14]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [102, 17, 18]
    }
    location {
      path: [4, 2, 2, 3, 8]
      span: [102, 19, 104, 3]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0]
      span: [103, 4, 167]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2]
      span: [103, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0]
      span: [103, 4, 31]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 2, 0, 1]
      span: [103, 5, 30]
    }
    location {
      path: [4, 2, 2, 3, 8, 999, 0, 7]
      span: [103, 34, 167]
    }
    location {
      path: [4, 2, 2, 4]
      span: [107, 2, 109, 4]
      leading_comments: " Hostname of the server or client that transmitted this information, if it is known.\n"
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [107, 2, 104, 4]
    }
    location {
      path: [4, 2, 2, 4, 5]
      span: [107, 2, 8]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [107, 9, 17]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [107, 20, 21]
    }
    location {
      path: [4, 2, 2, 4, 8]
      span: [107, 22, 109, 3]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0]
      span: [108, 4, 119]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2]
      span: [108, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0]
      span: [108, 4, 31]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 2, 0, 1]
      span: [108, 5, 30]
    }
    location {
      path: [4, 2, 2, 4, 8, 999, 0, 7]
      span: [108, 34, 119]
    }
    location {
      path: [4, 2, 2, 5]
      span: [112, 2, 114, 4]
      leading_comments: " IP address of the server or client that transmitted this information, if is is known.\n"
    }
    location {
      path: [4, 2, 2, 5, 4]
      span: [112, 2, 109, 4]
    }
    location {
      path: [4, 2, 2, 5, 5]
      span: [112, 2, 8]
    }
    location {
      path: [4, 2, 2, 5, 1]
      span: [112, 9, 19]
    }
    location {
      path: [4, 2, 2, 5, 3]
      span: [112, 22, 23]
    }
    location {
      path: [4, 2, 2, 5, 8]
      span: [112, 24, 114, 3]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0]
      span: [113, 4, 121]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 2]
      span: [113, 4, 31]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 2, 0]
      span: [113, 4, 31]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 2, 0, 1]
      span: [113, 5, 30]
    }
    location {
      path: [4, 2, 2, 5, 8, 999, 0, 7]
      span: [113, 34, 121]
    }
    location {
      path: [4, 2, 2, 6]
      span: [117, 2, 119, 4]
      leading_comments: " Partner and commercial scope of this event.\n"
    }
    location {
      path: [4, 2, 2, 6, 4]
      span: [117, 2, 114, 4]
    }
    location {
      path: [4, 2, 2, 6, 6]
      span: [117, 2, 7]
    }
    location {
      path: [4, 2, 2, 6, 1]
      span: [117, 8, 13]
    }
    location {
      path: [4, 2, 2, 6, 3]
      span: [117, 16, 17]
    }
    location {
      path: [4, 2, 2, 6, 8]
      span: [117, 18, 119, 3]
    }
    location {
      path: [4, 2, 2, 6, 8, 999, 0]
      span: [118, 4, 79]
    }
    location {
      path: [4, 2, 2, 6, 8, 999, 0, 2]
      span: [118, 4, 31]
    }
    location {
      path: [4, 2, 2, 6, 8, 999, 0, 2, 0]
      span: [118, 4, 31]
    }
    location {
      path: [4, 2, 2, 6, 8, 999, 0, 2, 0, 1]
      span: [118, 5, 30]
    }
    location {
      path: [4, 2, 2, 6, 8, 999, 0, 7]
      span: [118, 34, 79]
    }
    location {
      path: [4, 2, 2, 7]
      span: [122, 2, 124, 4]
      leading_comments: " Application version information.\n"
    }
    location {
      path: [4, 2, 2, 7, 4]
      span: [122, 2, 119, 4]
    }
    location {
      path: [4, 2, 2, 7, 6]
      span: [122, 2, 37]
    }
    location {
      path: [4, 2, 2, 7, 1]
      span: [122, 38, 41]
    }
    location {
      path: [4, 2, 2, 7, 3]
      span: [122, 44, 45]
    }
    location {
      path: [4, 2, 2, 7, 8]
      span: [122, 46, 124, 3]
    }
    location {
      path: [4, 2, 2, 7, 8, 999, 0]
      span: [123, 4, 68]
    }
    location {
      path: [4, 2, 2, 7, 8, 999, 0, 2]
      span: [123, 4, 31]
    }
    location {
      path: [4, 2, 2, 7, 8, 999, 0, 2, 0]
      span: [123, 4, 31]
    }
    location {
      path: [4, 2, 2, 7, 8, 999, 0, 2, 0, 1]
      span: [123, 5, 30]
    }
    location {
      path: [4, 2, 2, 7, 8, 999, 0, 7]
      span: [123, 34, 68]
    }
    location {
      path: [4, 2, 2, 8]
      span: [127, 2, 129, 4]
      leading_comments: " Library version information.\n"
    }
    location {
      path: [4, 2, 2, 8, 4]
      span: [127, 2, 124, 4]
    }
    location {
      path: [4, 2, 2, 8, 6]
      span: [127, 2, 33]
    }
    location {
      path: [4, 2, 2, 8, 1]
      span: [127, 34, 41]
    }
    location {
      path: [4, 2, 2, 8, 3]
      span: [127, 44, 45]
    }
    location {
      path: [4, 2, 2, 8, 8]
      span: [127, 46, 129, 3]
    }
    location {
      path: [4, 2, 2, 8, 8, 999, 0]
      span: [128, 4, 64]
    }
    location {
      path: [4, 2, 2, 8, 8, 999, 0, 2]
      span: [128, 4, 31]
    }
    location {
      path: [4, 2, 2, 8, 8, 999, 0, 2, 0]
      span: [128, 4, 31]
    }
    location {
      path: [4, 2, 2, 8, 8, 999, 0, 2, 0, 1]
      span: [128, 5, 30]
    }
    location {
      path: [4, 2, 2, 8, 8, 999, 0, 7]
      span: [128, 34, 64]
    }
    location {
      path: [4, 2, 2, 9]
      span: [133, 2, 135, 4]
      leading_comments: " Specifies information about a native device, when the event is being sent from a native context of some kind,\n such as a mobile phone application or embedded device running partner code.\n"
    }
    location {
      path: [4, 2, 2, 9, 4]
      span: [133, 2, 129, 4]
    }
    location {
      path: [4, 2, 2, 9, 6]
      span: [133, 2, 39]
    }
    location {
      path: [4, 2, 2, 9, 1]
      span: [133, 40, 46]
    }
    location {
      path: [4, 2, 2, 9, 3]
      span: [133, 49, 51]
    }
    location {
      path: [4, 2, 2, 9, 8]
      span: [133, 52, 135, 3]
    }
    location {
      path: [4, 2, 2, 9, 8, 999, 0]
      span: [134, 4, 221]
    }
    location {
      path: [4, 2, 2, 9, 8, 999, 0, 2]
      span: [134, 4, 31]
    }
    location {
      path: [4, 2, 2, 9, 8, 999, 0, 2, 0]
      span: [134, 4, 31]
    }
    location {
      path: [4, 2, 2, 9, 8, 999, 0, 2, 0, 1]
      span: [134, 5, 30]
    }
    location {
      path: [4, 2, 2, 9, 8, 999, 0, 7]
      span: [134, 34, 221]
    }
    location {
      path: [4, 2, 2, 10]
      span: [138, 2, 140, 4]
      leading_comments: " Specifies information about a web browser, when the event is being sent from some kind of web browsing context.\n"
    }
    location {
      path: [4, 2, 2, 10, 4]
      span: [138, 2, 135, 4]
    }
    location {
      path: [4, 2, 2, 10, 6]
      span: [138, 2, 40]
    }
    location {
      path: [4, 2, 2, 10, 1]
      span: [138, 41, 48]
    }
    location {
      path: [4, 2, 2, 10, 3]
      span: [138, 51, 53]
    }
    location {
      path: [4, 2, 2, 10, 8]
      span: [138, 54, 140, 3]
    }
    location {
      path: [4, 2, 2, 10, 8, 999, 0]
      span: [139, 4, 147]
    }
    location {
      path: [4, 2, 2, 10, 8, 999, 0, 2]
      span: [139, 4, 31]
    }
    location {
      path: [4, 2, 2, 10, 8, 999, 0, 2, 0]
      span: [139, 4, 31]
    }
    location {
      path: [4, 2, 2, 10, 8, 999, 0, 2, 0, 1]
      span: [139, 5, 30]
    }
    location {
      path: [4, 2, 2, 10, 8, 999, 0, 7]
      span: [139, 34, 147]
    }
    location {
      path: [4, 2, 2, 11]
      span: [143, 2, 145, 4]
      leading_comments: " Origin location for this event, as determined by geolocation or explicit inclusion in the event payload.\n"
    }
    location {
      path: [4, 2, 2, 11, 4]
      span: [143, 2, 140, 4]
    }
    location {
      path: [4, 2, 2, 11, 6]
      span: [143, 2, 14]
    }
    location {
      path: [4, 2, 2, 11, 1]
      span: [143, 15, 23]
    }
    location {
      path: [4, 2, 2, 11, 3]
      span: [143, 26, 28]
    }
    location {
      path: [4, 2, 2, 11, 8]
      span: [143, 29, 145, 3]
    }
    location {
      path: [4, 2, 2, 11, 8, 999, 0]
      span: [144, 4, 140]
    }
    location {
      path: [4, 2, 2, 11, 8, 999, 0, 2]
      span: [144, 4, 31]
    }
    location {
      path: [4, 2, 2, 11, 8, 999, 0, 2, 0]
      span: [144, 4, 31]
    }
    location {
      path: [4, 2, 2, 11, 8, 999, 0, 2, 0, 1]
      span: [144, 5, 30]
    }
    location {
      path: [4, 2, 2, 11, 8, 999, 0, 7]
      span: [144, 34, 140]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "google/protobuf/struct.proto"
  package: "google.protobuf"
  message_type {
    name: "Struct"
    field {
      name: "fields"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.Struct.FieldsEntry"
      json_name: "fields"
    }
    nested_type {
      name: "FieldsEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".google.protobuf.Value"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
  }
  message_type {
    name: "Value"
    field {
      name: "null_value"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".google.protobuf.NullValue"
      oneof_index: 0
      json_name: "nullValue"
    }
    field {
      name: "number_value"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      oneof_index: 0
      json_name: "numberValue"
    }
    field {
      name: "string_value"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "stringValue"
    }
    field {
      name: "bool_value"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      oneof_index: 0
      json_name: "boolValue"
    }
    field {
      name: "struct_value"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.Struct"
      oneof_index: 0
      json_name: "structValue"
    }
    field {
      name: "list_value"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.ListValue"
      oneof_index: 0
      json_name: "listValue"
    }
    oneof_decl {
      name: "kind"
    }
  }
  message_type {
    name: "ListValue"
    field {
      name: "values"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.Value"
      json_name: "values"
    }
  }
  enum_type {
    name: "NullValue"
    value {
      name: "NULL_VALUE"
      number: 0
    }
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "StructProto"
    java_multiple_files: true
    go_package: "github.com/golang/protobuf/ptypes/struct;structpb"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.WellKnownTypes"
  }
  source_code_info {
    location {
      span: [30, 0, 95, 1]
    }
    location {
      path: [12]
      span: [30, 0, 18]
      leading_detached_comments: " Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
    }
    location {
      path: [2]
      span: [32, 8, 23]
    }
    location {
      path: [8]
      span: [34, 0, 59]
    }
    location {
      path: [8, 999, 0]
      span: [34, 0, 59]
    }
    location {
      path: [8, 999, 0, 2]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 7]
      span: [34, 26, 58]
    }
    location {
      path: [8]
      span: [35, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [35, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [35, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [35, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [35, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [35, 26, 30]
    }
    location {
      path: [8]
      span: [36, 0, 72]
    }
    location {
      path: [8, 999, 2]
      span: [36, 0, 72]
    }
    location {
      path: [8, 999, 2, 2]
      span: [36, 7, 17]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [36, 7, 17]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [36, 7, 17]
    }
    location {
      path: [8, 999, 2, 7]
      span: [36, 20, 71]
    }
    location {
      path: [8]
      span: [37, 0, 44]
    }
    location {
      path: [8, 999, 3]
      span: [37, 0, 44]
    }
    location {
      path: [8, 999, 3, 2]
      span: [37, 7, 19]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [37, 7, 19]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [37, 7, 19]
    }
    location {
      path: [8, 999, 3, 7]
      span: [37, 22, 43]
    }
    location {
      path: [8]
      span: [38, 0, 44]
    }
    location {
      path: [8, 999, 4]
      span: [38, 0, 44]
    }
    location {
      path: [8, 999, 4, 2]
      span: [38, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [38, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [38, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [38, 30, 43]
    }
    location {
      path: [8]
      span: [39, 0, 34]
    }
    location {
      path: [8, 999, 5]
      span: [39, 0, 34]
    }
    location {
      path: [8, 999, 5, 2]
      span: [39, 7, 26]
    }
    location {
      path: [8, 999, 5, 2, 0]
      span: [39, 7, 26]
    }
    location {
      path: [8, 999, 5, 2, 0, 1]
      span: [39, 7, 26]
    }
    location {
      path: [8, 999, 5, 3]
      span: [39, 29, 33]
    }
    location {
      path: [8]
      span: [40, 0, 33]
    }
    location {
      path: [8, 999, 6]
      span: [40, 0, 33]
    }
    location {
      path: [8, 999, 6, 2]
      span: [40, 7, 24]
    }
    location {
      path: [8, 999, 6, 2, 0]
      span: [40, 7, 24]
    }
    location {
      path: [8, 999, 6, 2, 0, 1]
      span: [40, 7, 24]
    }
    location {
      path: [8, 999, 6, 7]
      span: [40, 27, 32]
    }
    location {
      path: [4, 0]
      span: [51, 0, 54, 1]
      leading_comments: " `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.\n\n The JSON representation for `Struct` is JSON object.\n"
    }
    location {
      path: [4, 0, 1]
      span: [51, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [53, 2, 32]
      leading_comments: " Unordered map of dynamically typed values.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [53, 2, 51, 16]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [53, 2, 20]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [53, 21, 27]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [53, 30, 31]
    }
    location {
      path: [4, 1]
      span: [62, 0, 78, 1]
      leading_comments: " `Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of that\n variants, absence of any variant indicates an error.\n\n The JSON representation for `Value` is JSON value.\n"
    }
    location {
      path: [4, 1, 1]
      span: [62, 8, 13]
    }
    location {
      path: [4, 1, 8, 0]
      span: [64, 2, 77, 3]
      leading_comments: " The kind of value.\n"
    }
    location {
      path: [4, 1, 8, 0, 1]
      span: [64, 8, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [66, 4, 29]
      leading_comments: " Represents a null value.\n"
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [66, 4, 13]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [66, 14, 24]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [66, 27, 28]
    }
    location {
      path: [4, 1, 2, 1]
      span: [68, 4, 28]
      leading_comments: " Represents a double value.\n"
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [68, 4, 10]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [68, 11, 23]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [68, 26, 27]
    }
    location {
      path: [4, 1, 2, 2]
      span: [70, 4, 28]
      leading_comments: " Represents a string value.\n"
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [70, 4, 10]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [70, 11, 23]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [70, 26, 27]
    }
    location {
      path: [4, 1, 2, 3]
      span: [72, 4, 24]
      leading_comments: " Represents a boolean value.\n"
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [72, 4, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [72, 9, 19]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [72, 22, 23]
    }
    location {
      path: [4, 1, 2, 4]
      span: [74, 4, 28]
      leading_comments: " Represents a structured value.\n"
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [74, 4, 10]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [74, 11, 23]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [74, 26, 27]
    }
    location {
      path: [4, 1, 2, 5]
      span: [76, 4, 29]
      leading_comments: " Represents a repeated `Value`.\n"
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [76, 4, 13]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [76, 14, 24]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [76, 27, 28]
    }
    location {
      path: [5, 0]
      span: [84, 0, 87, 1]
      leading_comments: " `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n"
    }
    location {
      path: [5, 0, 1]
      span: [84, 5, 14]
    }
    location {
      path: [5, 0, 2, 0]
      span: [86, 2, 17]
      leading_comments: " Null value.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [86, 2, 12]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [86, 15, 16]
    }
    location {
      path: [4, 2]
      span: [92, 0, 95, 1]
      leading_comments: " `ListValue` is a wrapper around a repeated field of values.\n\n The JSON representation for `ListValue` is JSON array.\n"
    }
    location {
      path: [4, 2, 1]
      span: [92, 8, 17]
    }
    location {
      path: [4, 2, 2, 0]
      span: [94, 2, 28]
      leading_comments: " Repeated field of dynamically typed values.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [94, 2, 10]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [94, 11, 16]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [94, 17, 23]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [94, 26, 27]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/generic/Event.proto"
  package: "analytics.generic"
  dependency: "bq_field.proto"
  dependency: "temporal/Instant.proto"
  dependency: "analytics/Context.proto"
  dependency: "google/protobuf/struct.proto"
  message_type {
    name: "Event"
    field {
      name: "payload"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".google.protobuf.Struct"
      options {
        1024: 1
      }
      json_name: "payload"
    }
    field {
      name: "occurred"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      options {
        1024: 1
      }
      json_name: "occurred"
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry"
    java_outer_classname: "AnalyticsEvent"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 29, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 52]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 23]
    }
    location {
      path: [3, 1]
      span: [13, 7, 31]
    }
    location {
      path: [3, 2]
      span: [14, 7, 32]
    }
    location {
      path: [3, 3]
      span: [15, 7, 37]
    }
    location {
      path: [4, 0]
      span: [19, 0, 29, 1]
      leading_comments: " Represents a generic event, which can carry an arbitrary payload and is bound to an unenumerated collection.\n"
    }
    location {
      path: [4, 0, 1]
      span: [19, 8, 13]
    }
    location {
      path: [4, 0, 2, 0]
      span: [21, 2, 23, 4]
      leading_comments: " Payload data for this event.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [21, 2, 19, 15]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [21, 2, 24]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [21, 25, 32]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [21, 35, 36]
    }
    location {
      path: [4, 0, 2, 0, 8]
      span: [21, 37, 23, 3]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0]
      span: [22, 4, 33]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2]
      span: [22, 4, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0]
      span: [22, 4, 26]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 2, 0, 1]
      span: [22, 5, 25]
    }
    location {
      path: [4, 0, 2, 0, 8, 999, 0, 3]
      span: [22, 29, 33]
    }
    location {
      path: [4, 0, 2, 1]
      span: [26, 2, 28, 4]
      leading_comments: " Occurrence timestamp.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [26, 2, 23, 4]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [26, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [26, 19, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [26, 30, 31]
    }
    location {
      path: [4, 0, 2, 1, 8]
      span: [26, 32, 28, 3]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0]
      span: [27, 4, 33]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2]
      span: [27, 4, 26]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0]
      span: [27, 4, 26]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 2, 0, 1]
      span: [27, 5, 25]
    }
    location {
      path: [4, 0, 2, 1, 8, 999, 0, 3]
      span: [27, 29, 33]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/generic/Exception.proto"
  package: "analytics.generic"
  dependency: "temporal/Instant.proto"
  dependency: "analytics/Context.proto"
  message_type {
    name: "SourceLineReference"
    field {
      name: "line"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "line"
    }
    field {
      name: "column"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "column"
    }
  }
  message_type {
    name: "SourceLocation"
    field {
      name: "module"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "module"
    }
    field {
      name: "filepath"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "filepath"
    }
    field {
      name: "lineref"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.SourceLineReference"
      oneof_index: 0
      json_name: "lineref"
    }
    field {
      name: "offset"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_INT64
      oneof_index: 0
      json_name: "offset"
    }
    oneof_decl {
      name: "pinpoint"
    }
  }
  message_type {
    name: "Exception"
    field {
      name: "domain"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "domain"
    }
    field {
      name: "code"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "code"
    }
    field {
      name: "location"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.SourceLocation"
      json_name: "location"
    }
    field {
      name: "occurred"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  options {
    java_package: "io.bloombox.schema.telemetry"
    java_outer_classname: "AnalyticsException"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 57, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 53]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 52]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 50]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [3, 1]
      span: [12, 7, 32]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " References a line and column number in a source file that is mentioned in an error report.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 27]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 17]
      leading_comments: " Line number in a source code file.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 29]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [18, 2, 7]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 8, 12]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 15, 16]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 19]
      leading_comments: " Column number in a line in a source code file.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 17]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [21, 2, 7]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 8, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 17, 18]
    }
    location {
      path: [4, 1]
      span: [26, 0, 41, 1]
      leading_comments: " References a location for source code that is mentioned in an error report.\n"
    }
    location {
      path: [4, 1, 1]
      span: [26, 8, 22]
    }
    location {
      path: [4, 1, 2, 0]
      span: [28, 2, 20]
      leading_comments: " Arbitrary 'module' name for this source code. Usually the containing codebase.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [28, 2, 26, 24]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [28, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [28, 9, 15]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [28, 18, 19]
    }
    location {
      path: [4, 1, 2, 1]
      span: [31, 2, 22]
      leading_comments: " Full path to a source code file within that module or codebase.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [31, 2, 28, 20]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [31, 2, 8]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [31, 9, 17]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [31, 20, 21]
    }
    location {
      path: [4, 1, 8, 0]
      span: [34, 2, 40, 3]
      leading_comments: " Exact location within that file, either by raw byte offset or a line/column pair.\n"
    }
    location {
      path: [4, 1, 8, 0, 1]
      span: [34, 8, 16]
    }
    location {
      path: [4, 1, 2, 2]
      span: [36, 4, 36]
      leading_comments: " Reference to a line/column in that file.\n"
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [36, 4, 23]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [36, 24, 31]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [36, 34, 35]
    }
    location {
      path: [4, 1, 2, 3]
      span: [39, 4, 21]
      leading_comments: " Raw byte offset in a source code file.\n"
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [39, 4, 9]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [39, 10, 16]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [39, 19, 20]
    }
    location {
      path: [4, 2]
      span: [45, 0, 57, 1]
      leading_comments: " Represents an error event.\n"
    }
    location {
      path: [4, 2, 1]
      span: [45, 8, 17]
    }
    location {
      path: [4, 2, 2, 0]
      span: [47, 2, 20]
      leading_comments: " String domain value for this error, if any.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [47, 2, 45, 19]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [47, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [47, 9, 15]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [47, 18, 19]
    }
    location {
      path: [4, 2, 2, 1]
      span: [50, 2, 17]
      leading_comments: " Code for this failure type, if any.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [50, 2, 47, 20]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [50, 2, 7]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [50, 8, 12]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [50, 15, 16]
    }
    location {
      path: [4, 2, 2, 2]
      span: [53, 2, 30]
      leading_comments: " Source location context for this failure.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [53, 2, 50, 17]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [53, 2, 16]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [53, 17, 25]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [53, 28, 29]
    }
    location {
      path: [4, 2, 2, 3]
      span: [56, 2, 32]
      leading_comments: " Occurrence timestamp.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [56, 2, 53, 30]
    }
    location {
      path: [4, 2, 2, 3, 6]
      span: [56, 2, 18]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [56, 19, 27]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [56, 30, 31]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/generic/GenericEvents_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "analytics/generic/Event.proto"
  dependency: "analytics/generic/Exception.proto"
  message_type {
    name: "Event"
    nested_type {
      name: "Request"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "event"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.generic.Event"
        json_name: "event"
      }
    }
    nested_type {
      name: "Batch"
      field {
        name: "event"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_MESSAGE
        type_name: ".analytics.generic.Event"
        json_name: "event"
      }
    }
    nested_type {
      name: "BatchRequest"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "batch"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.Event.Batch"
        json_name: "batch"
      }
    }
  }
  message_type {
    name: "Exception"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "error"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.Exception"
      json_name: "error"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 50, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 38]
    }
    location {
      path: [3, 2]
      span: [12, 7, 42]
    }
    location {
      path: [4, 0]
      span: [16, 0, 40, 1]
      leading_comments: " Specifies an RPC operation to submit one or more generic events to an unenumerated collection.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 13]
    }
    location {
      path: [4, 0, 3, 0]
      span: [18, 2, 24, 3]
      leading_comments: " Specifies a request to submit a generic telemetry event record.\n"
    }
    location {
      path: [4, 0, 3, 0, 1]
      span: [18, 10, 17]
    }
    location {
      path: [4, 0, 3, 0, 2, 0]
      span: [20, 4, 34]
      leading_comments: " Context to submit for these events.\n"
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 4]
      span: [20, 4, 18, 19]
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 6]
      span: [20, 4, 21]
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 1]
      span: [20, 22, 29]
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 3]
      span: [20, 32, 33]
    }
    location {
      path: [4, 0, 3, 0, 2, 1]
      span: [23, 4, 38]
      leading_comments: " Generic event to submit.\n"
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 4]
      span: [23, 4, 20, 34]
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 6]
      span: [23, 4, 27]
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 1]
      span: [23, 28, 33]
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 3]
      span: [23, 36, 37]
    }
    location {
      path: [4, 0, 3, 1]
      span: [27, 2, 30, 3]
      leading_comments: " Specifies a request one or more generic telemetry event records.\n"
    }
    location {
      path: [4, 0, 3, 1, 1]
      span: [27, 10, 15]
    }
    location {
      path: [4, 0, 3, 1, 2, 0]
      span: [29, 4, 47]
      leading_comments: " Events to submit.\n"
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 4]
      span: [29, 4, 12]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 6]
      span: [29, 13, 36]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 1]
      span: [29, 37, 42]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 3]
      span: [29, 45, 46]
    }
    location {
      path: [4, 0, 3, 2]
      span: [33, 2, 39, 3]
      leading_comments: " Wraps an event batch in a request.\n"
    }
    location {
      path: [4, 0, 3, 2, 1]
      span: [33, 10, 22]
    }
    location {
      path: [4, 0, 3, 2, 2, 0]
      span: [35, 4, 34]
      leading_comments: " Context to submit for these events.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 4]
      span: [35, 4, 33, 24]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 6]
      span: [35, 4, 21]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 1]
      span: [35, 22, 29]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 3]
      span: [35, 32, 33]
    }
    location {
      path: [4, 0, 3, 2, 2, 1]
      span: [38, 4, 29]
      leading_comments: " Event batch.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 4]
      span: [38, 4, 12]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 6]
      span: [38, 13, 18]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 1]
      span: [38, 19, 24]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 3]
      span: [38, 27, 28]
    }
    location {
      path: [4, 1]
      span: [44, 0, 50, 1]
      leading_comments: " Specifies an RPC operation to submit one or more error report payloads to an unenumerated collection.\n"
    }
    location {
      path: [4, 1, 1]
      span: [44, 8, 17]
    }
    location {
      path: [4, 1, 2, 0]
      span: [46, 2, 32]
      leading_comments: " Context to submit for these events.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [46, 2, 44, 19]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [46, 2, 19]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [46, 20, 27]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [46, 30, 31]
    }
    location {
      path: [4, 1, 2, 1]
      span: [49, 2, 40]
      leading_comments: " Error to submit.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [49, 2, 46, 32]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [49, 2, 29]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [49, 30, 35]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [49, 38, 39]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/identity/UserAnalytics.proto"
  package: "analytics.identity"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "Action"
    field {
      name: "identity"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "identity"
    }
    field {
      name: "verb"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.identity.UserAction"
      json_name: "verb"
    }
    field {
      name: "occurred"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  enum_type {
    name: "UserAction"
    value {
      name: "ENGAGE"
      number: 0
    }
    value {
      name: "ENROLL"
      number: 10
    }
    value {
      name: "ACTIVATE"
      number: 11
    }
    value {
      name: "JOIN"
      number: 12
    }
    value {
      name: "VERIFY"
      number: 13
    }
    value {
      name: "CHECKIN"
      number: 14
    }
    value {
      name: "PREFERENCES"
      number: 15
    }
    value {
      name: "PURCHASE"
      number: 16
    }
    value {
      name: "ORDER"
      number: 17
    }
    value {
      name: "OPT_IN"
      number: 18
    }
    value {
      name: "OPT_OUT"
      number: 19
    }
  }
  options {
    java_package: "io.bloombox.schema.analytics.user"
    java_outer_classname: "UserAnalytics"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 64, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 26]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [5, 0]
      span: [15, 0, 50, 1]
      leading_comments: " Specifies actions that may be taken by a user. See also: `ShopAction`.\n"
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 15]
    }
    location {
      path: [5, 0, 2, 0]
      span: [17, 2, 13]
      leading_comments: " The user engaged in some manner, either anonymously, or with an identified user key.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [17, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [17, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [20, 2, 14]
      leading_comments: " The user signed up for a fresh, completely-new Bloombox account.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [20, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [20, 11, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [23, 2, 16]
      leading_comments: " The user activated a dormant or previously-created shadow account for themselves.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [23, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [23, 13, 15]
    }
    location {
      path: [5, 0, 2, 3]
      span: [26, 2, 12]
      leading_comments: " The user joined a particular partner location or organization.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [26, 2, 6]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [26, 9, 11]
    }
    location {
      path: [5, 0, 2, 4]
      span: [29, 2, 14]
      leading_comments: " The user verified an assertion of their identity or eligibility to purchase cannabis.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [29, 2, 8]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [29, 11, 13]
    }
    location {
      path: [5, 0, 2, 5]
      span: [32, 2, 15]
      leading_comments: " The user checked in at a physical or digital location.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [32, 2, 9]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [32, 12, 14]
    }
    location {
      path: [5, 0, 2, 6]
      span: [35, 2, 19]
      leading_comments: " The user adjusted their own preferences, w.r.t. a specific location, or globally.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [35, 2, 13]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [35, 16, 18]
    }
    location {
      path: [5, 0, 2, 7]
      span: [38, 2, 16]
      leading_comments: " The user made a purchase.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [38, 2, 10]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [38, 13, 15]
    }
    location {
      path: [5, 0, 2, 8]
      span: [41, 2, 13]
      leading_comments: " The user submitted an order for pickup or delivery.\n"
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [41, 2, 7]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [41, 10, 12]
    }
    location {
      path: [5, 0, 2, 9]
      span: [45, 2, 14]
      leading_comments: " The user opted-in globally to communications related to Bloombox, their account, and so on, whether physically or\n digitally.\n"
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [45, 2, 8]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [45, 11, 13]
    }
    location {
      path: [5, 0, 2, 10]
      span: [49, 2, 15]
      leading_comments: " The user opted-out globally from communications related to Bloombox, their account, and so on, whether physically\n or digitally.\n"
    }
    location {
      path: [5, 0, 2, 10, 1]
      span: [49, 2, 9]
    }
    location {
      path: [5, 0, 2, 10, 2]
      span: [49, 12, 14]
    }
    location {
      path: [4, 0]
      span: [55, 0, 64, 1]
      leading_comments: " Specifies a user action event, wherein a user has taken some affirmative action related to themselves, their identity\n with regards to a particular system, or their account or preferences.\n"
    }
    location {
      path: [4, 0, 1]
      span: [55, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [57, 2, 22]
      leading_comments: " User identity being referenced.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [57, 2, 55, 16]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [57, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [57, 9, 17]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [57, 20, 21]
    }
    location {
      path: [4, 0, 2, 1]
      span: [60, 2, 22]
      leading_comments: " Action that was taken upon or regarding the order.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [60, 2, 57, 22]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [60, 2, 12]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [60, 13, 17]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [60, 20, 21]
    }
    location {
      path: [4, 0, 2, 2]
      span: [63, 2, 32]
      leading_comments: " Specifies when this view event occurred.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [63, 2, 60, 22]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [63, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [63, 19, 27]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [63, 30, 31]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/identity/UserEvents_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "analytics/identity/UserAnalytics.proto"
  message_type {
    name: "UserAction"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "action"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.identity.Action"
      json_name: "action"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 22, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 47]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Specifies user action operations, wherein some system user has taken some affirmative action related to themselves,\n their identity, or their account.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 18]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 20]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 20, 27]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 30, 31]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 39]
      leading_comments: " Specifies the user action information to record.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 32]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [21, 2, 27]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 28, 34]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 37, 38]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/commerce/ShopAnalytics.proto"
  package: "analytics.shop"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "Impression"
    field {
      name: "physical"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "physical"
    }
    field {
      name: "occurred"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  message_type {
    name: "View"
    field {
      name: "physical"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "physical"
    }
    field {
      name: "interactive"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "interactive"
    }
    field {
      name: "occurred"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  message_type {
    name: "Action"
    field {
      name: "physical"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "physical"
    }
    field {
      name: "verb"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.shop.ShopAction"
      json_name: "verb"
    }
    field {
      name: "occurred"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  enum_type {
    name: "ShopAction"
    value {
      name: "ENGAGE"
      number: 0
    }
    value {
      name: "ENROLL"
      number: 10
    }
    value {
      name: "ACTIVATE"
      number: 11
    }
    value {
      name: "JOIN"
      number: 12
    }
    value {
      name: "VERIFY"
      number: 13
    }
    value {
      name: "CHECKIN"
      number: 14
    }
    value {
      name: "PREFERENCES"
      number: 15
    }
    value {
      name: "PURCHASE"
      number: 16
    }
    value {
      name: "ORDER"
      number: 17
    }
    value {
      name: "OPT_IN"
      number: 20
    }
    value {
      name: "OPT_OUT"
      number: 21
    }
  }
  options {
    java_package: "io.bloombox.schema.analytics.shop"
    java_outer_classname: "ShopAnalytics"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 95, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 22]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Specifies a shop impression event, wherein a user, known or unknown, has witnessed a shop's existence or brand, and\n was offered the decision to engage.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 18]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 20]
      leading_comments: " Whether this was an event that occurred at a physical store location, or not. Defaults to no.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 20]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [18, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 7, 15]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 18, 19]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 32]
      leading_comments: " Specifies when this impression event occurred.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 20]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [21, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 19, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 30, 31]
    }
    location {
      path: [4, 1]
      span: [27, 0, 36, 1]
      leading_comments: " Specifies a shop view event, wherein a user has navigated to a page on a digital web store, entered a physical\n brick-and-mortar location, or otherwise chosen to engage in a non-commercial way.\n"
    }
    location {
      path: [4, 1, 1]
      span: [27, 8, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [29, 2, 20]
      leading_comments: " Whether this was an event that occurred at a physical store location, or not. Defaults to no.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [29, 2, 27, 14]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [29, 2, 6]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [29, 7, 15]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [29, 18, 19]
    }
    location {
      path: [4, 1, 2, 1]
      span: [32, 2, 23]
      leading_comments: " Whether this was a user-initiated view, or a default view action of some kind.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [32, 2, 29, 20]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [32, 2, 6]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [32, 7, 18]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [32, 21, 22]
    }
    location {
      path: [4, 1, 2, 2]
      span: [35, 2, 32]
      leading_comments: " Specifies when this view event occurred.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [35, 2, 32, 23]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [35, 2, 18]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [35, 19, 27]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [35, 30, 31]
    }
    location {
      path: [5, 0]
      span: [40, 0, 81, 1]
      leading_comments: " Specifies actions that may be taken w.r.t. a physical or digital storefront. Stays in sync with `UserAction`.\n"
    }
    location {
      path: [5, 0, 1]
      span: [40, 5, 15]
    }
    location {
      path: [5, 0, 2, 0]
      span: [42, 2, 13]
      leading_comments: " The storefront was viewed, or entered physically by a patron.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [42, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [42, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [45, 2, 14]
      leading_comments: " The storefront or digital property facilitated the user's enrollment with Bloombox.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [45, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [45, 11, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [49, 2, 16]
      leading_comments: " The user activated a dormant or previously-created shadow account for themselves at this digital storefront or\n physical storefront location.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [49, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [49, 13, 15]
    }
    location {
      path: [5, 0, 2, 3]
      span: [53, 2, 12]
      leading_comments: " The storefront or digital property facilitated the enrollment of an existing Bloombox user with the storefront's\n membership systems, either operated by Bloombox or another party.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [53, 2, 6]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [53, 9, 11]
    }
    location {
      path: [5, 0, 2, 4]
      span: [57, 2, 14]
      leading_comments: " A physical storefront verified a user's cannabis recommendation, age eligibility, or in general, their eligibility\n to make purchases including legal cannabis.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [57, 2, 8]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [57, 11, 13]
    }
    location {
      path: [5, 0, 2, 5]
      span: [60, 2, 15]
      leading_comments: " A physical storefront checked a user in, or a digital storefront logged a user in.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [60, 2, 9]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [60, 12, 14]
    }
    location {
      path: [5, 0, 2, 6]
      span: [64, 2, 19]
      leading_comments: " The user's preferences were adjusted in some manner, either online, after logging in as themselves; or by partner\n staff through back-office systems.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [64, 2, 13]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [64, 16, 18]
    }
    location {
      path: [5, 0, 2, 7]
      span: [67, 2, 16]
      leading_comments: " The user made a purchase, either digitally, or at a brick-and-mortar location, facilitated by partner staff.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [67, 2, 10]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [67, 13, 15]
    }
    location {
      path: [5, 0, 2, 8]
      span: [71, 2, 13]
      leading_comments: " The user submitted an order, digitally, via the online shop; or via other communication mediums (phone/email) and\n entered and facilitated by dispensary staff, via back-office systems.\n"
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [71, 2, 7]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [71, 10, 12]
    }
    location {
      path: [5, 0, 2, 9]
      span: [76, 2, 14]
      leading_comments: " The user opted in to receive marketing content of some kind, or authorized communications from a partner, whether\n physically or digitally. This is distinguished from the corresponding `UserAction`, which is global, and therefore\n carries a different ID.\n"
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [76, 2, 8]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [76, 11, 13]
    }
    location {
      path: [5, 0, 2, 10]
      span: [80, 2, 15]
      leading_comments: " The user opted out from receiving marketing content from a partner, whether physically or digitally. This is\n distinguished from the corresponding `UserAction`, which is global, and therefore carries a different ID.\n"
    }
    location {
      path: [5, 0, 2, 10, 1]
      span: [80, 2, 9]
    }
    location {
      path: [5, 0, 2, 10, 2]
      span: [80, 12, 14]
    }
    location {
      path: [4, 2]
      span: [86, 0, 95, 1]
      leading_comments: " Specifies a shop action event, wherein a user has affirmatively elected to take some action while engaged in an\n interactive session with a digital or physical commercial storefront.\n"
    }
    location {
      path: [4, 2, 1]
      span: [86, 8, 14]
    }
    location {
      path: [4, 2, 2, 0]
      span: [88, 2, 20]
      leading_comments: " Whether this was an event that occurred at a physical store location, or not. Defaults to no.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [88, 2, 86, 16]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [88, 2, 6]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [88, 7, 15]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [88, 18, 19]
    }
    location {
      path: [4, 2, 2, 1]
      span: [91, 2, 22]
      leading_comments: " Action that was taken at or within the digital or physical shop.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [91, 2, 88, 20]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [91, 2, 12]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [91, 13, 17]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [91, 20, 21]
    }
    location {
      path: [4, 2, 2, 2]
      span: [94, 2, 32]
      leading_comments: " Specifies when this action event occurred.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [94, 2, 91, 22]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [94, 2, 18]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [94, 19, 27]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [94, 30, 31]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/commerce/ShopEvents_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "analytics/commerce/ShopAnalytics.proto"
  message_type {
    name: "ShopImpression"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "impression"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.shop.Impression"
      json_name: "impression"
    }
  }
  message_type {
    name: "ShopView"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "view"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.shop.View"
      json_name: "view"
    }
  }
  message_type {
    name: "ShopAction"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "action"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.shop.Action"
      json_name: "action"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 46, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 47]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Specifies an impression event for a physical or digital storefront or shop. For brick-and-mortar locations, this\n would be passers-by. For a digital storefront, this would be an ad online, an email pixel, or some other prompt.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 22]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 24]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 20, 27]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 30, 31]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 43]
      leading_comments: " Shop impression data to submit.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 32]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [21, 2, 27]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 28, 38]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 41, 42]
    }
    location {
      path: [4, 1]
      span: [27, 0, 33, 1]
      leading_comments: " Specifies a view event for a physical or digital storefront or shop. For brick-and-mortar locations, this would be\n entering the premises. For a digital storefront, these are pageviews.\n"
    }
    location {
      path: [4, 1, 1]
      span: [27, 8, 16]
    }
    location {
      path: [4, 1, 2, 0]
      span: [29, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [29, 2, 27, 18]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [29, 2, 19]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [29, 20, 27]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [29, 30, 31]
    }
    location {
      path: [4, 1, 2, 1]
      span: [32, 2, 31]
      leading_comments: " Shop view data to submit.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [32, 2, 29, 32]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [32, 2, 21]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [32, 22, 26]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [32, 29, 30]
    }
    location {
      path: [4, 2]
      span: [40, 0, 46, 1]
      leading_comments: " Specifies a specific action taken w.r.t. a commercial storefront, either digital or brick-and-mortar. For physical\n storefronts, this would be akin to signing up to be a member, making a purchase, etc. For digital storefronts, the\n events are largely the same, but would include the cart flow (adding items, checking out, clearing cart), adjusting\n site-scoped preferences, and so on.\n"
    }
    location {
      path: [4, 2, 1]
      span: [40, 8, 18]
    }
    location {
      path: [4, 2, 2, 0]
      span: [42, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [42, 2, 40, 20]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [42, 2, 19]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [42, 20, 27]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [42, 30, 31]
    }
    location {
      path: [4, 2, 2, 1]
      span: [45, 2, 35]
      leading_comments: " Shop action data to submit.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [45, 2, 42, 32]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [45, 2, 23]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [45, 24, 30]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [45, 33, 34]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/commerce/OrderAnalytics.proto"
  package: "analytics.order"
  dependency: "commerce/Order.proto"
  dependency: "temporal/Instant.proto"
  dependency: "commerce/Customer.proto"
  message_type {
    name: "Action"
    field {
      name: "order_key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".commerce.OrderKey"
      json_name: "orderKey"
    }
    field {
      name: "verb"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.order.OrderAction"
      json_name: "verb"
    }
    field {
      name: "customer"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".commerce.Customer"
      json_name: "customer"
    }
    field {
      name: "occurred"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  enum_type {
    name: "OrderAction"
    value {
      name: "ADD_TO_CART"
      number: 0
    }
    value {
      name: "REMOVE_FROM_CART"
      number: 1
    }
    value {
      name: "RESTORE_CART"
      number: 2
    }
    value {
      name: "VERIFY_MEMBER"
      number: 3
    }
    value {
      name: "ORDER_SUBMIT"
      number: 4
    }
    value {
      name: "ORDER_STATUS"
      number: 5
    }
    value {
      name: "ORDER_CANCEL"
      number: 6
    }
    value {
      name: "ORDER_ACCEPTED"
      number: 7
    }
    value {
      name: "ORDER_REJECTED"
      number: 8
    }
    value {
      name: "ORDER_IN_PROGERSS"
      number: 9
    }
    value {
      name: "ORDER_OUT_FOR_DELIVERY"
      number: 10
    }
    value {
      name: "ORDER_FULFILLED"
      number: 11
    }
  }
  options {
    java_package: "io.bloombox.schema.analytics.order"
    java_outer_classname: "OrderAnalytics"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 70, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 23]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 59]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 59]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 58]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 29]
    }
    location {
      path: [3, 1]
      span: [12, 7, 31]
    }
    location {
      path: [3, 2]
      span: [13, 7, 32]
    }
    location {
      path: [5, 0]
      span: [17, 0, 53, 1]
      leading_comments: " Specifies actions that may be taken on an order.\n"
    }
    location {
      path: [5, 0, 1]
      span: [17, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [19, 2, 18]
      leading_comments: " The user added to their cart.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [19, 2, 13]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [19, 16, 17]
    }
    location {
      path: [5, 0, 2, 1]
      span: [22, 2, 23]
      leading_comments: " The user removed something from their cart.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [22, 2, 18]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [22, 21, 22]
    }
    location {
      path: [5, 0, 2, 2]
      span: [25, 2, 19]
      leading_comments: " The user restored a previous cart.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [25, 2, 14]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [25, 17, 18]
    }
    location {
      path: [5, 0, 2, 3]
      span: [28, 2, 20]
      leading_comments: " The user verified themselves as a member, to place an order.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [28, 2, 15]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [28, 18, 19]
    }
    location {
      path: [5, 0, 2, 4]
      span: [31, 2, 19]
      leading_comments: " The user submitted an order.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [31, 2, 14]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [31, 17, 18]
    }
    location {
      path: [5, 0, 2, 5]
      span: [34, 2, 19]
      leading_comments: " The user queries status for an order.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [34, 2, 14]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [34, 17, 18]
    }
    location {
      path: [5, 0, 2, 6]
      span: [37, 2, 19]
      leading_comments: " The user cancelled an order.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [37, 2, 14]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [37, 17, 18]
    }
    location {
      path: [5, 0, 2, 7]
      span: [40, 2, 21]
      leading_comments: " An order was accepted by a back-office user.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [40, 2, 16]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [40, 19, 20]
    }
    location {
      path: [5, 0, 2, 8]
      span: [43, 2, 21]
      leading_comments: " An order was rejected by a back-office user.\n"
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [43, 2, 16]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [43, 19, 20]
    }
    location {
      path: [5, 0, 2, 9]
      span: [46, 2, 24]
      leading_comments: " An order was set to in-progress by a back-office user.\n"
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [46, 2, 19]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [46, 22, 23]
    }
    location {
      path: [5, 0, 2, 10]
      span: [49, 2, 30]
      leading_comments: " An order left for delivery.\n"
    }
    location {
      path: [5, 0, 2, 10, 1]
      span: [49, 2, 24]
    }
    location {
      path: [5, 0, 2, 10, 2]
      span: [49, 27, 29]
    }
    location {
      path: [5, 0, 2, 11]
      span: [52, 2, 23]
      leading_comments: " An order was fulfilled and may now be considered complete.\n"
    }
    location {
      path: [5, 0, 2, 11, 1]
      span: [52, 2, 17]
    }
    location {
      path: [5, 0, 2, 11, 2]
      span: [52, 20, 22]
    }
    location {
      path: [4, 0]
      span: [58, 0, 70, 1]
      leading_comments: " Specifies an order action event, wherein a user or backoffice admin has affirmatively taken some action upon or\n regarding a commercial order to be submitted or previously submitted by an end user.\n"
    }
    location {
      path: [4, 0, 1]
      span: [58, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [60, 2, 34]
      leading_comments: " Order being referenced for action, if any.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [60, 2, 58, 16]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [60, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [60, 20, 29]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [60, 32, 33]
    }
    location {
      path: [4, 0, 2, 1]
      span: [63, 2, 23]
      leading_comments: " Action that was taken upon or regarding the order.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [63, 2, 60, 34]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [63, 2, 13]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [63, 14, 18]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [63, 21, 22]
    }
    location {
      path: [4, 0, 2, 2]
      span: [66, 2, 33]
      leading_comments: " Customer that took this action.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [66, 2, 63, 23]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [66, 2, 19]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [66, 20, 28]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [66, 31, 32]
    }
    location {
      path: [4, 0, 2, 3]
      span: [69, 2, 32]
      leading_comments: " Specifies when this view event occurred.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [69, 2, 66, 33]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [69, 2, 18]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [69, 19, 27]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [69, 30, 31]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/commerce/OrderEvents_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "analytics/commerce/OrderAnalytics.proto"
  message_type {
    name: "OrderAction"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "action"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.order.Action"
      json_name: "action"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 21, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 48]
    }
    location {
      path: [4, 0]
      span: [15, 0, 21, 1]
      leading_comments: " Specifies an action taken on a commercial order.\n"
    }
    location {
      path: [4, 0, 1]
      span: [15, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [17, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [17, 2, 15, 21]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [17, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [17, 20, 27]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [17, 30, 31]
    }
    location {
      path: [4, 0, 2, 1]
      span: [20, 2, 36]
      leading_comments: " Order action data to submit.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [20, 2, 17, 32]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [20, 2, 24]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [20, 25, 31]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [20, 34, 35]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/commerce/SectionAnalytics.proto"
  package: "analytics.section"
  dependency: "temporal/Instant.proto"
  dependency: "products/menu/Section.proto"
  message_type {
    name: "Impression"
    field {
      name: "spec"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.section.SectionSpec"
      json_name: "spec"
    }
    field {
      name: "occurred"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  message_type {
    name: "View"
    field {
      name: "spec"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.section.SectionSpec"
      json_name: "spec"
    }
    field {
      name: "interactive"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "interactive"
    }
    field {
      name: "occurred"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  message_type {
    name: "Action"
    field {
      name: "spec"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.section.SectionSpec"
      json_name: "spec"
    }
    field {
      name: "verb"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.section.SectionAction"
      json_name: "verb"
    }
    field {
      name: "occurred"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  enum_type {
    name: "SectionAction"
    value {
      name: "VIEW"
      number: 0
    }
    value {
      name: "SORT"
      number: 1
    }
    value {
      name: "FILTER"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.analytics.section"
    java_outer_classname: "SectionAnalytics"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 62, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 48]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [3, 1]
      span: [12, 7, 36]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Specifies a section impression event, wherein a user has been presented a particular menu section.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 18]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 45]
      leading_comments: " Section that was presented.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 20]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 35]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 36, 40]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 43, 44]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 32]
      leading_comments: " Specifies when this impression event occurred.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 45]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [21, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 19, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 30, 31]
    }
    location {
      path: [4, 1]
      span: [26, 0, 35, 1]
      leading_comments: " Specifies a section view event, wherein a user has navigated to a particular menu section.\n"
    }
    location {
      path: [4, 1, 1]
      span: [26, 8, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [28, 2, 45]
      leading_comments: " Section that was viewed.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [28, 2, 26, 14]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [28, 2, 35]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [28, 36, 40]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [28, 43, 44]
    }
    location {
      path: [4, 1, 2, 1]
      span: [31, 2, 23]
      leading_comments: " Whether this was a user-initiated view, or a default view.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [31, 2, 28, 45]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [31, 2, 6]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [31, 7, 18]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [31, 21, 22]
    }
    location {
      path: [4, 1, 2, 2]
      span: [34, 2, 32]
      leading_comments: " Specifies when this view event occurred.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [34, 2, 31, 23]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [34, 2, 18]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [34, 19, 27]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [34, 30, 31]
    }
    location {
      path: [5, 0]
      span: [39, 0, 48, 1]
      leading_comments: " Specifies actions that may be taken within a menu section.\n"
    }
    location {
      path: [5, 0, 1]
      span: [39, 5, 18]
    }
    location {
      path: [5, 0, 2, 0]
      span: [41, 2, 11]
      leading_comments: " The section was viewed. Section views are implemented under-the-hood as actions of type VIEW.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [41, 2, 6]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [41, 9, 10]
    }
    location {
      path: [5, 0, 2, 1]
      span: [44, 2, 11]
      leading_comments: " The section was sorted on some product property, presumably reordering the visible products.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [44, 2, 6]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [44, 9, 10]
    }
    location {
      path: [5, 0, 2, 2]
      span: [47, 2, 13]
      leading_comments: " The section was filtered on some product property, presumably mutating the set of visible products.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [47, 2, 8]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [47, 11, 12]
    }
    location {
      path: [4, 2]
      span: [53, 0, 62, 1]
      leading_comments: " Specifies a section action event, wherein a user has affirmatively elected to take some action while within a master\n view of a particular menu section.\n"
    }
    location {
      path: [4, 2, 1]
      span: [53, 8, 14]
    }
    location {
      path: [4, 2, 2, 0]
      span: [55, 2, 45]
      leading_comments: " Section that was viewed.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [55, 2, 53, 16]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [55, 2, 35]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [55, 36, 40]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [55, 43, 44]
    }
    location {
      path: [4, 2, 2, 1]
      span: [58, 2, 25]
      leading_comments: " Action that was taken within the section.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [58, 2, 55, 45]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [58, 2, 15]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [58, 16, 20]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [58, 23, 24]
    }
    location {
      path: [4, 2, 2, 2]
      span: [61, 2, 32]
      leading_comments: " Specifies when this action event occurred.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [61, 2, 58, 25]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [61, 2, 18]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [61, 19, 27]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [61, 30, 31]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/commerce/SectionEvents_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "analytics/commerce/SectionAnalytics.proto"
  message_type {
    name: "SectionImpression"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "impression"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.section.Impression"
      json_name: "impression"
    }
  }
  message_type {
    name: "SectionView"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "view"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.section.View"
      json_name: "view"
    }
  }
  message_type {
    name: "SectionAction"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "action"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.section.Action"
      json_name: "action"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 44, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 50]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Specifies section 'impression' request and response operations, wherein we are recording that a user has been\n presented or otherwise displayed the option to navigate to a particular menu section.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 25]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 27]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 20, 27]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 30, 31]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 46]
      leading_comments: " Specifies the section impression information to record.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 32]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [21, 2, 30]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 31, 41]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 44, 45]
    }
    location {
      path: [4, 1]
      span: [27, 0, 33, 1]
      leading_comments: " Specifies section 'view' request and response operations, wherein we are recording that a user has elected to list or\n browse a particular section of the menu.\n"
    }
    location {
      path: [4, 1, 1]
      span: [27, 8, 19]
    }
    location {
      path: [4, 1, 2, 0]
      span: [29, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [29, 2, 27, 21]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [29, 2, 19]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [29, 20, 27]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [29, 30, 31]
    }
    location {
      path: [4, 1, 2, 1]
      span: [32, 2, 34]
      leading_comments: " Specifies the section view information to record.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [32, 2, 29, 32]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [32, 2, 24]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [32, 25, 29]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [32, 32, 33]
    }
    location {
      path: [4, 2]
      span: [38, 0, 44, 1]
      leading_comments: " Specifies section 'action' request and response operations, wherein we are recording that a user elected to take some\n affirmative action within a particular menu section, such as filtering or sorting.\n"
    }
    location {
      path: [4, 2, 1]
      span: [38, 8, 21]
    }
    location {
      path: [4, 2, 2, 0]
      span: [40, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [40, 2, 38, 23]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [40, 2, 19]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [40, 20, 27]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [40, 30, 31]
    }
    location {
      path: [4, 2, 2, 1]
      span: [43, 2, 38]
      leading_comments: " Specifies the section action information to record.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [43, 2, 40, 32]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [43, 2, 26]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [43, 27, 33]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [43, 36, 37]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "analytics/commerce/ProductAnalytics.proto"
  package: "analytics.product"
  dependency: "base/ProductKey.proto"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "Impression"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "filtered"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "filtered"
    }
    field {
      name: "sorted"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "sorted"
    }
    field {
      name: "occurred"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  message_type {
    name: "View"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "interactive"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "interactive"
    }
    field {
      name: "occurred"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  message_type {
    name: "Action"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "verb"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".analytics.product.ProductAction"
      json_name: "verb"
    }
    field {
      name: "occurred"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
  }
  enum_type {
    name: "ProductAction"
    value {
      name: "VIEW"
      number: 0
    }
    value {
      name: "SHARE"
      number: 1
    }
    value {
      name: "FAVORITE"
      number: 2
    }
    value {
      name: "COMPARE"
      number: 3
    }
    value {
      name: "CART"
      number: 4
    }
    value {
      name: "PURCHASE"
      number: 5
    }
    value {
      name: "SUBSCRIBE"
      number: 6
    }
    value {
      name: "ZOOM"
      number: 7
    }
    value {
      name: "REPORTS"
      number: 8
    }
    value {
      name: "SIMILAR"
      number: 9
    }
  }
  options {
    java_package: "io.bloombox.schema.analytics.product"
    java_outer_classname: "ProductAnalytics"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 89, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 25]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 61]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 60]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 48]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [12, 7, 31]
    }
    location {
      path: [4, 0]
      span: [17, 0, 29, 1]
      leading_comments: " Specifies that a product was presented, alongside one or more other products in a master-style view, as a candidate\n for detail information to an end user.\n"
    }
    location {
      path: [4, 0, 1]
      span: [17, 8, 18]
    }
    location {
      path: [4, 0, 2, 0]
      span: [19, 2, 26]
      leading_comments: " Key for the product that was viewed.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [19, 2, 17, 20]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [19, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [19, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [19, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [22, 2, 20]
      leading_comments: " If the master view was filtered in any way, this flag is set.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [22, 2, 19, 26]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [22, 2, 6]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [22, 7, 15]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [22, 18, 19]
    }
    location {
      path: [4, 0, 2, 2]
      span: [25, 2, 18]
      leading_comments: " If the master view was sorted in any way, this flag is set.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [25, 2, 22, 20]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [25, 2, 6]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [25, 7, 13]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [25, 16, 17]
    }
    location {
      path: [4, 0, 2, 3]
      span: [28, 2, 32]
      leading_comments: " Timestamp for when this impression occurred.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [28, 2, 25, 18]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [28, 2, 18]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [28, 19, 27]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [28, 30, 31]
    }
    location {
      path: [4, 1]
      span: [33, 0, 42, 1]
      leading_comments: " Specifies that an end-user viewed detail information about a product.\n"
    }
    location {
      path: [4, 1, 1]
      span: [33, 8, 12]
    }
    location {
      path: [4, 1, 2, 0]
      span: [35, 2, 26]
      leading_comments: " Key for the product that was viewed.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [35, 2, 33, 14]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [35, 2, 17]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [35, 18, 21]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [35, 24, 25]
    }
    location {
      path: [4, 1, 2, 1]
      span: [38, 2, 23]
      leading_comments: " Whether this was a user-initiated view, or a default view.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [38, 2, 35, 26]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [38, 2, 6]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [38, 7, 18]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [38, 21, 22]
    }
    location {
      path: [4, 1, 2, 2]
      span: [41, 2, 32]
      leading_comments: " Timestamp for when this view occurred.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [41, 2, 38, 23]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [41, 2, 18]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [41, 19, 27]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [41, 30, 31]
    }
    location {
      path: [5, 0]
      span: [46, 0, 76, 1]
      leading_comments: " Specifies the types of actions that a user may take on a product.\n"
    }
    location {
      path: [5, 0, 1]
      span: [46, 5, 18]
    }
    location {
      path: [5, 0, 2, 0]
      span: [48, 2, 11]
      leading_comments: " The user viewed a product. Product views are implemented under the hood as 'VIEW' actions.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [48, 2, 6]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [48, 9, 10]
    }
    location {
      path: [5, 0, 2, 1]
      span: [51, 2, 12]
      leading_comments: " The user shared a product on social media, or via email or SMS to a friend.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [51, 2, 7]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [51, 10, 11]
    }
    location {
      path: [5, 0, 2, 2]
      span: [54, 2, 15]
      leading_comments: " The user favorited a product.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [54, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [54, 13, 14]
    }
    location {
      path: [5, 0, 2, 3]
      span: [57, 2, 14]
      leading_comments: " The user compared two or more products.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [57, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [57, 12, 13]
    }
    location {
      path: [5, 0, 2, 4]
      span: [60, 2, 11]
      leading_comments: " The user added this product to their cart.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [60, 2, 6]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [60, 9, 10]
    }
    location {
      path: [5, 0, 2, 5]
      span: [63, 2, 15]
      leading_comments: " The user purchased a product.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [63, 2, 10]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [63, 13, 14]
    }
    location {
      path: [5, 0, 2, 6]
      span: [66, 2, 16]
      leading_comments: " The user subscribed to updates for a product.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [66, 2, 11]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [66, 14, 15]
    }
    location {
      path: [5, 0, 2, 7]
      span: [69, 2, 11]
      leading_comments: " The user magnified media for a product.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [69, 2, 6]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [69, 9, 10]
    }
    location {
      path: [5, 0, 2, 8]
      span: [72, 2, 14]
      leading_comments: " The user examined reports or lab test results for a product.\n"
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [72, 2, 9]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [72, 12, 13]
    }
    location {
      path: [5, 0, 2, 9]
      span: [75, 2, 14]
      leading_comments: " The user made use of the \"similar products\" UI while viewing this product.\n"
    }
    location {
      path: [5, 0, 2, 9, 1]
      span: [75, 2, 9]
    }
    location {
      path: [5, 0, 2, 9, 2]
      span: [75, 12, 13]
    }
    location {
      path: [4, 2]
      span: [80, 0, 89, 1]
      leading_comments: " An action that was taken affirmatively by a user on a particular product.\n"
    }
    location {
      path: [4, 2, 1]
      span: [80, 8, 14]
    }
    location {
      path: [4, 2, 2, 0]
      span: [82, 2, 26]
      leading_comments: " Key for the product that action was taken on.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [82, 2, 80, 16]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [82, 2, 17]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [82, 18, 21]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [82, 24, 25]
    }
    location {
      path: [4, 2, 2, 1]
      span: [85, 2, 25]
      leading_comments: " The action that was taken on the product.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [85, 2, 82, 26]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [85, 2, 15]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [85, 16, 20]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [85, 23, 24]
    }
    location {
      path: [4, 2, 2, 2]
      span: [88, 2, 32]
      leading_comments: " Timestamp for when this action occurred.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [88, 2, 85, 25]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [88, 2, 18]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [88, 19, 27]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [88, 30, 31]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/commerce/ProductEvents_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "analytics/commerce/ProductAnalytics.proto"
  message_type {
    name: "ProductImpression"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "impression"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.product.Impression"
      json_name: "impression"
    }
  }
  message_type {
    name: "ProductView"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "view"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.product.View"
      json_name: "view"
    }
  }
  message_type {
    name: "ProductAction"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "action"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.product.Action"
      json_name: "action"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 44, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 50]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Specifies product 'impression' request and response operations, wherein we are recording the revealing or presenting\n of a product to an eligible end-user who may or may not be interested in that product.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 25]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 27]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 20, 27]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 30, 31]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 46]
      leading_comments: " The impression data to record.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 32]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [21, 2, 30]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 31, 41]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 44, 45]
    }
    location {
      path: [4, 1]
      span: [27, 0, 33, 1]
      leading_comments: " Specifies product 'view' request and response operations, wherein we are recording that a user affirmatively elected\n to view detailed information about a particular product.\n"
    }
    location {
      path: [4, 1, 1]
      span: [27, 8, 19]
    }
    location {
      path: [4, 1, 2, 0]
      span: [29, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [29, 2, 27, 21]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [29, 2, 19]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [29, 20, 27]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [29, 30, 31]
    }
    location {
      path: [4, 1, 2, 1]
      span: [32, 2, 34]
      leading_comments: " Product view data to record.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [32, 2, 29, 32]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [32, 2, 24]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [32, 25, 29]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [32, 32, 33]
    }
    location {
      path: [4, 2]
      span: [38, 0, 44, 1]
      leading_comments: " Specifies product 'action' request and response operations, wherein an end-user has affirmatively elected to take\n some conversion-style action related to a particular product, such as purchasing, sharing, or reviewing it, etc.\n"
    }
    location {
      path: [4, 2, 1]
      span: [38, 8, 21]
    }
    location {
      path: [4, 2, 2, 0]
      span: [40, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [40, 2, 38, 23]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [40, 2, 19]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [40, 20, 27]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [40, 30, 31]
    }
    location {
      path: [4, 2, 2, 1]
      span: [43, 2, 38]
      leading_comments: " Product action data to record.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [43, 2, 40, 32]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [43, 2, 26]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [43, 27, 33]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [43, 36, 37]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "google/protobuf/empty.proto"
  package: "google.protobuf"
  message_type {
    name: "Empty"
  }
  options {
    java_package: "com.google.protobuf"
    java_outer_classname: "EmptyProto"
    java_multiple_files: true
    go_package: "github.com/golang/protobuf/ptypes/empty"
    cc_enable_arenas: true
    objc_class_prefix: "GPB"
    csharp_namespace: "Google.Protobuf.WellKnownTypes"
  }
  source_code_info {
    location {
      span: [30, 0, 51, 16]
    }
    location {
      path: [12]
      span: [30, 0, 18]
      leading_detached_comments: " Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
    }
    location {
      path: [2]
      span: [32, 8, 23]
    }
    location {
      path: [8]
      span: [34, 0, 59]
    }
    location {
      path: [8, 999, 0]
      span: [34, 0, 59]
    }
    location {
      path: [8, 999, 0, 2]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [34, 7, 23]
    }
    location {
      path: [8, 999, 0, 7]
      span: [34, 26, 58]
    }
    location {
      path: [8]
      span: [35, 0, 62]
    }
    location {
      path: [8, 999, 1]
      span: [35, 0, 62]
    }
    location {
      path: [8, 999, 1, 2]
      span: [35, 7, 17]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [35, 7, 17]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [35, 7, 17]
    }
    location {
      path: [8, 999, 1, 7]
      span: [35, 20, 61]
    }
    location {
      path: [8]
      span: [36, 0, 44]
    }
    location {
      path: [8, 999, 2]
      span: [36, 0, 44]
    }
    location {
      path: [8, 999, 2, 2]
      span: [36, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [36, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [36, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [36, 22, 43]
    }
    location {
      path: [8]
      span: [37, 0, 43]
    }
    location {
      path: [8, 999, 3]
      span: [37, 0, 43]
    }
    location {
      path: [8, 999, 3, 2]
      span: [37, 7, 27]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [37, 7, 27]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [37, 7, 27]
    }
    location {
      path: [8, 999, 3, 7]
      span: [37, 30, 42]
    }
    location {
      path: [8]
      span: [38, 0, 34]
    }
    location {
      path: [8, 999, 4]
      span: [38, 0, 34]
    }
    location {
      path: [8, 999, 4, 2]
      span: [38, 7, 26]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [38, 7, 26]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [38, 7, 26]
    }
    location {
      path: [8, 999, 4, 3]
      span: [38, 29, 33]
    }
    location {
      path: [8]
      span: [39, 0, 33]
    }
    location {
      path: [8, 999, 5]
      span: [39, 0, 33]
    }
    location {
      path: [8, 999, 5, 2]
      span: [39, 7, 24]
    }
    location {
      path: [8, 999, 5, 2, 0]
      span: [39, 7, 24]
    }
    location {
      path: [8, 999, 5, 2, 0, 1]
      span: [39, 7, 24]
    }
    location {
      path: [8, 999, 5, 7]
      span: [39, 27, 32]
    }
    location {
      path: [8]
      span: [40, 0, 31]
    }
    location {
      path: [8, 999, 6]
      span: [40, 0, 31]
    }
    location {
      path: [8, 999, 6, 2]
      span: [40, 7, 23]
    }
    location {
      path: [8, 999, 6, 2, 0]
      span: [40, 7, 23]
    }
    location {
      path: [8, 999, 6, 2, 0, 1]
      span: [40, 7, 23]
    }
    location {
      path: [8, 999, 6, 3]
      span: [40, 26, 30]
    }
    location {
      path: [4, 0]
      span: [51, 0, 16]
      leading_comments: " A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }\n\n The JSON representation for `Empty` is empty JSON object `{}`.\n"
    }
    location {
      path: [4, 0, 1]
      span: [51, 8, 13]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/TelemetryService_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "services/ServiceStatus.proto"
  dependency: "telemetry/v1beta2/generic/GenericEvents_Beta2.proto"
  dependency: "telemetry/v1beta2/identity/UserEvents_Beta2.proto"
  dependency: "telemetry/v1beta2/commerce/ShopEvents_Beta2.proto"
  dependency: "telemetry/v1beta2/commerce/OrderEvents_Beta2.proto"
  dependency: "telemetry/v1beta2/commerce/SectionEvents_Beta2.proto"
  dependency: "telemetry/v1beta2/commerce/ProductEvents_Beta2.proto"
  dependency: "google/protobuf/empty.proto"
  dependency: "google/api/annotations.proto"
  message_type {
    name: "TelemetryResponse"
    field {
      name: "status"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".services.telemetry.v1beta2.OperationStatus"
      json_name: "status"
    }
    field {
      name: "count"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "count"
    }
    field {
      name: "service"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".services.ServiceStatus"
      json_name: "service"
    }
  }
  message_type {
    name: "TelemetryPing"
    nested_type {
      name: "Request"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
    }
    nested_type {
      name: "Response"
      field {
        name: "status"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.ServiceStatus"
        json_name: "status"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.TelemetryPing.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.TelemetryPing.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "CommercialEvent"
    nested_type {
      name: "Impression"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "section"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.SectionImpression"
        oneof_index: 0
        json_name: "section"
      }
      field {
        name: "product"
        number: 11
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.ProductImpression"
        oneof_index: 0
        json_name: "product"
      }
      field {
        name: "shop"
        number: 12
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.ShopImpression"
        oneof_index: 0
        json_name: "shop"
      }
      oneof_decl {
        name: "event"
      }
    }
    nested_type {
      name: "View"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "section"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.SectionView"
        oneof_index: 0
        json_name: "section"
      }
      field {
        name: "product"
        number: 11
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.ProductView"
        oneof_index: 0
        json_name: "product"
      }
      field {
        name: "shop"
        number: 12
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.ShopView"
        oneof_index: 0
        json_name: "shop"
      }
      oneof_decl {
        name: "event"
      }
    }
    nested_type {
      name: "Action"
      field {
        name: "name"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "name"
      }
      field {
        name: "context"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "section"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.SectionAction"
        oneof_index: 0
        json_name: "section"
      }
      field {
        name: "product"
        number: 11
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.ProductAction"
        oneof_index: 0
        json_name: "product"
      }
      field {
        name: "shop"
        number: 12
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.ShopAction"
        oneof_index: 0
        json_name: "shop"
      }
      field {
        name: "order"
        number: 13
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.OrderAction"
        oneof_index: 0
        json_name: "order"
      }
      oneof_decl {
        name: "event"
      }
    }
  }
  message_type {
    name: "IdentityEvent"
    nested_type {
      name: "Action"
      field {
        name: "name"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "name"
      }
      field {
        name: "context"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "action"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta2.UserAction"
        oneof_index: 0
        json_name: "action"
      }
      oneof_decl {
        name: "event"
      }
    }
  }
  enum_type {
    name: "OperationStatus"
    value {
      name: "OK"
      number: 0
    }
    value {
      name: "ERROR"
      number: 1
    }
  }
  enum_type {
    name: "TelemetryError"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "INVALID_COLLECTION"
      number: 1
    }
    value {
      name: "INVALID_PARTNER"
      number: 2
    }
    value {
      name: "INVALID_LOCATION"
      number: 3
    }
    value {
      name: "INVALID_DEVICE"
      number: 4
    }
    value {
      name: "INVALID_USER"
      number: 5
    }
    value {
      name: "INVALID_CLIENT"
      number: 6
    }
    value {
      name: "PARTNER_NOT_FOUND"
      number: 7
    }
    value {
      name: "LOCATION_NOT_FOUND"
      number: 8
    }
    value {
      name: "INVALID_PAYLOAD"
      number: 99
    }
  }
  service {
    name: "EventTelemetry"
    method {
      name: "Ping"
      input_type: ".services.telemetry.v1beta2.TelemetryPing.Request"
      output_type: ".services.telemetry.v1beta2.TelemetryPing.Response"
      options {
        72295728 {
          2: "/telemetry/v1beta2/ping"
          11 {
            4: "/telemetry/v1beta2/generic/ping"
            7: "*"
          }
        }
      }
    }
    method {
      name: "Event"
      input_type: ".services.telemetry.v1beta2.Event.Request"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta2/events/{context.collection.name}"
          7: "*"
          11 {
            4: "/telemetry/v1beta2/{context.scope.partner=partners/*}/events/{context.collection.name}"
            7: "*"
          }
        }
      }
    }
    method {
      name: "Batch"
      input_type: ".services.telemetry.v1beta2.Event.BatchRequest"
      output_type: ".services.telemetry.v1beta2.TelemetryResponse"
      options {
        72295728 {
          4: "/telemetry/v1beta2/events/batch"
          7: "*"
          11 {
            4: "/telemetry/v1beta2/{context.scope.partner=partners/*}/events/{context.collection.name}:batch"
            7: "*"
          }
        }
      }
    }
    method {
      name: "Error"
      input_type: ".services.telemetry.v1beta2.Exception"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta2/exceptions/{context.collection.name}"
          7: "*"
          11 {
            4: "/telemetry/v1beta2/{context.scope.partner=partners/*}/exceptions/{context.collection.name}"
            7: "*"
          }
        }
      }
    }
  }
  service {
    name: "CommercialTelemetry"
    method {
      name: "Impression"
      input_type: ".services.telemetry.v1beta2.CommercialEvent.Impression"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta2/commerce/{context.scope.commercial=*}:impress"
          7: "*"
          11 {
            2: "/telemetry/v1beta2/{context.scope.partner=partners/*}/commerce/{context.scope.commercial=*}:impress"
          }
        }
      }
    }
    method {
      name: "View"
      input_type: ".services.telemetry.v1beta2.CommercialEvent.View"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta2/commerce/{context.scope.commercial=*}:view"
          7: "*"
          11 {
            2: "/telemetry/v1beta2/{context.scope.partner=partners/*}/commerce/{context.scope.commercial=*}:view"
          }
        }
      }
    }
    method {
      name: "Action"
      input_type: ".services.telemetry.v1beta2.CommercialEvent.Action"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta2/commerce/{context.scope.commercial=*}/action/{name}"
          7: "*"
          11 {
            2: "/telemetry/v1beta2/{context.scope.partner=partners/*}/commerce/{context.scope.commercial=*}/action/{name}"
          }
        }
      }
    }
  }
  service {
    name: "IdentityTelemetry"
    method {
      name: "Action"
      input_type: ".services.telemetry.v1beta2.IdentityEvent.Action"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta2/identity/{context.user.uid}/action/{name}"
          7: "*"
          11 {
            2: "/telemetry/v1beta2/{context.scope.partner=partners/*}/identity/{context.user.uid}/action/{name}"
          }
        }
      }
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 291, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 37]
    }
    location {
      path: [3, 2]
      span: [13, 7, 60]
    }
    location {
      path: [3, 3]
      span: [14, 7, 58]
    }
    location {
      path: [3, 4]
      span: [15, 7, 58]
    }
    location {
      path: [3, 5]
      span: [16, 7, 59]
    }
    location {
      path: [3, 6]
      span: [17, 7, 61]
    }
    location {
      path: [3, 7]
      span: [18, 7, 61]
    }
    location {
      path: [3, 8]
      span: [20, 7, 36]
    }
    location {
      path: [3, 9]
      span: [21, 7, 37]
    }
    location {
      path: [5, 0]
      span: [25, 0, 31, 1]
      leading_comments: " Specifies status codes that a response may provide.\n"
    }
    location {
      path: [5, 0, 1]
      span: [25, 5, 20]
    }
    location {
      path: [5, 0, 2, 0]
      span: [27, 2, 9]
      leading_comments: " Everything went well.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [27, 2, 4]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [27, 7, 8]
    }
    location {
      path: [5, 0, 2, 1]
      span: [30, 2, 12]
      leading_comments: " An error of some kind occurred.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [30, 2, 7]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [30, 10, 11]
    }
    location {
      path: [5, 1]
      span: [35, 0, 65, 1]
      leading_comments: " Specifies known errors that may be emitted in exceptional processing cases.\n"
    }
    location {
      path: [5, 1, 1]
      span: [35, 5, 19]
    }
    location {
      path: [5, 1, 2, 0]
      span: [37, 2, 14]
      leading_comments: " An unknown internal error occurred.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [37, 2, 9]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [37, 12, 13]
    }
    location {
      path: [5, 1, 2, 1]
      span: [40, 2, 25]
      leading_comments: " The collection value was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [40, 2, 20]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [40, 23, 24]
    }
    location {
      path: [5, 1, 2, 2]
      span: [43, 2, 22]
      leading_comments: " The partner code was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [43, 2, 17]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [43, 20, 21]
    }
    location {
      path: [5, 1, 2, 3]
      span: [46, 2, 23]
      leading_comments: " The location code was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [46, 2, 18]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [46, 21, 22]
    }
    location {
      path: [5, 1, 2, 4]
      span: [49, 2, 21]
      leading_comments: " The device key was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [49, 2, 16]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [49, 19, 20]
    }
    location {
      path: [5, 1, 2, 5]
      span: [52, 2, 19]
      leading_comments: " The user key or ID was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 5, 1]
      span: [52, 2, 14]
    }
    location {
      path: [5, 1, 2, 5, 2]
      span: [52, 17, 18]
    }
    location {
      path: [5, 1, 2, 6]
      span: [55, 2, 21]
      leading_comments: " The client key or ID was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 6, 1]
      span: [55, 2, 16]
    }
    location {
      path: [5, 1, 2, 6, 2]
      span: [55, 19, 20]
    }
    location {
      path: [5, 1, 2, 7]
      span: [58, 2, 24]
      leading_comments: " The specified partner could not be found.\n"
    }
    location {
      path: [5, 1, 2, 7, 1]
      span: [58, 2, 19]
    }
    location {
      path: [5, 1, 2, 7, 2]
      span: [58, 22, 23]
    }
    location {
      path: [5, 1, 2, 8]
      span: [61, 2, 25]
      leading_comments: " The specified partner could not be found.\n"
    }
    location {
      path: [5, 1, 2, 8, 1]
      span: [61, 2, 20]
    }
    location {
      path: [5, 1, 2, 8, 2]
      span: [61, 23, 24]
    }
    location {
      path: [5, 1, 2, 9]
      span: [64, 2, 23]
      leading_comments: " The request payload was invalid in some manner.\n"
    }
    location {
      path: [5, 1, 2, 9, 1]
      span: [64, 2, 17]
    }
    location {
      path: [5, 1, 2, 9, 2]
      span: [64, 20, 22]
    }
    location {
      path: [4, 0]
      span: [69, 0, 78, 1]
      leading_comments: " Specifies a response to a request to submit telemetry data.\n"
    }
    location {
      path: [4, 0, 1]
      span: [69, 8, 25]
    }
    location {
      path: [4, 0, 2, 0]
      span: [71, 2, 29]
      leading_comments: " Status of the operation.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [71, 2, 69, 27]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [71, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [71, 18, 24]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [71, 27, 28]
    }
    location {
      path: [4, 0, 2, 1]
      span: [74, 2, 19]
      leading_comments: " Count of events submitted.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [74, 2, 71, 29]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [74, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [74, 9, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [74, 17, 18]
    }
    location {
      path: [4, 0, 2, 2]
      span: [77, 2, 28]
      leading_comments: " Service maintenance status, if applicable.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [77, 2, 74, 19]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [77, 2, 15]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [77, 16, 23]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [77, 26, 27]
    }
    location {
      path: [4, 1]
      span: [82, 0, 103, 1]
      leading_comments: " Specifies an RPC operation to retrieve status information for the telemetry service.\n"
    }
    location {
      path: [4, 1, 1]
      span: [82, 8, 21]
    }
    location {
      path: [4, 1, 3, 0]
      span: [84, 2, 87, 3]
      leading_comments: " Specifies a request to ping the service.\n"
    }
    location {
      path: [4, 1, 3, 0, 1]
      span: [84, 10, 17]
    }
    location {
      path: [4, 1, 3, 0, 2, 0]
      span: [86, 4, 34]
      leading_comments: " Optional context to include in this ping.\n"
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 4]
      span: [86, 4, 84, 19]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 6]
      span: [86, 4, 21]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 1]
      span: [86, 22, 29]
    }
    location {
      path: [4, 1, 3, 0, 2, 0, 3]
      span: [86, 32, 33]
    }
    location {
      path: [4, 1, 3, 1]
      span: [90, 2, 93, 3]
      leading_comments: " Specifies a response to a service ping.\n"
    }
    location {
      path: [4, 1, 3, 1, 1]
      span: [90, 10, 18]
    }
    location {
      path: [4, 1, 3, 1, 2, 0]
      span: [92, 4, 38]
      leading_comments: " Current service status.\n"
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 4]
      span: [92, 4, 90, 20]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 6]
      span: [92, 4, 26]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 1]
      span: [92, 27, 33]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 3]
      span: [92, 36, 37]
    }
    location {
      path: [4, 1, 3, 2]
      span: [96, 2, 102, 3]
      leading_comments: " Specifies an entire ping operation.\n"
    }
    location {
      path: [4, 1, 3, 2, 1]
      span: [96, 10, 19]
    }
    location {
      path: [4, 1, 3, 2, 2, 0]
      span: [98, 4, 24]
      leading_comments: " Request for service status.\n"
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 4]
      span: [98, 4, 96, 21]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 6]
      span: [98, 4, 11]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 1]
      span: [98, 12, 19]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 3]
      span: [98, 22, 23]
    }
    location {
      path: [4, 1, 3, 2, 2, 1]
      span: [101, 4, 26]
      leading_comments: " Response to a request for service status.\n"
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 4]
      span: [101, 4, 98, 24]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 6]
      span: [101, 4, 12]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 1]
      span: [101, 13, 21]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 3]
      span: [101, 24, 25]
    }
    location {
      path: [4, 2]
      span: [107, 0, 167, 1]
      leading_comments: " Specifies an event related to commercial services. This includes product events, section events, and order events.\n"
    }
    location {
      path: [4, 2, 1]
      span: [107, 8, 23]
    }
    location {
      path: [4, 2, 3, 0]
      span: [109, 2, 124, 3]
      leading_comments: " Specifies an impression-type event.\n"
    }
    location {
      path: [4, 2, 3, 0, 1]
      span: [109, 10, 20]
    }
    location {
      path: [4, 2, 3, 0, 2, 0]
      span: [111, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 4]
      span: [111, 4, 109, 22]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 6]
      span: [111, 4, 21]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 1]
      span: [111, 22, 29]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 3]
      span: [111, 32, 33]
    }
    location {
      path: [4, 2, 3, 0, 8, 0]
      span: [114, 4, 123, 5]
      leading_comments: " Event being reported in this transaction.\n"
    }
    location {
      path: [4, 2, 3, 0, 8, 0, 1]
      span: [114, 10, 15]
    }
    location {
      path: [4, 2, 3, 0, 2, 1]
      span: [116, 6, 37]
      leading_comments: " Impression event on a menu section.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 6]
      span: [116, 6, 23]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 1]
      span: [116, 24, 31]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 3]
      span: [116, 34, 36]
    }
    location {
      path: [4, 2, 3, 0, 2, 2]
      span: [119, 6, 37]
      leading_comments: " Impression event on a menu product.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 6]
      span: [119, 6, 23]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 1]
      span: [119, 24, 31]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 3]
      span: [119, 34, 36]
    }
    location {
      path: [4, 2, 3, 0, 2, 3]
      span: [122, 6, 31]
      leading_comments: " Impression event for a commercial shop.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 6]
      span: [122, 6, 20]
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 1]
      span: [122, 21, 25]
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 3]
      span: [122, 28, 30]
    }
    location {
      path: [4, 2, 3, 1]
      span: [127, 2, 142, 3]
      leading_comments: " Specifies a view-type event.\n"
    }
    location {
      path: [4, 2, 3, 1, 1]
      span: [127, 10, 14]
    }
    location {
      path: [4, 2, 3, 1, 2, 0]
      span: [129, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 4]
      span: [129, 4, 127, 16]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 6]
      span: [129, 4, 21]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 1]
      span: [129, 22, 29]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 3]
      span: [129, 32, 33]
    }
    location {
      path: [4, 2, 3, 1, 8, 0]
      span: [132, 4, 141, 5]
      leading_comments: " Event being reported in this transaction.\n"
    }
    location {
      path: [4, 2, 3, 1, 8, 0, 1]
      span: [132, 10, 15]
    }
    location {
      path: [4, 2, 3, 1, 2, 1]
      span: [134, 6, 31]
      leading_comments: " View event on a menu section.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 6]
      span: [134, 6, 17]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 1]
      span: [134, 18, 25]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 3]
      span: [134, 28, 30]
    }
    location {
      path: [4, 2, 3, 1, 2, 2]
      span: [137, 6, 31]
      leading_comments: " View event on a menu product.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 6]
      span: [137, 6, 17]
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 1]
      span: [137, 18, 25]
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 3]
      span: [137, 28, 30]
    }
    location {
      path: [4, 2, 3, 1, 2, 3]
      span: [140, 6, 25]
      leading_comments: " View event for a commercial shop.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 3, 6]
      span: [140, 6, 14]
    }
    location {
      path: [4, 2, 3, 1, 2, 3, 1]
      span: [140, 15, 19]
    }
    location {
      path: [4, 2, 3, 1, 2, 3, 3]
      span: [140, 22, 24]
    }
    location {
      path: [4, 2, 3, 2]
      span: [145, 2, 166, 3]
      leading_comments: " Specifies an action-type event.\n"
    }
    location {
      path: [4, 2, 3, 2, 1]
      span: [145, 10, 16]
    }
    location {
      path: [4, 2, 3, 2, 2, 0]
      span: [147, 4, 20]
      leading_comments: " Name for the action being transmitted. This is the string enum name for whatever event type is in use.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 4]
      span: [147, 4, 145, 18]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 5]
      span: [147, 4, 10]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 1]
      span: [147, 11, 15]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 3]
      span: [147, 18, 19]
    }
    location {
      path: [4, 2, 3, 2, 2, 1]
      span: [150, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 4]
      span: [150, 4, 147, 20]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 6]
      span: [150, 4, 21]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 1]
      span: [150, 22, 29]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 3]
      span: [150, 32, 33]
    }
    location {
      path: [4, 2, 3, 2, 8, 0]
      span: [153, 4, 165, 5]
      leading_comments: " Event being reported in this transaction.\n"
    }
    location {
      path: [4, 2, 3, 2, 8, 0, 1]
      span: [153, 10, 15]
    }
    location {
      path: [4, 2, 3, 2, 2, 2]
      span: [155, 6, 33]
      leading_comments: " Action event on a menu section.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 2, 6]
      span: [155, 6, 19]
    }
    location {
      path: [4, 2, 3, 2, 2, 2, 1]
      span: [155, 20, 27]
    }
    location {
      path: [4, 2, 3, 2, 2, 2, 3]
      span: [155, 30, 32]
    }
    location {
      path: [4, 2, 3, 2, 2, 3]
      span: [158, 6, 33]
      leading_comments: " Action event on a menu product.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 3, 6]
      span: [158, 6, 19]
    }
    location {
      path: [4, 2, 3, 2, 2, 3, 1]
      span: [158, 20, 27]
    }
    location {
      path: [4, 2, 3, 2, 2, 3, 3]
      span: [158, 30, 32]
    }
    location {
      path: [4, 2, 3, 2, 2, 4]
      span: [161, 6, 27]
      leading_comments: " Action event for a commercial shop.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 4, 6]
      span: [161, 6, 16]
    }
    location {
      path: [4, 2, 3, 2, 2, 4, 1]
      span: [161, 17, 21]
    }
    location {
      path: [4, 2, 3, 2, 2, 4, 3]
      span: [161, 24, 26]
    }
    location {
      path: [4, 2, 3, 2, 2, 5]
      span: [164, 6, 29]
      leading_comments: " Action event on a user order.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 5, 6]
      span: [164, 6, 17]
    }
    location {
      path: [4, 2, 3, 2, 2, 5, 1]
      span: [164, 18, 23]
    }
    location {
      path: [4, 2, 3, 2, 2, 5, 3]
      span: [164, 26, 28]
    }
    location {
      path: [4, 3]
      span: [172, 0, 186, 1]
      leading_comments: " Specifies an event related to a user's identity, account, preferences, or otherwise having some concern with the\n addressability, authentication, and relevace of a user's experience with Bloombox.\n"
    }
    location {
      path: [4, 3, 1]
      span: [172, 8, 21]
    }
    location {
      path: [4, 3, 3, 0]
      span: [174, 2, 185, 3]
      leading_comments: " Action taken by or on a user.\n"
      trailing_comments: " Name of the action we are reporting.\n"
    }
    location {
      path: [4, 3, 3, 0, 1]
      span: [174, 10, 16]
    }
    location {
      path: [4, 3, 3, 0, 2, 0]
      span: [177, 4, 20]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 4]
      span: [177, 4, 174, 18]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 5]
      span: [177, 4, 10]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 1]
      span: [177, 11, 15]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 3]
      span: [177, 18, 19]
    }
    location {
      path: [4, 3, 3, 0, 2, 1]
      span: [179, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 4]
      span: [179, 4, 177, 20]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 6]
      span: [179, 4, 21]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 1]
      span: [179, 22, 29]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 3]
      span: [179, 32, 33]
    }
    location {
      path: [4, 3, 3, 0, 8, 0]
      span: [181, 4, 184, 5]
    }
    location {
      path: [4, 3, 3, 0, 8, 0, 1]
      span: [181, 10, 15]
    }
    location {
      path: [4, 3, 3, 0, 2, 2]
      span: [183, 6, 29]
      leading_comments: " Action taken by or on a user.\n"
    }
    location {
      path: [4, 3, 3, 0, 2, 2, 6]
      span: [183, 6, 16]
    }
    location {
      path: [4, 3, 3, 0, 2, 2, 1]
      span: [183, 17, 23]
    }
    location {
      path: [4, 3, 3, 0, 2, 2, 3]
      span: [183, 26, 28]
    }
    location {
      path: [6, 0]
      span: [190, 0, 237, 1]
      leading_comments: " Provides support for transmission of operational and experiential telemetry data from first and second-party devices.\n"
    }
    location {
      path: [6, 0, 1]
      span: [190, 8, 22]
    }
    location {
      path: [6, 0, 2, 0]
      span: [192, 2, 200, 3]
      leading_comments: " Ping the server.\n"
    }
    location {
      path: [6, 0, 2, 0, 1]
      span: [192, 6, 10]
    }
    location {
      path: [6, 0, 2, 0, 2]
      span: [192, 11, 32]
    }
    location {
      path: [6, 0, 2, 0, 3]
      span: [192, 43, 65]
    }
    location {
      path: [6, 0, 2, 0, 4]
      span: [193, 4, 199, 6]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0]
      span: [193, 4, 199, 6]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2]
      span: [193, 11, 28]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0]
      span: [193, 11, 28]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [193, 12, 27]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 8]
      span: [193, 31, 199, 5]
    }
    location {
      path: [6, 0, 2, 1]
      span: [203, 2, 212, 3]
      leading_comments: " Submit a generic event.\n"
    }
    location {
      path: [6, 0, 2, 1, 1]
      span: [203, 6, 11]
    }
    location {
      path: [6, 0, 2, 1, 2]
      span: [203, 12, 25]
    }
    location {
      path: [6, 0, 2, 1, 3]
      span: [203, 36, 57]
    }
    location {
      path: [6, 0, 2, 1, 4]
      span: [204, 4, 211, 6]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0]
      span: [204, 4, 211, 6]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2]
      span: [204, 11, 28]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 0]
      span: [204, 11, 28]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 0, 1]
      span: [204, 12, 27]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 8]
      span: [204, 31, 211, 5]
    }
    location {
      path: [6, 0, 2, 2]
      span: [215, 2, 224, 3]
      leading_comments: " Submit one or more generic events via the batch interface.\n"
    }
    location {
      path: [6, 0, 2, 2, 1]
      span: [215, 6, 11]
    }
    location {
      path: [6, 0, 2, 2, 2]
      span: [215, 12, 30]
    }
    location {
      path: [6, 0, 2, 2, 3]
      span: [215, 41, 58]
    }
    location {
      path: [6, 0, 2, 2, 4]
      span: [216, 4, 223, 6]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0]
      span: [216, 4, 223, 6]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2]
      span: [216, 11, 28]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2, 0]
      span: [216, 11, 28]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2, 0, 1]
      span: [216, 12, 27]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 8]
      span: [216, 31, 223, 5]
    }
    location {
      path: [6, 0, 2, 3]
      span: [227, 2, 236, 3]
      leading_comments: " Submit one or more exception events.\n"
    }
    location {
      path: [6, 0, 2, 3, 1]
      span: [227, 6, 11]
    }
    location {
      path: [6, 0, 2, 3, 2]
      span: [227, 12, 21]
    }
    location {
      path: [6, 0, 2, 3, 3]
      span: [227, 32, 53]
    }
    location {
      path: [6, 0, 2, 3, 4]
      span: [228, 4, 235, 6]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0]
      span: [228, 4, 235, 6]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2]
      span: [228, 11, 28]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 0]
      span: [228, 11, 28]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 0, 1]
      span: [228, 12, 27]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 8]
      span: [228, 31, 235, 5]
    }
    location {
      path: [6, 1]
      span: [242, 0, 275, 1]
      leading_comments: " Provides support for tailored analytics payloads w.r.t. interactions between end-users and commercial models, like\n menu sections, products, and user orders.\n"
    }
    location {
      path: [6, 1, 1]
      span: [242, 8, 27]
    }
    location {
      path: [6, 1, 2, 0]
      span: [244, 2, 252, 3]
      leading_comments: " Register that a menu section was presented to a user, regardless of whether they acted on it or not.\n"
    }
    location {
      path: [6, 1, 2, 0, 1]
      span: [244, 6, 16]
    }
    location {
      path: [6, 1, 2, 0, 2]
      span: [244, 17, 43]
    }
    location {
      path: [6, 1, 2, 0, 3]
      span: [244, 54, 75]
    }
    location {
      path: [6, 1, 2, 0, 4]
      span: [245, 4, 251, 6]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0]
      span: [245, 4, 251, 6]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 2]
      span: [245, 11, 28]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 2, 0]
      span: [245, 11, 28]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [245, 12, 27]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 8]
      span: [245, 31, 251, 5]
    }
    location {
      path: [6, 1, 2, 1]
      span: [255, 2, 263, 3]
      leading_comments: " Register that a menu section was viewed, browsed-to, or otherwise served to a user.\n"
    }
    location {
      path: [6, 1, 2, 1, 1]
      span: [255, 6, 10]
    }
    location {
      path: [6, 1, 2, 1, 2]
      span: [255, 11, 31]
    }
    location {
      path: [6, 1, 2, 1, 3]
      span: [255, 42, 63]
    }
    location {
      path: [6, 1, 2, 1, 4]
      span: [256, 4, 262, 7]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0]
      span: [256, 4, 262, 7]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 2]
      span: [256, 11, 28]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 2, 0]
      span: [256, 11, 28]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 2, 0, 1]
      span: [256, 12, 27]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 8]
      span: [256, 31, 262, 6]
    }
    location {
      path: [6, 1, 2, 2]
      span: [266, 2, 274, 3]
      leading_comments: " Register that an end-user elected to take action within a section in some way.\n"
    }
    location {
      path: [6, 1, 2, 2, 1]
      span: [266, 6, 12]
    }
    location {
      path: [6, 1, 2, 2, 2]
      span: [266, 13, 35]
    }
    location {
      path: [6, 1, 2, 2, 3]
      span: [266, 46, 67]
    }
    location {
      path: [6, 1, 2, 2, 4]
      span: [267, 4, 273, 6]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0]
      span: [267, 4, 273, 6]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 2]
      span: [267, 11, 28]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 2, 0]
      span: [267, 11, 28]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 2, 0, 1]
      span: [267, 12, 27]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 8]
      span: [267, 31, 273, 5]
    }
    location {
      path: [6, 2]
      span: [280, 0, 291, 1]
      leading_comments: " Provides support for recording telemetry information about user events and actions related to their own identity,\n account, profile, preferences, and so on.\n"
    }
    location {
      path: [6, 2, 1]
      span: [280, 8, 25]
    }
    location {
      path: [6, 2, 2, 0]
      span: [282, 2, 290, 3]
      leading_comments: " Register affirmative action taken by an end-user on their own account or identity.\n"
    }
    location {
      path: [6, 2, 2, 0, 1]
      span: [282, 6, 12]
    }
    location {
      path: [6, 2, 2, 0, 2]
      span: [282, 13, 33]
    }
    location {
      path: [6, 2, 2, 0, 3]
      span: [282, 44, 65]
    }
    location {
      path: [6, 2, 2, 0, 4]
      span: [283, 4, 289, 6]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0]
      span: [283, 4, 289, 6]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 2]
      span: [283, 11, 28]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 2, 0]
      span: [283, 11, 28]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [283, 12, 27]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 8]
      span: [283, 31, 289, 5]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta2/TelemetryEvent_Beta2.proto"
  package: "services.telemetry.v1beta2"
  dependency: "analytics/Context.proto"
  dependency: "analytics/generic/Event.proto"
  dependency: "analytics/generic/Exception.proto"
  dependency: "telemetry/v1beta2/TelemetryService_Beta2.proto"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "TelemetryEvent"
    field {
      name: "uuid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uuid"
    }
    field {
      name: "context"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "ingest"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "ingest"
    }
    field {
      name: "occurred"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "occurred"
    }
    field {
      name: "generic"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.Event"
      oneof_index: 0
      json_name: "generic"
    }
    field {
      name: "error"
      number: 11
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.Exception"
      oneof_index: 0
      json_name: "error"
    }
    field {
      name: "impression"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta2.CommercialEvent.Impression"
      oneof_index: 0
      json_name: "impression"
    }
    field {
      name: "view"
      number: 21
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta2.CommercialEvent.View"
      oneof_index: 0
      json_name: "view"
    }
    field {
      name: "action"
      number: 22
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta2.CommercialEvent.Action"
      oneof_index: 0
      json_name: "action"
    }
    field {
      name: "user_action"
      number: 30
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta2.IdentityEvent.Action"
      oneof_index: 0
      json_name: "userAction"
    }
    oneof_decl {
      name: "event"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta2"
    java_outer_classname: "AnalyticsPipeline"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
    csharp_namespace: "Telemetry.v1beta2"
  }
  source_code_info {
    location {
      span: [1, 0, 54, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 70]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 70]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 69]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 50]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 50]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 49]
    }
    location {
      path: [8]
      span: [10, 0, 46]
    }
    location {
      path: [8, 999, 5]
      span: [10, 0, 46]
    }
    location {
      path: [8, 999, 5, 2]
      span: [10, 7, 23]
    }
    location {
      path: [8, 999, 5, 2, 0]
      span: [10, 7, 23]
    }
    location {
      path: [8, 999, 5, 2, 0, 1]
      span: [10, 7, 23]
    }
    location {
      path: [8, 999, 5, 7]
      span: [10, 26, 45]
    }
    location {
      path: [3, 0]
      span: [12, 7, 32]
    }
    location {
      path: [3, 1]
      span: [13, 7, 38]
    }
    location {
      path: [3, 2]
      span: [14, 7, 42]
    }
    location {
      path: [3, 3]
      span: [15, 7, 55]
    }
    location {
      path: [3, 4]
      span: [17, 7, 31]
    }
    location {
      path: [4, 0]
      span: [21, 0, 54, 1]
      leading_comments: " Wrapper object that provides support for transporting telemetry data of any kind.\n"
    }
    location {
      path: [4, 0, 1]
      span: [21, 8, 22]
    }
    location {
      path: [4, 0, 2, 0]
      span: [23, 2, 18]
      leading_comments: " UUID, as assigned by the server upon receiving this event.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [23, 2, 21, 24]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [23, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [23, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [23, 16, 17]
    }
    location {
      path: [4, 0, 2, 1]
      span: [26, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [26, 2, 23, 18]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [26, 2, 19]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [26, 20, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [26, 30, 31]
    }
    location {
      path: [4, 0, 2, 2]
      span: [29, 2, 30]
      leading_comments: " Timestamp for when this was received.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [29, 2, 26, 32]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [29, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [29, 19, 25]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [29, 28, 29]
    }
    location {
      path: [4, 0, 2, 3]
      span: [32, 2, 32]
      leading_comments: " Timestamp for when this was reported to have occurred.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [32, 2, 29, 30]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [32, 2, 18]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [32, 19, 27]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [32, 30, 31]
    }
    location {
      path: [4, 0, 8, 0]
      span: [35, 2, 53, 3]
      leading_comments: " Event data payload.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [35, 8, 13]
    }
    location {
      path: [4, 0, 2, 4]
      span: [37, 4, 41]
      leading_comments: " Generic: Event.\n"
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [37, 4, 27]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [37, 28, 35]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [37, 38, 40]
    }
    location {
      path: [4, 0, 2, 5]
      span: [40, 4, 43]
      leading_comments: " Generic: Exception.\n"
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [40, 4, 31]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [40, 32, 37]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [40, 40, 42]
    }
    location {
      path: [4, 0, 2, 6]
      span: [43, 4, 47]
      leading_comments: " Sections: Impression.\n"
    }
    location {
      path: [4, 0, 2, 6, 6]
      span: [43, 4, 30]
    }
    location {
      path: [4, 0, 2, 6, 1]
      span: [43, 31, 41]
    }
    location {
      path: [4, 0, 2, 6, 3]
      span: [43, 44, 46]
    }
    location {
      path: [4, 0, 2, 7]
      span: [46, 4, 35]
      leading_comments: " Sections: View.\n"
    }
    location {
      path: [4, 0, 2, 7, 6]
      span: [46, 4, 24]
    }
    location {
      path: [4, 0, 2, 7, 1]
      span: [46, 25, 29]
    }
    location {
      path: [4, 0, 2, 7, 3]
      span: [46, 32, 34]
    }
    location {
      path: [4, 0, 2, 8]
      span: [49, 4, 39]
      leading_comments: " Sections: Action.\n"
    }
    location {
      path: [4, 0, 2, 8, 6]
      span: [49, 4, 26]
    }
    location {
      path: [4, 0, 2, 8, 1]
      span: [49, 27, 33]
    }
    location {
      path: [4, 0, 2, 8, 3]
      span: [49, 36, 38]
    }
    location {
      path: [4, 0, 2, 9]
      span: [52, 4, 42]
      leading_comments: " Users: Action.\n"
    }
    location {
      path: [4, 0, 2, 9, 6]
      span: [52, 4, 24]
    }
    location {
      path: [4, 0, 2, 9, 1]
      span: [52, 25, 36]
    }
    location {
      path: [4, 0, 2, 9, 3]
      span: [52, 39, 41]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta3/GenericEvents_Beta3.proto"
  package: "services.telemetry.v1beta3"
  dependency: "analytics/Context.proto"
  dependency: "analytics/generic/Event.proto"
  dependency: "analytics/generic/Exception.proto"
  message_type {
    name: "Event"
    nested_type {
      name: "Request"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "event"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.generic.Event"
        json_name: "event"
      }
      field {
        name: "uuid"
        number: 3
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "uuid"
      }
    }
    nested_type {
      name: "Batch"
      field {
        name: "event"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_MESSAGE
        type_name: ".analytics.generic.Event"
        json_name: "event"
      }
    }
    nested_type {
      name: "BatchRequest"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "batch"
        number: 2
        label: LABEL_REPEATED
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta3.Event.Batch"
        json_name: "batch"
      }
    }
  }
  message_type {
    name: "Exception"
    field {
      name: "context"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "error"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.Exception"
      json_name: "error"
    }
    field {
      name: "uuid"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uuid"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta3"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta3"
  }
  source_code_info {
    location {
      span: [1, 0, 56, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 38]
    }
    location {
      path: [3, 2]
      span: [12, 7, 42]
    }
    location {
      path: [4, 0]
      span: [16, 0, 43, 1]
      leading_comments: " Specifies an RPC operation to submit one or more generic events to an unenumerated collection.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 13]
    }
    location {
      path: [4, 0, 3, 0]
      span: [18, 2, 27, 3]
      leading_comments: " Specifies a request to submit a generic telemetry event record.\n"
    }
    location {
      path: [4, 0, 3, 0, 1]
      span: [18, 10, 17]
    }
    location {
      path: [4, 0, 3, 0, 2, 0]
      span: [20, 4, 34]
      leading_comments: " Context to submit for these events.\n"
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 4]
      span: [20, 4, 18, 19]
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 6]
      span: [20, 4, 21]
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 1]
      span: [20, 22, 29]
    }
    location {
      path: [4, 0, 3, 0, 2, 0, 3]
      span: [20, 32, 33]
    }
    location {
      path: [4, 0, 3, 0, 2, 1]
      span: [23, 4, 38]
      leading_comments: " Generic event to submit.\n"
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 4]
      span: [23, 4, 20, 34]
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 6]
      span: [23, 4, 27]
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 1]
      span: [23, 28, 33]
    }
    location {
      path: [4, 0, 3, 0, 2, 1, 3]
      span: [23, 36, 37]
    }
    location {
      path: [4, 0, 3, 0, 2, 2]
      span: [26, 4, 20]
      leading_comments: " UUID generated for this event, or provided from invoking callers.\n"
    }
    location {
      path: [4, 0, 3, 0, 2, 2, 4]
      span: [26, 4, 23, 38]
    }
    location {
      path: [4, 0, 3, 0, 2, 2, 5]
      span: [26, 4, 10]
    }
    location {
      path: [4, 0, 3, 0, 2, 2, 1]
      span: [26, 11, 15]
    }
    location {
      path: [4, 0, 3, 0, 2, 2, 3]
      span: [26, 18, 19]
    }
    location {
      path: [4, 0, 3, 1]
      span: [30, 2, 33, 3]
      leading_comments: " Specifies a request one or more generic telemetry event records.\n"
    }
    location {
      path: [4, 0, 3, 1, 1]
      span: [30, 10, 15]
    }
    location {
      path: [4, 0, 3, 1, 2, 0]
      span: [32, 4, 47]
      leading_comments: " Events to submit.\n"
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 4]
      span: [32, 4, 12]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 6]
      span: [32, 13, 36]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 1]
      span: [32, 37, 42]
    }
    location {
      path: [4, 0, 3, 1, 2, 0, 3]
      span: [32, 45, 46]
    }
    location {
      path: [4, 0, 3, 2]
      span: [36, 2, 42, 3]
      leading_comments: " Wraps an event batch in a request.\n"
    }
    location {
      path: [4, 0, 3, 2, 1]
      span: [36, 10, 22]
    }
    location {
      path: [4, 0, 3, 2, 2, 0]
      span: [38, 4, 34]
      leading_comments: " Context to submit for these events.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 4]
      span: [38, 4, 36, 24]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 6]
      span: [38, 4, 21]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 1]
      span: [38, 22, 29]
    }
    location {
      path: [4, 0, 3, 2, 2, 0, 3]
      span: [38, 32, 33]
    }
    location {
      path: [4, 0, 3, 2, 2, 1]
      span: [41, 4, 29]
      leading_comments: " Event batch.\n"
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 4]
      span: [41, 4, 12]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 6]
      span: [41, 13, 18]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 1]
      span: [41, 19, 24]
    }
    location {
      path: [4, 0, 3, 2, 2, 1, 3]
      span: [41, 27, 28]
    }
    location {
      path: [4, 1]
      span: [47, 0, 56, 1]
      leading_comments: " Specifies an RPC operation to submit one or more error report payloads to an unenumerated collection.\n"
    }
    location {
      path: [4, 1, 1]
      span: [47, 8, 17]
    }
    location {
      path: [4, 1, 2, 0]
      span: [49, 2, 32]
      leading_comments: " Context to submit for these events.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [49, 2, 47, 19]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [49, 2, 19]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [49, 20, 27]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [49, 30, 31]
    }
    location {
      path: [4, 1, 2, 1]
      span: [52, 2, 40]
      leading_comments: " Error to submit.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [52, 2, 49, 32]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [52, 2, 29]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [52, 30, 35]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [52, 38, 39]
    }
    location {
      path: [4, 1, 2, 2]
      span: [55, 2, 18]
      leading_comments: " UUID generated for this event, or provided from invoking callers.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [55, 2, 52, 40]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [55, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [55, 9, 13]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [55, 16, 17]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta3/TelemetryService_Beta3.proto"
  package: "services.telemetry.v1beta3"
  dependency: "analytics/Context.proto"
  dependency: "services/ServiceStatus.proto"
  dependency: "analytics/commerce/ShopAnalytics.proto"
  dependency: "analytics/commerce/OrderAnalytics.proto"
  dependency: "analytics/commerce/ProductAnalytics.proto"
  dependency: "analytics/commerce/SectionAnalytics.proto"
  dependency: "analytics/identity/UserAnalytics.proto"
  dependency: "telemetry/v1beta3/GenericEvents_Beta3.proto"
  dependency: "google/protobuf/empty.proto"
  dependency: "google/api/annotations.proto"
  message_type {
    name: "TelemetryResponse"
    field {
      name: "status"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".services.telemetry.v1beta3.OperationStatus"
      json_name: "status"
    }
    field {
      name: "count"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "count"
    }
    field {
      name: "service"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".services.ServiceStatus"
      json_name: "service"
    }
  }
  message_type {
    name: "TelemetryPing"
    nested_type {
      name: "Request"
    }
    nested_type {
      name: "Response"
      field {
        name: "status"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_ENUM
        type_name: ".services.ServiceStatus"
        json_name: "status"
      }
    }
    nested_type {
      name: "Operation"
      field {
        name: "request"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta3.TelemetryPing.Request"
        json_name: "request"
      }
      field {
        name: "response"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".services.telemetry.v1beta3.TelemetryPing.Response"
        json_name: "response"
      }
    }
  }
  message_type {
    name: "CommercialEvent"
    nested_type {
      name: "Impression"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "section"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.section.Impression"
        oneof_index: 0
        json_name: "section"
      }
      field {
        name: "product"
        number: 11
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.product.Impression"
        oneof_index: 0
        json_name: "product"
      }
      field {
        name: "shop"
        number: 12
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.shop.Impression"
        oneof_index: 0
        json_name: "shop"
      }
      oneof_decl {
        name: "event"
      }
    }
    nested_type {
      name: "View"
      field {
        name: "context"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "section"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.section.View"
        oneof_index: 0
        json_name: "section"
      }
      field {
        name: "product"
        number: 11
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.product.View"
        oneof_index: 0
        json_name: "product"
      }
      field {
        name: "shop"
        number: 12
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.shop.View"
        oneof_index: 0
        json_name: "shop"
      }
      oneof_decl {
        name: "event"
      }
    }
    nested_type {
      name: "Action"
      field {
        name: "name"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "name"
      }
      field {
        name: "context"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "section"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.section.Action"
        oneof_index: 0
        json_name: "section"
      }
      field {
        name: "product"
        number: 11
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.product.Action"
        oneof_index: 0
        json_name: "product"
      }
      field {
        name: "shop"
        number: 12
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.shop.Action"
        oneof_index: 0
        json_name: "shop"
      }
      field {
        name: "order"
        number: 13
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.order.Action"
        oneof_index: 0
        json_name: "order"
      }
      oneof_decl {
        name: "event"
      }
    }
  }
  message_type {
    name: "IdentityEvent"
    nested_type {
      name: "Action"
      field {
        name: "name"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "name"
      }
      field {
        name: "context"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.Context"
        json_name: "context"
      }
      field {
        name: "action"
        number: 10
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".analytics.identity.Action"
        oneof_index: 0
        json_name: "action"
      }
      oneof_decl {
        name: "event"
      }
    }
  }
  enum_type {
    name: "OperationStatus"
    value {
      name: "OK"
      number: 0
    }
    value {
      name: "ERROR"
      number: 1
    }
  }
  enum_type {
    name: "TelemetryError"
    value {
      name: "UNKNOWN"
      number: 0
    }
    value {
      name: "INVALID_COLLECTION"
      number: 1
    }
    value {
      name: "INVALID_PARTNER"
      number: 2
    }
    value {
      name: "INVALID_LOCATION"
      number: 3
    }
    value {
      name: "INVALID_DEVICE"
      number: 4
    }
    value {
      name: "INVALID_USER"
      number: 5
    }
    value {
      name: "INVALID_CLIENT"
      number: 6
    }
    value {
      name: "PARTNER_NOT_FOUND"
      number: 7
    }
    value {
      name: "LOCATION_NOT_FOUND"
      number: 8
    }
    value {
      name: "INVALID_PAYLOAD"
      number: 99
    }
  }
  service {
    name: "EventTelemetry"
    method {
      name: "Ping"
      input_type: ".services.telemetry.v1beta3.TelemetryPing.Request"
      output_type: ".services.telemetry.v1beta3.TelemetryPing.Response"
      options {
        72295728 {
          2: "/telemetry/v1beta3/ping"
        }
      }
    }
    method {
      name: "Event"
      input_type: ".services.telemetry.v1beta3.Event.Request"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta3/{context.collection.name}:event"
          7: "*"
        }
      }
    }
    method {
      name: "Batch"
      input_type: ".services.telemetry.v1beta3.Event.BatchRequest"
      output_type: ".services.telemetry.v1beta3.TelemetryResponse"
      options {
        72295728 {
          4: "/telemetry/v1beta3/events:batch"
          7: "*"
        }
      }
    }
    method {
      name: "Error"
      input_type: ".services.telemetry.v1beta3.Exception"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta3/{context.collection.name}:error"
          7: "*"
        }
      }
    }
  }
  service {
    name: "CommercialTelemetry"
    method {
      name: "Impression"
      input_type: ".services.telemetry.v1beta3.CommercialEvent.Impression"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta3/commerce/{context.scope.commercial=*}:impress"
          7: "*"
        }
      }
    }
    method {
      name: "View"
      input_type: ".services.telemetry.v1beta3.CommercialEvent.View"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta3/commerce/{context.scope.commercial=*}:view"
          7: "*"
        }
      }
    }
    method {
      name: "Action"
      input_type: ".services.telemetry.v1beta3.CommercialEvent.Action"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta3/commerce/{name}/{context.scope.commercial=*}:action"
          7: "*"
        }
      }
    }
  }
  service {
    name: "IdentityTelemetry"
    method {
      name: "Action"
      input_type: ".services.telemetry.v1beta3.IdentityEvent.Action"
      output_type: ".google.protobuf.Empty"
      options {
        72295728 {
          4: "/telemetry/v1beta3/identity/{name}/{context.user_key.uid}:action"
          7: "*"
        }
      }
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta3"
    optimize_for: SPEED
    java_multiple_files: true
    csharp_namespace: "Telemetry.v1beta3"
  }
  source_code_info {
    location {
      span: [1, 0, 264, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 70]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 69]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [8]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 46]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 23]
    }
    location {
      path: [8, 999, 3, 7]
      span: [8, 26, 45]
    }
    location {
      path: [3, 0]
      span: [10, 7, 32]
    }
    location {
      path: [3, 1]
      span: [11, 7, 37]
    }
    location {
      path: [3, 2]
      span: [13, 7, 47]
    }
    location {
      path: [3, 3]
      span: [14, 7, 48]
    }
    location {
      path: [3, 4]
      span: [15, 7, 50]
    }
    location {
      path: [3, 5]
      span: [16, 7, 50]
    }
    location {
      path: [3, 6]
      span: [18, 7, 47]
    }
    location {
      path: [3, 7]
      span: [20, 7, 52]
    }
    location {
      path: [3, 8]
      span: [22, 7, 36]
    }
    location {
      path: [3, 9]
      span: [23, 7, 37]
    }
    location {
      path: [5, 0]
      span: [27, 0, 33, 1]
      leading_comments: " Specifies status codes that a response may provide.\n"
    }
    location {
      path: [5, 0, 1]
      span: [27, 5, 20]
    }
    location {
      path: [5, 0, 2, 0]
      span: [29, 2, 9]
      leading_comments: " Everything went well.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [29, 2, 4]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [29, 7, 8]
    }
    location {
      path: [5, 0, 2, 1]
      span: [32, 2, 12]
      leading_comments: " An error of some kind occurred.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [32, 2, 7]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [32, 10, 11]
    }
    location {
      path: [5, 1]
      span: [37, 0, 67, 1]
      leading_comments: " Specifies known errors that may be emitted in exceptional processing cases.\n"
    }
    location {
      path: [5, 1, 1]
      span: [37, 5, 19]
    }
    location {
      path: [5, 1, 2, 0]
      span: [39, 2, 14]
      leading_comments: " An unknown internal error occurred.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [39, 2, 9]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [39, 12, 13]
    }
    location {
      path: [5, 1, 2, 1]
      span: [42, 2, 25]
      leading_comments: " The collection value was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [42, 2, 20]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [42, 23, 24]
    }
    location {
      path: [5, 1, 2, 2]
      span: [45, 2, 22]
      leading_comments: " The partner code was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [45, 2, 17]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [45, 20, 21]
    }
    location {
      path: [5, 1, 2, 3]
      span: [48, 2, 23]
      leading_comments: " The location code was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [48, 2, 18]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [48, 21, 22]
    }
    location {
      path: [5, 1, 2, 4]
      span: [51, 2, 21]
      leading_comments: " The device key was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [51, 2, 16]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [51, 19, 20]
    }
    location {
      path: [5, 1, 2, 5]
      span: [54, 2, 19]
      leading_comments: " The user key or ID was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 5, 1]
      span: [54, 2, 14]
    }
    location {
      path: [5, 1, 2, 5, 2]
      span: [54, 17, 18]
    }
    location {
      path: [5, 1, 2, 6]
      span: [57, 2, 21]
      leading_comments: " The client key or ID was missing or found to be invalid.\n"
    }
    location {
      path: [5, 1, 2, 6, 1]
      span: [57, 2, 16]
    }
    location {
      path: [5, 1, 2, 6, 2]
      span: [57, 19, 20]
    }
    location {
      path: [5, 1, 2, 7]
      span: [60, 2, 24]
      leading_comments: " The specified partner could not be found.\n"
    }
    location {
      path: [5, 1, 2, 7, 1]
      span: [60, 2, 19]
    }
    location {
      path: [5, 1, 2, 7, 2]
      span: [60, 22, 23]
    }
    location {
      path: [5, 1, 2, 8]
      span: [63, 2, 25]
      leading_comments: " The specified partner could not be found.\n"
    }
    location {
      path: [5, 1, 2, 8, 1]
      span: [63, 2, 20]
    }
    location {
      path: [5, 1, 2, 8, 2]
      span: [63, 23, 24]
    }
    location {
      path: [5, 1, 2, 9]
      span: [66, 2, 23]
      leading_comments: " The request payload was invalid in some manner.\n"
    }
    location {
      path: [5, 1, 2, 9, 1]
      span: [66, 2, 17]
    }
    location {
      path: [5, 1, 2, 9, 2]
      span: [66, 20, 22]
    }
    location {
      path: [4, 0]
      span: [71, 0, 80, 1]
      leading_comments: " Specifies a response to a request to submit telemetry data.\n"
    }
    location {
      path: [4, 0, 1]
      span: [71, 8, 25]
    }
    location {
      path: [4, 0, 2, 0]
      span: [73, 2, 29]
      leading_comments: " Status of the operation.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [73, 2, 71, 27]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [73, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [73, 18, 24]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [73, 27, 28]
    }
    location {
      path: [4, 0, 2, 1]
      span: [76, 2, 19]
      leading_comments: " Count of events submitted.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [76, 2, 73, 29]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [76, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [76, 9, 14]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [76, 17, 18]
    }
    location {
      path: [4, 0, 2, 2]
      span: [79, 2, 28]
      leading_comments: " Service maintenance status, if applicable.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [79, 2, 76, 19]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [79, 2, 15]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [79, 16, 23]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [79, 26, 27]
    }
    location {
      path: [4, 1]
      span: [84, 0, 104, 1]
      leading_comments: " Specifies an RPC operation to retrieve status information for the telemetry service.\n"
    }
    location {
      path: [4, 1, 1]
      span: [84, 8, 21]
    }
    location {
      path: [4, 1, 3, 0]
      span: [86, 2, 88, 3]
      leading_comments: " Specifies a request to ping the service.\n"
      trailing_comments: " No properties.\n"
    }
    location {
      path: [4, 1, 3, 0, 1]
      span: [86, 10, 17]
    }
    location {
      path: [4, 1, 3, 1]
      span: [91, 2, 94, 3]
      leading_comments: " Specifies a response to a service ping.\n"
    }
    location {
      path: [4, 1, 3, 1, 1]
      span: [91, 10, 18]
    }
    location {
      path: [4, 1, 3, 1, 2, 0]
      span: [93, 4, 38]
      leading_comments: " Current service status.\n"
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 4]
      span: [93, 4, 91, 20]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 6]
      span: [93, 4, 26]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 1]
      span: [93, 27, 33]
    }
    location {
      path: [4, 1, 3, 1, 2, 0, 3]
      span: [93, 36, 37]
    }
    location {
      path: [4, 1, 3, 2]
      span: [97, 2, 103, 3]
      leading_comments: " Specifies an entire ping operation.\n"
    }
    location {
      path: [4, 1, 3, 2, 1]
      span: [97, 10, 19]
    }
    location {
      path: [4, 1, 3, 2, 2, 0]
      span: [99, 4, 24]
      leading_comments: " Request for service status.\n"
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 4]
      span: [99, 4, 97, 21]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 6]
      span: [99, 4, 11]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 1]
      span: [99, 12, 19]
    }
    location {
      path: [4, 1, 3, 2, 2, 0, 3]
      span: [99, 22, 23]
    }
    location {
      path: [4, 1, 3, 2, 2, 1]
      span: [102, 4, 26]
      leading_comments: " Response to a request for service status.\n"
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 4]
      span: [102, 4, 99, 24]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 6]
      span: [102, 4, 12]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 1]
      span: [102, 13, 21]
    }
    location {
      path: [4, 1, 3, 2, 2, 1, 3]
      span: [102, 24, 25]
    }
    location {
      path: [4, 2]
      span: [108, 0, 168, 1]
      leading_comments: " Specifies an event related to commercial services. This includes product events, section events, and order events.\n"
    }
    location {
      path: [4, 2, 1]
      span: [108, 8, 23]
    }
    location {
      path: [4, 2, 3, 0]
      span: [110, 2, 125, 3]
      leading_comments: " Specifies an impression-type event.\n"
    }
    location {
      path: [4, 2, 3, 0, 1]
      span: [110, 10, 20]
    }
    location {
      path: [4, 2, 3, 0, 2, 0]
      span: [112, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 4]
      span: [112, 4, 110, 22]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 6]
      span: [112, 4, 21]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 1]
      span: [112, 22, 29]
    }
    location {
      path: [4, 2, 3, 0, 2, 0, 3]
      span: [112, 32, 33]
    }
    location {
      path: [4, 2, 3, 0, 8, 0]
      span: [115, 4, 124, 5]
      leading_comments: " Event being reported in this transaction.\n"
    }
    location {
      path: [4, 2, 3, 0, 8, 0, 1]
      span: [115, 10, 15]
    }
    location {
      path: [4, 2, 3, 0, 2, 1]
      span: [117, 6, 48]
      leading_comments: " Impression event on a menu section.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 6]
      span: [117, 6, 34]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 1]
      span: [117, 35, 42]
    }
    location {
      path: [4, 2, 3, 0, 2, 1, 3]
      span: [117, 45, 47]
    }
    location {
      path: [4, 2, 3, 0, 2, 2]
      span: [120, 6, 48]
      leading_comments: " Impression event on a menu product.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 6]
      span: [120, 6, 34]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 1]
      span: [120, 35, 42]
    }
    location {
      path: [4, 2, 3, 0, 2, 2, 3]
      span: [120, 45, 47]
    }
    location {
      path: [4, 2, 3, 0, 2, 3]
      span: [123, 6, 42]
      leading_comments: " Impression event for a commercial shop.\n"
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 6]
      span: [123, 6, 31]
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 1]
      span: [123, 32, 36]
    }
    location {
      path: [4, 2, 3, 0, 2, 3, 3]
      span: [123, 39, 41]
    }
    location {
      path: [4, 2, 3, 1]
      span: [128, 2, 143, 3]
      leading_comments: " Specifies a view-type event.\n"
    }
    location {
      path: [4, 2, 3, 1, 1]
      span: [128, 10, 14]
    }
    location {
      path: [4, 2, 3, 1, 2, 0]
      span: [130, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 4]
      span: [130, 4, 128, 16]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 6]
      span: [130, 4, 21]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 1]
      span: [130, 22, 29]
    }
    location {
      path: [4, 2, 3, 1, 2, 0, 3]
      span: [130, 32, 33]
    }
    location {
      path: [4, 2, 3, 1, 8, 0]
      span: [133, 4, 142, 5]
      leading_comments: " Event being reported in this transaction.\n"
    }
    location {
      path: [4, 2, 3, 1, 8, 0, 1]
      span: [133, 10, 15]
    }
    location {
      path: [4, 2, 3, 1, 2, 1]
      span: [135, 6, 42]
      leading_comments: " View event on a menu section.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 6]
      span: [135, 6, 28]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 1]
      span: [135, 29, 36]
    }
    location {
      path: [4, 2, 3, 1, 2, 1, 3]
      span: [135, 39, 41]
    }
    location {
      path: [4, 2, 3, 1, 2, 2]
      span: [138, 6, 42]
      leading_comments: " View event on a menu product.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 6]
      span: [138, 6, 28]
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 1]
      span: [138, 29, 36]
    }
    location {
      path: [4, 2, 3, 1, 2, 2, 3]
      span: [138, 39, 41]
    }
    location {
      path: [4, 2, 3, 1, 2, 3]
      span: [141, 6, 36]
      leading_comments: " View event for a commercial shop.\n"
    }
    location {
      path: [4, 2, 3, 1, 2, 3, 6]
      span: [141, 6, 25]
    }
    location {
      path: [4, 2, 3, 1, 2, 3, 1]
      span: [141, 26, 30]
    }
    location {
      path: [4, 2, 3, 1, 2, 3, 3]
      span: [141, 33, 35]
    }
    location {
      path: [4, 2, 3, 2]
      span: [146, 2, 167, 3]
      leading_comments: " Specifies an action-type event.\n"
    }
    location {
      path: [4, 2, 3, 2, 1]
      span: [146, 10, 16]
    }
    location {
      path: [4, 2, 3, 2, 2, 0]
      span: [148, 4, 20]
      leading_comments: " Name for the action being transmitted. This is the string enum name for whatever event type is in use.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 4]
      span: [148, 4, 146, 18]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 5]
      span: [148, 4, 10]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 1]
      span: [148, 11, 15]
    }
    location {
      path: [4, 2, 3, 2, 2, 0, 3]
      span: [148, 18, 19]
    }
    location {
      path: [4, 2, 3, 2, 2, 1]
      span: [151, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 4]
      span: [151, 4, 148, 20]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 6]
      span: [151, 4, 21]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 1]
      span: [151, 22, 29]
    }
    location {
      path: [4, 2, 3, 2, 2, 1, 3]
      span: [151, 32, 33]
    }
    location {
      path: [4, 2, 3, 2, 8, 0]
      span: [154, 4, 166, 5]
      leading_comments: " Event being reported in this transaction.\n"
    }
    location {
      path: [4, 2, 3, 2, 8, 0, 1]
      span: [154, 10, 15]
    }
    location {
      path: [4, 2, 3, 2, 2, 2]
      span: [156, 6, 44]
      leading_comments: " Action event on a menu section.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 2, 6]
      span: [156, 6, 30]
    }
    location {
      path: [4, 2, 3, 2, 2, 2, 1]
      span: [156, 31, 38]
    }
    location {
      path: [4, 2, 3, 2, 2, 2, 3]
      span: [156, 41, 43]
    }
    location {
      path: [4, 2, 3, 2, 2, 3]
      span: [159, 6, 44]
      leading_comments: " Action event on a menu product.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 3, 6]
      span: [159, 6, 30]
    }
    location {
      path: [4, 2, 3, 2, 2, 3, 1]
      span: [159, 31, 38]
    }
    location {
      path: [4, 2, 3, 2, 2, 3, 3]
      span: [159, 41, 43]
    }
    location {
      path: [4, 2, 3, 2, 2, 4]
      span: [162, 6, 38]
      leading_comments: " Action event for a commercial shop.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 4, 6]
      span: [162, 6, 27]
    }
    location {
      path: [4, 2, 3, 2, 2, 4, 1]
      span: [162, 28, 32]
    }
    location {
      path: [4, 2, 3, 2, 2, 4, 3]
      span: [162, 35, 37]
    }
    location {
      path: [4, 2, 3, 2, 2, 5]
      span: [165, 6, 40]
      leading_comments: " Action event on a user order.\n"
    }
    location {
      path: [4, 2, 3, 2, 2, 5, 6]
      span: [165, 6, 28]
    }
    location {
      path: [4, 2, 3, 2, 2, 5, 1]
      span: [165, 29, 34]
    }
    location {
      path: [4, 2, 3, 2, 2, 5, 3]
      span: [165, 37, 39]
    }
    location {
      path: [4, 3]
      span: [173, 0, 187, 1]
      leading_comments: " Specifies an event related to a user's identity, account, preferences, or otherwise having some concern with the\n addressability, authentication, and relevace of a user's experience with Bloombox.\n"
    }
    location {
      path: [4, 3, 1]
      span: [173, 8, 21]
    }
    location {
      path: [4, 3, 3, 0]
      span: [175, 2, 186, 3]
      leading_comments: " Action taken by or on a user.\n"
      trailing_comments: " Name of the action we are reporting.\n"
    }
    location {
      path: [4, 3, 3, 0, 1]
      span: [175, 10, 16]
    }
    location {
      path: [4, 3, 3, 0, 2, 0]
      span: [178, 4, 20]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 4]
      span: [178, 4, 175, 18]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 5]
      span: [178, 4, 10]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 1]
      span: [178, 11, 15]
    }
    location {
      path: [4, 3, 3, 0, 2, 0, 3]
      span: [178, 18, 19]
    }
    location {
      path: [4, 3, 3, 0, 2, 1]
      span: [180, 4, 34]
      leading_comments: " Event context to specify for this event.\n"
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 4]
      span: [180, 4, 178, 20]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 6]
      span: [180, 4, 21]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 1]
      span: [180, 22, 29]
    }
    location {
      path: [4, 3, 3, 0, 2, 1, 3]
      span: [180, 32, 33]
    }
    location {
      path: [4, 3, 3, 0, 8, 0]
      span: [182, 4, 185, 5]
    }
    location {
      path: [4, 3, 3, 0, 8, 0, 1]
      span: [182, 10, 15]
    }
    location {
      path: [4, 3, 3, 0, 2, 2]
      span: [184, 6, 44]
      leading_comments: " Action taken by or on a user.\n"
    }
    location {
      path: [4, 3, 3, 0, 2, 2, 6]
      span: [184, 6, 31]
    }
    location {
      path: [4, 3, 3, 0, 2, 2, 1]
      span: [184, 32, 38]
    }
    location {
      path: [4, 3, 3, 0, 2, 2, 3]
      span: [184, 41, 43]
    }
    location {
      path: [6, 0]
      span: [191, 0, 222, 1]
      leading_comments: " Provides support for transmission of operational and experiential telemetry data from first and second-party devices.\n"
    }
    location {
      path: [6, 0, 1]
      span: [191, 8, 22]
    }
    location {
      path: [6, 0, 2, 0]
      span: [193, 2, 197, 3]
      leading_comments: " Ping the server.\n"
    }
    location {
      path: [6, 0, 2, 0, 1]
      span: [193, 6, 10]
    }
    location {
      path: [6, 0, 2, 0, 2]
      span: [193, 11, 32]
    }
    location {
      path: [6, 0, 2, 0, 3]
      span: [193, 43, 65]
    }
    location {
      path: [6, 0, 2, 0, 4]
      span: [194, 4, 196, 6]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0]
      span: [194, 4, 196, 6]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2]
      span: [194, 11, 28]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0]
      span: [194, 11, 28]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [194, 12, 27]
    }
    location {
      path: [6, 0, 2, 0, 4, 999, 0, 8]
      span: [194, 31, 196, 5]
    }
    location {
      path: [6, 0, 2, 1]
      span: [200, 2, 205, 3]
      leading_comments: " Submit a generic event.\n"
    }
    location {
      path: [6, 0, 2, 1, 1]
      span: [200, 6, 11]
    }
    location {
      path: [6, 0, 2, 1, 2]
      span: [200, 12, 25]
    }
    location {
      path: [6, 0, 2, 1, 3]
      span: [200, 36, 57]
    }
    location {
      path: [6, 0, 2, 1, 4]
      span: [201, 4, 204, 6]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0]
      span: [201, 4, 204, 6]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2]
      span: [201, 11, 28]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 0]
      span: [201, 11, 28]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 2, 0, 1]
      span: [201, 12, 27]
    }
    location {
      path: [6, 0, 2, 1, 4, 999, 0, 8]
      span: [201, 31, 204, 5]
    }
    location {
      path: [6, 0, 2, 2]
      span: [208, 2, 213, 3]
      leading_comments: " Submit one or more generic events via the batch interface.\n"
    }
    location {
      path: [6, 0, 2, 2, 1]
      span: [208, 6, 11]
    }
    location {
      path: [6, 0, 2, 2, 2]
      span: [208, 12, 30]
    }
    location {
      path: [6, 0, 2, 2, 3]
      span: [208, 41, 58]
    }
    location {
      path: [6, 0, 2, 2, 4]
      span: [209, 4, 212, 6]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0]
      span: [209, 4, 212, 6]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2]
      span: [209, 11, 28]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2, 0]
      span: [209, 11, 28]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 2, 0, 1]
      span: [209, 12, 27]
    }
    location {
      path: [6, 0, 2, 2, 4, 999, 0, 8]
      span: [209, 31, 212, 5]
    }
    location {
      path: [6, 0, 2, 3]
      span: [216, 2, 221, 3]
      leading_comments: " Submit one or more exception events.\n"
    }
    location {
      path: [6, 0, 2, 3, 1]
      span: [216, 6, 11]
    }
    location {
      path: [6, 0, 2, 3, 2]
      span: [216, 12, 21]
    }
    location {
      path: [6, 0, 2, 3, 3]
      span: [216, 32, 53]
    }
    location {
      path: [6, 0, 2, 3, 4]
      span: [217, 4, 220, 6]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0]
      span: [217, 4, 220, 6]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2]
      span: [217, 11, 28]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 0]
      span: [217, 11, 28]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 2, 0, 1]
      span: [217, 12, 27]
    }
    location {
      path: [6, 0, 2, 3, 4, 999, 0, 8]
      span: [217, 31, 220, 5]
    }
    location {
      path: [6, 1]
      span: [227, 0, 251, 1]
      leading_comments: " Provides support for tailored analytics payloads w.r.t. interactions between end-users and commercial models, like\n menu sections, products, and user orders.\n"
    }
    location {
      path: [6, 1, 1]
      span: [227, 8, 27]
    }
    location {
      path: [6, 1, 2, 0]
      span: [229, 2, 234, 3]
      leading_comments: " Register that a menu section was presented to a user, regardless of whether they acted on it or not.\n"
    }
    location {
      path: [6, 1, 2, 0, 1]
      span: [229, 6, 16]
    }
    location {
      path: [6, 1, 2, 0, 2]
      span: [229, 17, 43]
    }
    location {
      path: [6, 1, 2, 0, 3]
      span: [229, 54, 75]
    }
    location {
      path: [6, 1, 2, 0, 4]
      span: [230, 4, 233, 6]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0]
      span: [230, 4, 233, 6]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 2]
      span: [230, 11, 28]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 2, 0]
      span: [230, 11, 28]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [230, 12, 27]
    }
    location {
      path: [6, 1, 2, 0, 4, 999, 0, 8]
      span: [230, 31, 233, 5]
    }
    location {
      path: [6, 1, 2, 1]
      span: [237, 2, 242, 3]
      leading_comments: " Register that a menu section was viewed, browsed-to, or otherwise served to a user.\n"
    }
    location {
      path: [6, 1, 2, 1, 1]
      span: [237, 6, 10]
    }
    location {
      path: [6, 1, 2, 1, 2]
      span: [237, 11, 31]
    }
    location {
      path: [6, 1, 2, 1, 3]
      span: [237, 42, 63]
    }
    location {
      path: [6, 1, 2, 1, 4]
      span: [238, 4, 241, 7]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0]
      span: [238, 4, 241, 7]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 2]
      span: [238, 11, 28]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 2, 0]
      span: [238, 11, 28]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 2, 0, 1]
      span: [238, 12, 27]
    }
    location {
      path: [6, 1, 2, 1, 4, 999, 0, 8]
      span: [238, 31, 241, 6]
    }
    location {
      path: [6, 1, 2, 2]
      span: [245, 2, 250, 3]
      leading_comments: " Register that an end-user elected to take action within a section in some way.\n"
    }
    location {
      path: [6, 1, 2, 2, 1]
      span: [245, 6, 12]
    }
    location {
      path: [6, 1, 2, 2, 2]
      span: [245, 13, 35]
    }
    location {
      path: [6, 1, 2, 2, 3]
      span: [245, 46, 67]
    }
    location {
      path: [6, 1, 2, 2, 4]
      span: [246, 4, 249, 6]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0]
      span: [246, 4, 249, 6]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 2]
      span: [246, 11, 28]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 2, 0]
      span: [246, 11, 28]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 2, 0, 1]
      span: [246, 12, 27]
    }
    location {
      path: [6, 1, 2, 2, 4, 999, 0, 8]
      span: [246, 31, 249, 5]
    }
    location {
      path: [6, 2]
      span: [256, 0, 264, 1]
      leading_comments: " Provides support for recording telemetry information about user events and actions related to their own identity,\n account, profile, preferences, and so on.\n"
    }
    location {
      path: [6, 2, 1]
      span: [256, 8, 25]
    }
    location {
      path: [6, 2, 2, 0]
      span: [258, 2, 263, 3]
      leading_comments: " Register affirmative action taken by an end-user on their own account or identity.\n"
    }
    location {
      path: [6, 2, 2, 0, 1]
      span: [258, 6, 12]
    }
    location {
      path: [6, 2, 2, 0, 2]
      span: [258, 13, 33]
    }
    location {
      path: [6, 2, 2, 0, 3]
      span: [258, 44, 65]
    }
    location {
      path: [6, 2, 2, 0, 4]
      span: [259, 4, 262, 6]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0]
      span: [259, 4, 262, 6]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 2]
      span: [259, 11, 28]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 2, 0]
      span: [259, 11, 28]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 2, 0, 1]
      span: [259, 12, 27]
    }
    location {
      path: [6, 2, 2, 0, 4, 999, 0, 8]
      span: [259, 31, 262, 5]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "telemetry/v1beta3/TelemetryEvent_Beta3.proto"
  package: "services.telemetry.v1beta3"
  dependency: "bq_field.proto"
  dependency: "analytics/Context.proto"
  dependency: "analytics/generic/Event.proto"
  dependency: "analytics/generic/Exception.proto"
  dependency: "telemetry/v1beta3/TelemetryService_Beta3.proto"
  message_type {
    name: "TelemetryEvent"
    field {
      name: "uuid"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uuid"
    }
    field {
      name: "parent"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "parent"
    }
    field {
      name: "internal"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "internal"
    }
    field {
      name: "timing"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.EventPosition"
      json_name: "timing"
    }
    field {
      name: "context"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.Context"
      json_name: "context"
    }
    field {
      name: "actors"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.EventActors"
      json_name: "actors"
    }
    field {
      name: "generic"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.Event"
      oneof_index: 0
      json_name: "generic"
    }
    field {
      name: "error"
      number: 11
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".analytics.generic.Exception"
      oneof_index: 0
      json_name: "error"
    }
    field {
      name: "impression"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta3.CommercialEvent.Impression"
      oneof_index: 0
      json_name: "impression"
    }
    field {
      name: "view"
      number: 21
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta3.CommercialEvent.View"
      oneof_index: 0
      json_name: "view"
    }
    field {
      name: "action"
      number: 22
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta3.CommercialEvent.Action"
      oneof_index: 0
      json_name: "action"
    }
    field {
      name: "user_action"
      number: 30
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".services.telemetry.v1beta3.IdentityEvent.Action"
      oneof_index: 0
      json_name: "userAction"
    }
    oneof_decl {
      name: "event"
    }
  }
  options {
    java_package: "io.bloombox.schema.services.telemetry.v1beta3"
    java_outer_classname: "AnalyticsPipeline"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
    csharp_namespace: "Telemetry.v1beta3"
  }
  source_code_info {
    location {
      span: [1, 0, 61, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 34]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 70]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 70]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 69]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 50]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 50]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 49]
    }
    location {
      path: [8]
      span: [10, 0, 46]
    }
    location {
      path: [8, 999, 5]
      span: [10, 0, 46]
    }
    location {
      path: [8, 999, 5, 2]
      span: [10, 7, 23]
    }
    location {
      path: [8, 999, 5, 2, 0]
      span: [10, 7, 23]
    }
    location {
      path: [8, 999, 5, 2, 0, 1]
      span: [10, 7, 23]
    }
    location {
      path: [8, 999, 5, 7]
      span: [10, 26, 45]
    }
    location {
      path: [3, 0]
      span: [12, 7, 23]
    }
    location {
      path: [3, 1]
      span: [14, 7, 32]
    }
    location {
      path: [3, 2]
      span: [15, 7, 38]
    }
    location {
      path: [3, 3]
      span: [16, 7, 42]
    }
    location {
      path: [3, 4]
      span: [17, 7, 55]
    }
    location {
      path: [4, 0]
      span: [21, 0, 61, 1]
      leading_comments: " Wrapper object that provides support for transporting telemetry data of any kind.\n"
    }
    location {
      path: [4, 0, 1]
      span: [21, 8, 22]
    }
    location {
      path: [4, 0, 2, 0]
      span: [23, 2, 18]
      leading_comments: " UUID, as assigned by the server upon receiving this event.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [23, 2, 21, 24]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [23, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [23, 9, 13]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [23, 16, 17]
    }
    location {
      path: [4, 0, 2, 1]
      span: [26, 2, 20]
      leading_comments: " Parent event that yielded this event, if applicable.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [26, 2, 23, 18]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [26, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [26, 9, 15]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [26, 18, 19]
    }
    location {
      path: [4, 0, 2, 2]
      span: [30, 2, 20]
      leading_comments: " Flag indicating this event is internal, meaning, it is not to be re-processed or mirrored to internal event\n streams, where it could cause an infinite loop.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [30, 2, 26, 20]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [30, 2, 6]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [30, 7, 15]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [30, 18, 19]
    }
    location {
      path: [4, 0, 2, 3]
      span: [33, 2, 37]
      leading_comments: " 'Position', or timing, of the event, in various circumstances.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [33, 2, 30, 20]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [33, 2, 25]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [33, 26, 32]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [33, 35, 36]
    }
    location {
      path: [4, 0, 2, 4]
      span: [36, 2, 32]
      leading_comments: " Event context.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [36, 2, 33, 37]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [36, 2, 19]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [36, 20, 27]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [36, 30, 31]
    }
    location {
      path: [4, 0, 2, 5]
      span: [39, 2, 35]
      leading_comments: " Full event actor records.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [39, 2, 36, 32]
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [39, 2, 23]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [39, 24, 30]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [39, 33, 34]
    }
    location {
      path: [4, 0, 8, 0]
      span: [42, 2, 60, 3]
      leading_comments: " Event data payload.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [42, 8, 13]
    }
    location {
      path: [4, 0, 2, 6]
      span: [44, 4, 41]
      leading_comments: " Generic: Event.\n"
    }
    location {
      path: [4, 0, 2, 6, 6]
      span: [44, 4, 27]
    }
    location {
      path: [4, 0, 2, 6, 1]
      span: [44, 28, 35]
    }
    location {
      path: [4, 0, 2, 6, 3]
      span: [44, 38, 40]
    }
    location {
      path: [4, 0, 2, 7]
      span: [47, 4, 43]
      leading_comments: " Generic: Exception.\n"
    }
    location {
      path: [4, 0, 2, 7, 6]
      span: [47, 4, 31]
    }
    location {
      path: [4, 0, 2, 7, 1]
      span: [47, 32, 37]
    }
    location {
      path: [4, 0, 2, 7, 3]
      span: [47, 40, 42]
    }
    location {
      path: [4, 0, 2, 8]
      span: [50, 4, 47]
      leading_comments: " Sections: Impression.\n"
    }
    location {
      path: [4, 0, 2, 8, 6]
      span: [50, 4, 30]
    }
    location {
      path: [4, 0, 2, 8, 1]
      span: [50, 31, 41]
    }
    location {
      path: [4, 0, 2, 8, 3]
      span: [50, 44, 46]
    }
    location {
      path: [4, 0, 2, 9]
      span: [53, 4, 35]
      leading_comments: " Sections: View.\n"
    }
    location {
      path: [4, 0, 2, 9, 6]
      span: [53, 4, 24]
    }
    location {
      path: [4, 0, 2, 9, 1]
      span: [53, 25, 29]
    }
    location {
      path: [4, 0, 2, 9, 3]
      span: [53, 32, 34]
    }
    location {
      path: [4, 0, 2, 10]
      span: [56, 4, 39]
      leading_comments: " Sections: Action.\n"
    }
    location {
      path: [4, 0, 2, 10, 6]
      span: [56, 4, 26]
    }
    location {
      path: [4, 0, 2, 10, 1]
      span: [56, 27, 33]
    }
    location {
      path: [4, 0, 2, 10, 3]
      span: [56, 36, 38]
    }
    location {
      path: [4, 0, 2, 11]
      span: [59, 4, 42]
      leading_comments: " Users: Action.\n"
    }
    location {
      path: [4, 0, 2, 11, 6]
      span: [59, 4, 24]
    }
    location {
      path: [4, 0, 2, 11, 1]
      span: [59, 25, 36]
    }
    location {
      path: [4, 0, 2, 11, 3]
      span: [59, 39, 41]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "accounting/Discounts.proto"
  package: "accounting.discounts"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "DiscountSpec"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".accounting.discounts.DiscountType"
      json_name: "type"
    }
    field {
      name: "basis"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".accounting.discounts.DiscountBasis"
      json_name: "basis"
    }
    field {
      name: "percentage"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      oneof_index: 0
      json_name: "percentage"
    }
    field {
      name: "static_value"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      oneof_index: 0
      json_name: "staticValue"
    }
    oneof_decl {
      name: "rate"
    }
  }
  message_type {
    name: "Discount"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "spec"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".accounting.discounts.DiscountSpec"
      json_name: "spec"
    }
    field {
      name: "name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "label"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "label"
    }
    field {
      name: "description"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "description"
    }
    field {
      name: "modified_at"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "modifiedAt"
    }
    field {
      name: "created_at"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "createdAt"
    }
  }
  enum_type {
    name: "DiscountType"
    value {
      name: "CUSTOM"
      number: 0
    }
    value {
      name: "STATUTORY"
      number: 1
    }
    value {
      name: "COMMERCIAL"
      number: 2
    }
  }
  enum_type {
    name: "DiscountBasis"
    value {
      name: "ITEM"
      number: 0
    }
    value {
      name: "ORDER_SUBTOTAL"
      number: 1
    }
    value {
      name: "ORDER_TOTAL"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.commerce"
    java_outer_classname: "CommercialDiscounts"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 82, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 28]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 52]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 51]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 52]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 52]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 51]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [5, 0]
      span: [15, 0, 24, 1]
      leading_comments: " Enumerates types of discounts that may be applied.\n"
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 17]
    }
    location {
      path: [5, 0, 2, 0]
      span: [17, 2, 13]
      leading_comments: " Some custom discount applied at the time of purchase.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [17, 2, 8]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [17, 11, 12]
    }
    location {
      path: [5, 0, 2, 1]
      span: [20, 2, 16]
      leading_comments: " Statutorily-mandated discount, for instance, for medical-only patients.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [20, 2, 11]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [20, 14, 15]
    }
    location {
      path: [5, 0, 2, 2]
      span: [23, 2, 17]
      leading_comments: " Commercial discount, for instance, for vendors, brand ambassadors, and staff.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [23, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [23, 15, 16]
    }
    location {
      path: [5, 1]
      span: [28, 0, 37, 1]
      leading_comments: " Enumerates operational calculation modes for discounts.\n"
    }
    location {
      path: [5, 1, 1]
      span: [28, 5, 18]
    }
    location {
      path: [5, 1, 2, 0]
      span: [30, 2, 11]
      leading_comments: " The discount is calculated per-item.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [30, 2, 6]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [30, 9, 10]
    }
    location {
      path: [5, 1, 2, 1]
      span: [33, 2, 21]
      leading_comments: " The discount is calculated from the order subtotal, before tax.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [33, 2, 16]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [33, 19, 20]
    }
    location {
      path: [5, 1, 2, 2]
      span: [36, 2, 18]
      leading_comments: " The discount is calculated from the order total, after tax.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [36, 2, 13]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [36, 16, 17]
    }
    location {
      path: [4, 0]
      span: [41, 0, 56, 1]
      leading_comments: " Specifies the concept of a discount, and how it is set to behave.\n"
    }
    location {
      path: [4, 0, 1]
      span: [41, 8, 20]
    }
    location {
      path: [4, 0, 2, 0]
      span: [43, 2, 24]
      leading_comments: " Type of discount to apply.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [43, 2, 41, 22]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [43, 2, 14]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [43, 15, 19]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [43, 22, 23]
    }
    location {
      path: [4, 0, 2, 1]
      span: [46, 2, 26]
      leading_comments: " Basis to form when calculating the discount.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [46, 2, 43, 24]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [46, 2, 15]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [46, 16, 21]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [46, 24, 25]
    }
    location {
      path: [4, 0, 8, 0]
      span: [49, 2, 55, 3]
      leading_comments: " Rate specified for the discount.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [49, 8, 12]
    }
    location {
      path: [4, 0, 2, 2]
      span: [51, 4, 26]
      leading_comments: " Percentage rate for the discount.\n"
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [51, 4, 10]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [51, 11, 21]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [51, 24, 25]
    }
    location {
      path: [4, 0, 2, 3]
      span: [54, 4, 28]
      leading_comments: " Flat rate for the discount.\n"
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [54, 4, 10]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [54, 11, 23]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [54, 26, 27]
    }
    location {
      path: [4, 1]
      span: [60, 0, 82, 1]
      leading_comments: " Specifies a discount to be applied during a purchase or order.\n"
    }
    location {
      path: [4, 1, 1]
      span: [60, 8, 16]
    }
    location {
      path: [4, 1, 2, 0]
      span: [62, 2, 16]
      leading_comments: " ID code for this discount entry.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [62, 2, 60, 18]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [62, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [62, 9, 11]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [62, 14, 15]
    }
    location {
      path: [4, 1, 2, 1]
      span: [65, 2, 24]
      leading_comments: " Specification for how this discount behaves.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [65, 2, 62, 16]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [65, 2, 14]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [65, 15, 19]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [65, 22, 23]
    }
    location {
      path: [4, 1, 2, 2]
      span: [68, 2, 18]
      leading_comments: " Back-office name for this tax.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [68, 2, 65, 24]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [68, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [68, 9, 13]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [68, 16, 17]
    }
    location {
      path: [4, 1, 2, 3]
      span: [71, 2, 19]
      leading_comments: " User-visible name for this tax.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [71, 2, 68, 18]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [71, 2, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [71, 9, 14]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [71, 17, 18]
    }
    location {
      path: [4, 1, 2, 4]
      span: [75, 2, 25]
      leading_comments: " Narrative description for this discount, to be displayed to back-office and end-users in some\n special circumstances.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [75, 2, 71, 19]
    }
    location {
      path: [4, 1, 2, 4, 5]
      span: [75, 2, 8]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [75, 9, 20]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [75, 23, 24]
    }
    location {
      path: [4, 1, 2, 5]
      span: [78, 2, 35]
      leading_comments: " Last time this discount was modified.\n"
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [78, 2, 75, 25]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [78, 2, 18]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [78, 19, 30]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [78, 33, 34]
    }
    location {
      path: [4, 1, 2, 6]
      span: [81, 2, 34]
      leading_comments: " When this discount was created.\n"
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [81, 2, 78, 35]
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [81, 2, 18]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [81, 19, 29]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [81, 32, 33]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "accounting/Taxes.proto"
  package: "accounting.taxes"
  message_type {
    name: "TaxSpec"
    field {
      name: "basis"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".accounting.taxes.TaxBasis"
      json_name: "basis"
    }
    field {
      name: "jurisdiction"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".accounting.taxes.TaxJurisdiction"
      json_name: "jurisdiction"
    }
    field {
      name: "transaction_label"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "transactionLabel"
    }
    field {
      name: "percentage"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      oneof_index: 0
      json_name: "percentage"
    }
    field {
      name: "static_value"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      oneof_index: 0
      json_name: "staticValue"
    }
    oneof_decl {
      name: "rate"
    }
  }
  message_type {
    name: "Tax"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "spec"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".accounting.taxes.TaxSpec"
      json_name: "spec"
    }
    field {
      name: "name"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "name"
    }
    field {
      name: "label"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "label"
    }
    field {
      name: "description"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "description"
    }
  }
  enum_type {
    name: "TaxJurisdiction"
    value {
      name: "LOCAL"
      number: 0
    }
    value {
      name: "PROVINCE"
      number: 1
    }
    value {
      name: "FEDERAL"
      number: 2
    }
  }
  enum_type {
    name: "TaxBasis"
    value {
      name: "ITEM"
      number: 0
    }
    value {
      name: "ORDER_SUBTOTAL"
      number: 1
    }
    value {
      name: "ORDER_TOTAL"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.accounting"
    java_outer_classname: "AccountingTaxes"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 77, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 24]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 54]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 54]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 53]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [5, 0]
      span: [13, 0, 22, 1]
      leading_comments: " Enumerates the jurisdictions at which tax may be levied.\n"
    }
    location {
      path: [5, 0, 1]
      span: [13, 5, 20]
    }
    location {
      path: [5, 0, 2, 0]
      span: [15, 2, 12]
      leading_comments: " The tax is levied by a local municipality.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [15, 2, 7]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [15, 10, 11]
    }
    location {
      path: [5, 0, 2, 1]
      span: [18, 2, 15]
      leading_comments: " The tax is levied by a provincial jurisdiction.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [18, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [18, 13, 14]
    }
    location {
      path: [5, 0, 2, 2]
      span: [21, 2, 14]
      leading_comments: " The tax is levied by a national government.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [21, 2, 9]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [21, 12, 13]
    }
    location {
      path: [5, 1]
      span: [26, 0, 35, 1]
      leading_comments: " Enumerates the types of bases a tax may be calculated from.\n"
    }
    location {
      path: [5, 1, 1]
      span: [26, 5, 13]
    }
    location {
      path: [5, 1, 2, 0]
      span: [28, 2, 11]
      leading_comments: " The tax is calculated per-item.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [28, 2, 6]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [28, 9, 10]
    }
    location {
      path: [5, 1, 2, 1]
      span: [31, 2, 21]
      leading_comments: " The tax is calculated from the order subtotal.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [31, 2, 16]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [31, 19, 20]
    }
    location {
      path: [5, 1, 2, 2]
      span: [34, 2, 18]
      leading_comments: " The tax is calculated in a second phase, applied to the subtotal which includes other taxes.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [34, 2, 13]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [34, 16, 17]
    }
    location {
      path: [4, 0]
      span: [39, 0, 57, 1]
      leading_comments: " Specification record for a type of taxes to apply.\n"
    }
    location {
      path: [4, 0, 1]
      span: [39, 8, 15]
    }
    location {
      path: [4, 0, 2, 0]
      span: [41, 2, 21]
      leading_comments: " The basis to calculate the tax value from.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [41, 2, 39, 17]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [41, 2, 10]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [41, 11, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [41, 19, 20]
    }
    location {
      path: [4, 0, 2, 1]
      span: [44, 2, 35]
      leading_comments: " Jurisdiction that is levying the tax.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [44, 2, 41, 21]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [44, 2, 17]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [44, 18, 30]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [44, 33, 34]
    }
    location {
      path: [4, 0, 2, 2]
      span: [47, 2, 31]
      leading_comments: " What to call this tax on receipts, and other end-user-visible materials.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [47, 2, 44, 35]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [47, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [47, 9, 26]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [47, 29, 30]
    }
    location {
      path: [4, 0, 8, 0]
      span: [50, 2, 56, 3]
      leading_comments: " Rate specified for the tax.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [50, 8, 12]
    }
    location {
      path: [4, 0, 2, 3]
      span: [52, 4, 26]
      leading_comments: " Percentage rate for the tax.\n"
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [52, 4, 10]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [52, 11, 21]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [52, 24, 25]
    }
    location {
      path: [4, 0, 2, 4]
      span: [55, 4, 28]
      leading_comments: " Flat rate for the tax.\n"
    }
    location {
      path: [4, 0, 2, 4, 5]
      span: [55, 4, 10]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [55, 11, 23]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [55, 26, 27]
    }
    location {
      path: [4, 1]
      span: [61, 0, 77, 1]
      leading_comments: " Specifies a tax to be applied during a purchase.\n"
    }
    location {
      path: [4, 1, 1]
      span: [61, 8, 11]
    }
    location {
      path: [4, 1, 2, 0]
      span: [63, 2, 16]
      leading_comments: " ID code for this tax entry.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [63, 2, 61, 13]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [63, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [63, 9, 11]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [63, 14, 15]
    }
    location {
      path: [4, 1, 2, 1]
      span: [66, 2, 19]
      leading_comments: " Specification for how the tax behaves.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [66, 2, 63, 16]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [66, 2, 9]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [66, 10, 14]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [66, 17, 18]
    }
    location {
      path: [4, 1, 2, 2]
      span: [69, 2, 18]
      leading_comments: " Back-office name for this tax.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [69, 2, 66, 19]
    }
    location {
      path: [4, 1, 2, 2, 5]
      span: [69, 2, 8]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [69, 9, 13]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [69, 16, 17]
    }
    location {
      path: [4, 1, 2, 3]
      span: [72, 2, 19]
      leading_comments: " User-visible name for this tax.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [72, 2, 69, 18]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [72, 2, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [72, 9, 14]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [72, 17, 18]
    }
    location {
      path: [4, 1, 2, 4]
      span: [76, 2, 25]
      leading_comments: " Narrative description for the tax, to be displayed to back-office and end-users in some\n special circumstances.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [76, 2, 72, 19]
    }
    location {
      path: [4, 1, 2, 4, 5]
      span: [76, 2, 8]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [76, 9, 20]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [76, 23, 24]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "commerce/pos/Purchase.proto"
  package: "commerce.pos"
  dependency: "commerce/Item.proto"
  dependency: "commerce/Customer.proto"
  dependency: "accounting/Taxes.proto"
  dependency: "accounting/Discounts.proto"
  dependency: "temporal/Instant.proto"
  dependency: "partner/PartnerDevice.proto"
  message_type {
    name: "PurchaseEvent"
    field {
      name: "status"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.pos.PurchaseStatus"
      json_name: "status"
    }
    field {
      name: "instant"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "instant"
    }
    field {
      name: "message"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "message"
    }
  }
  message_type {
    name: "Receipt"
    field {
      name: "subtotal"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "subtotal"
    }
    field {
      name: "tax"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".accounting.taxes.Tax"
      json_name: "tax"
    }
    field {
      name: "discount"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".accounting.discounts.Discount"
      json_name: "discount"
    }
    field {
      name: "total"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "total"
    }
  }
  message_type {
    name: "Purchase"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
    field {
      name: "partner_code"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "partnerCode"
    }
    field {
      name: "location_code"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "locationCode"
    }
    field {
      name: "status"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".commerce.pos.PurchaseStatus"
      json_name: "status"
    }
    field {
      name: "customer"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".commerce.Customer"
      json_name: "customer"
    }
    field {
      name: "register"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerDeviceKey"
      json_name: "register"
    }
    field {
      name: "item"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".commerce.Item"
      json_name: "item"
    }
    field {
      name: "receipt"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".commerce.pos.Receipt"
      json_name: "receipt"
    }
    field {
      name: "action_log"
      number: 9
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".commerce.pos.PurchaseEvent"
      json_name: "actionLog"
    }
    field {
      name: "created_at"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "createdAt"
    }
  }
  enum_type {
    name: "PurchaseStatus"
    value {
      name: "DORMANT"
      number: 0
    }
    value {
      name: "OPEN"
      number: 1
    }
    value {
      name: "VOIDED"
      number: 2
    }
    value {
      name: "CLOSED"
      number: 3
    }
  }
  options {
    java_package: "io.bloombox.schema.commerce.pos"
    java_outer_classname: "CommercialPurchase"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 96, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 20]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 56]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 56]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 55]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 50]
    }
    location {
      path: [3, 0]
      span: [11, 7, 28]
    }
    location {
      path: [3, 1]
      span: [12, 7, 32]
    }
    location {
      path: [3, 2]
      span: [13, 7, 31]
    }
    location {
      path: [3, 3]
      span: [14, 7, 35]
    }
    location {
      path: [3, 4]
      span: [15, 7, 31]
    }
    location {
      path: [3, 5]
      span: [16, 7, 36]
    }
    location {
      path: [5, 0]
      span: [20, 0, 32, 1]
      leading_comments: " Enumerates statuses that a purchase transaction may take.\n"
    }
    location {
      path: [5, 0, 1]
      span: [20, 5, 19]
    }
    location {
      path: [5, 0, 2, 0]
      span: [22, 2, 14]
      leading_comments: " The purchase has been allocated and has not yet begun filling with data.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [22, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [22, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [25, 2, 11]
      leading_comments: " The purchase is actively being collaborated on.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [25, 2, 6]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [25, 9, 10]
    }
    location {
      path: [5, 0, 2, 2]
      span: [28, 2, 13]
      leading_comments: " The purchase was cancelled.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [28, 2, 8]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [28, 11, 12]
    }
    location {
      path: [5, 0, 2, 3]
      span: [31, 2, 13]
      leading_comments: " The purchase was completed and is now closed.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [31, 2, 8]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [31, 11, 12]
    }
    location {
      path: [4, 0]
      span: [36, 0, 45, 1]
      leading_comments: " Specifies an event that takes place against a Purchase.\n"
    }
    location {
      path: [4, 0, 1]
      span: [36, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [38, 2, 28]
      leading_comments: " Status the order moved to.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [38, 2, 36, 23]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [38, 2, 16]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [38, 17, 23]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [38, 26, 27]
    }
    location {
      path: [4, 0, 2, 1]
      span: [41, 2, 31]
      leading_comments: " Instant the order was moved to this status.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [41, 2, 38, 28]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [41, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [41, 19, 26]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [41, 29, 30]
    }
    location {
      path: [4, 0, 2, 2]
      span: [44, 2, 21]
      leading_comments: " Message or reason given for this status change, if any.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [44, 2, 41, 31]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [44, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [44, 9, 16]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [44, 19, 20]
    }
    location {
      path: [4, 1]
      span: [49, 0, 61, 1]
      leading_comments: " Receipt object describing each of a purchase's component taxes and charges.\n"
    }
    location {
      path: [4, 1, 1]
      span: [49, 8, 15]
    }
    location {
      path: [4, 1, 2, 0]
      span: [51, 2, 22]
      leading_comments: " Calculated subtotal of all items, and their ordered quantities, summed of price.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [51, 2, 49, 17]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [51, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [51, 9, 17]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [51, 20, 21]
    }
    location {
      path: [4, 1, 2, 1]
      span: [54, 2, 40]
      leading_comments: " Tax entries applied to this receipt.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [54, 2, 10]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [54, 11, 31]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [54, 32, 35]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [54, 38, 39]
    }
    location {
      path: [4, 1, 2, 2]
      span: [57, 2, 54]
      leading_comments: " Discount entries applied to this receipt.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [57, 2, 10]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [57, 11, 40]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [57, 41, 49]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [57, 52, 53]
    }
    location {
      path: [4, 1, 2, 3]
      span: [60, 2, 19]
      leading_comments: " Calculated full total.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [60, 2, 57, 54]
    }
    location {
      path: [4, 1, 2, 3, 5]
      span: [60, 2, 8]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [60, 9, 14]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [60, 17, 18]
    }
    location {
      path: [4, 2]
      span: [66, 0, 96, 1]
      leading_comments: " Represents a commercial purchase, made at a point-of-sale station at a brick-and-mortar\n retail dispensary.\n"
    }
    location {
      path: [4, 2, 1]
      span: [66, 8, 16]
    }
    location {
      path: [4, 2, 2, 0]
      span: [68, 2, 16]
      leading_comments: " ID assigned to the purchase by the server.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [68, 2, 66, 18]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [68, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [68, 9, 11]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [68, 14, 15]
    }
    location {
      path: [4, 2, 2, 1]
      span: [71, 2, 26]
      leading_comments: " Partner ID for the purchase.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [71, 2, 68, 16]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [71, 2, 8]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [71, 9, 21]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [71, 24, 25]
    }
    location {
      path: [4, 2, 2, 2]
      span: [74, 2, 27]
      leading_comments: " Location ID for the purchase.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [74, 2, 71, 26]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [74, 2, 8]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [74, 9, 22]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [74, 25, 26]
    }
    location {
      path: [4, 2, 2, 3]
      span: [77, 2, 28]
      leading_comments: " Current status of this purchase.\n"
    }
    location {
      path: [4, 2, 2, 3, 4]
      span: [77, 2, 74, 27]
    }
    location {
      path: [4, 2, 2, 3, 6]
      span: [77, 2, 16]
    }
    location {
      path: [4, 2, 2, 3, 1]
      span: [77, 17, 23]
    }
    location {
      path: [4, 2, 2, 3, 3]
      span: [77, 26, 27]
    }
    location {
      path: [4, 2, 2, 4]
      span: [80, 2, 24]
      leading_comments: " Customer that submitted this purchase.\n"
    }
    location {
      path: [4, 2, 2, 4, 4]
      span: [80, 2, 77, 28]
    }
    location {
      path: [4, 2, 2, 4, 6]
      span: [80, 2, 10]
    }
    location {
      path: [4, 2, 2, 4, 1]
      span: [80, 11, 19]
    }
    location {
      path: [4, 2, 2, 4, 3]
      span: [80, 22, 23]
    }
    location {
      path: [4, 2, 2, 5]
      span: [83, 2, 40]
      leading_comments: " Point-of-Sale device that submitted this purchase.\n"
    }
    location {
      path: [4, 2, 2, 5, 4]
      span: [83, 2, 80, 24]
    }
    location {
      path: [4, 2, 2, 5, 6]
      span: [83, 2, 26]
    }
    location {
      path: [4, 2, 2, 5, 1]
      span: [83, 27, 35]
    }
    location {
      path: [4, 2, 2, 5, 3]
      span: [83, 38, 39]
    }
    location {
      path: [4, 2, 2, 6]
      span: [86, 2, 25]
      leading_comments: " Items being ordered.\n"
    }
    location {
      path: [4, 2, 2, 6, 4]
      span: [86, 2, 10]
    }
    location {
      path: [4, 2, 2, 6, 6]
      span: [86, 11, 15]
    }
    location {
      path: [4, 2, 2, 6, 1]
      span: [86, 16, 20]
    }
    location {
      path: [4, 2, 2, 6, 3]
      span: [86, 23, 24]
    }
    location {
      path: [4, 2, 2, 7]
      span: [89, 2, 22]
      leading_comments: " Calculated order values and components, like taxes, subtotal, and so on.\n"
    }
    location {
      path: [4, 2, 2, 7, 4]
      span: [89, 2, 86, 25]
    }
    location {
      path: [4, 2, 2, 7, 6]
      span: [89, 2, 9]
    }
    location {
      path: [4, 2, 2, 7, 1]
      span: [89, 10, 17]
    }
    location {
      path: [4, 2, 2, 7, 3]
      span: [89, 20, 21]
    }
    location {
      path: [4, 2, 2, 8]
      span: [92, 2, 40]
      leading_comments: " Actions taken on this order.\n"
    }
    location {
      path: [4, 2, 2, 8, 4]
      span: [92, 2, 10]
    }
    location {
      path: [4, 2, 2, 8, 6]
      span: [92, 11, 24]
    }
    location {
      path: [4, 2, 2, 8, 1]
      span: [92, 25, 35]
    }
    location {
      path: [4, 2, 2, 8, 3]
      span: [92, 38, 39]
    }
    location {
      path: [4, 2, 2, 9]
      span: [95, 2, 35]
      leading_comments: " When this order was created.\n"
    }
    location {
      path: [4, 2, 2, 9, 4]
      span: [95, 2, 92, 40]
    }
    location {
      path: [4, 2, 2, 9, 6]
      span: [95, 2, 18]
    }
    location {
      path: [4, 2, 2, 9, 1]
      span: [95, 19, 29]
    }
    location {
      path: [4, 2, 2, 9, 3]
      span: [95, 32, 34]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "content/Brand.proto"
  package: "content"
  dependency: "content/Name.proto"
  dependency: "content/Content.proto"
  dependency: "media/MediaItem.proto"
  message_type {
    name: "Brand"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Name"
      json_name: "name"
    }
    field {
      name: "parent"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Brand"
      json_name: "parent"
    }
    field {
      name: "summary"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Content"
      json_name: "summary"
    }
    field {
      name: "media"
      number: 20
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".media.MediaItem"
      json_name: "media"
    }
  }
  options {
    java_package: "io.bloombox.schema.content"
    java_outer_classname: "BrandContent"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 23, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 44]
    }
    location {
      path: [3, 0]
      span: [11, 7, 27]
    }
    location {
      path: [3, 1]
      span: [12, 7, 30]
    }
    location {
      path: [3, 2]
      span: [13, 7, 30]
    }
    location {
      path: [4, 0]
      span: [16, 0, 23, 1]
      leading_comments: "Basic Properties\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 13]
    }
    location {
      path: [4, 0, 2, 0]
      span: [17, 2, 24]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [17, 2, 16, 15]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [17, 2, 14]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [17, 15, 19]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [17, 22, 23]
    }
    location {
      path: [4, 0, 2, 1]
      span: [18, 2, 27]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [18, 2, 17, 24]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [18, 2, 15]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [18, 16, 22]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [18, 25, 26]
    }
    location {
      path: [4, 0, 2, 2]
      span: [19, 2, 30]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [19, 2, 18, 27]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [19, 2, 17]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [19, 18, 25]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [19, 28, 29]
    }
    location {
      path: [4, 0, 2, 3]
      span: [22, 2, 38]
      leading_comments: "Media\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [22, 2, 10]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [22, 11, 26]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [22, 27, 32]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [22, 35, 37]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/Shelf.proto"
  package: "structs"
  enum_type {
    name: "Shelf"
    value {
      name: "ECONOMY"
      number: 0
    }
    value {
      name: "MIDSHELF"
      number: 1
    }
    value {
      name: "TOPSHELF"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct"
    java_outer_classname: "MaterialShelf"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 16, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [5, 0]
      span: [12, 0, 16, 1]
    }
    location {
      path: [5, 0, 1]
      span: [12, 5, 10]
    }
    location {
      path: [5, 0, 2, 0]
      span: [13, 2, 14]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [13, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [13, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [14, 2, 15]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [14, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [14, 13, 14]
    }
    location {
      path: [5, 0, 2, 2]
      span: [15, 2, 15]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [15, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [15, 13, 14]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/Genetics.proto"
  package: "structs"
  dependency: "content/Name.proto"
  dependency: "base/ProductKey.proto"
  message_type {
    name: "Genetics"
    field {
      name: "male"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductReference"
      json_name: "male"
    }
    field {
      name: "female"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductReference"
      json_name: "female"
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct"
    java_outer_classname: "GeneticsStructs"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 22, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [3, 0]
      span: [11, 7, 27]
    }
    location {
      path: [3, 1]
      span: [12, 7, 30]
    }
    location {
      path: [4, 0]
      span: [16, 0, 22, 1]
      leading_comments: " Specifies genetics for a particular plant or flower item.\n"
    }
    location {
      path: [4, 0, 1]
      span: [16, 8, 16]
    }
    location {
      path: [4, 0, 2, 0]
      span: [18, 2, 33]
      leading_comments: " Specifies the male side of an item's genetics.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [18, 2, 16, 18]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [18, 2, 23]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [18, 24, 28]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [18, 31, 32]
    }
    location {
      path: [4, 0, 2, 1]
      span: [21, 2, 35]
      leading_comments: " Specifies the female side of an item's genetics.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [21, 2, 18, 33]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [21, 2, 23]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [21, 24, 30]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [21, 33, 34]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/distribution/DistributionChannel.proto"
  package: "products.distribution"
  message_type {
    name: "DistributionPolicy"
    field {
      name: "enabled"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "enabled"
    }
    field {
      name: "channel"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.distribution.Channel"
      json_name: "channel"
    }
    field {
      name: "type"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.distribution.ChannelType"
      json_name: "type"
    }
    field {
      name: "suppress"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "suppress"
    }
  }
  enum_type {
    name: "Channel"
    value {
      name: "UNSPECIFIED_CHANNEL"
      number: 0
    }
    value {
      name: "RETAIL"
      number: 1
    }
    value {
      name: "WHOLESALE"
      number: 2
    }
    value {
      name: "BULK"
      number: 3
    }
  }
  enum_type {
    name: "ChannelType"
    value {
      name: "UNSPECIFIED_CHANNEL_TYPE"
      number: 0
    }
    value {
      name: "DIRECT"
      number: 1
    }
    value {
      name: "MARKETPLACE"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "DistributionChannel"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 58, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 29]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 52]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 52]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 51]
    }
    location {
      path: [5, 0]
      span: [13, 0, 25, 1]
      leading_comments: " Specifies kinds of channels that may be used or specified for product distribution policies.\n"
    }
    location {
      path: [5, 0, 1]
      span: [13, 5, 12]
    }
    location {
      path: [5, 0, 2, 0]
      span: [15, 2, 26]
      leading_comments: " Unknown, unrecognized, or otherwise unspecified distribution channel.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [15, 2, 21]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [15, 24, 25]
    }
    location {
      path: [5, 0, 2, 1]
      span: [18, 2, 13]
      leading_comments: " Retail distribution channel, with direct sales to consumers.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [18, 2, 8]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [18, 11, 12]
    }
    location {
      path: [5, 0, 2, 2]
      span: [21, 2, 16]
      leading_comments: " Wholesale distribution channel, with sales to entities that re-sell.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [21, 2, 11]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [21, 14, 15]
    }
    location {
      path: [5, 0, 2, 3]
      span: [24, 2, 11]
      leading_comments: " Bulk distribution channel, with large-quantity sales to wholesalers, distributors or manufacturers.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [24, 2, 6]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [24, 9, 10]
    }
    location {
      path: [5, 1]
      span: [30, 0, 40, 1]
      leading_comments: " Specifies the supertypes of channels that may be used to categorize channels applied to product distribution\n policies.\n"
    }
    location {
      path: [5, 1, 1]
      span: [30, 5, 16]
    }
    location {
      path: [5, 1, 2, 0]
      span: [32, 2, 31]
      leading_comments: " Unknown, unrecognized, or otherwise unspecified channel type.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [32, 2, 26]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [32, 29, 30]
    }
    location {
      path: [5, 1, 2, 1]
      span: [35, 2, 13]
      leading_comments: " Direct consumption of channel data, i.e., \"direct retail\" would be the standard retail dispensary.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [35, 2, 8]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [35, 11, 12]
    }
    location {
      path: [5, 1, 2, 2]
      span: [39, 2, 18]
      leading_comments: " Distribution through a second-party partner marketplace system. \"Marketplace retail\" would refer to digital or\n physical aggregators or clearinghouses that work directly with consumers.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [39, 2, 13]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [39, 16, 17]
    }
    location {
      path: [4, 0]
      span: [45, 0, 58, 1]
      leading_comments: " Specifies information required to note a channel and its settings for a given datapoint. Presence of this record\n indicates an affirmative setting to distribute it to the specified channel, unless `suppress` is set.\n"
    }
    location {
      path: [4, 0, 1]
      span: [45, 8, 26]
    }
    location {
      path: [4, 0, 2, 0]
      span: [47, 2, 19]
      leading_comments: " Whether this policy is enabled.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [47, 2, 45, 28]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [47, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [47, 7, 14]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [47, 17, 18]
    }
    location {
      path: [4, 0, 2, 1]
      span: [50, 2, 22]
      leading_comments: " Channel setting.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [50, 2, 47, 19]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [50, 2, 9]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [50, 10, 17]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [50, 20, 21]
    }
    location {
      path: [4, 0, 2, 2]
      span: [53, 2, 23]
      leading_comments: " Channel distribution type.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [53, 2, 50, 22]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [53, 2, 13]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [53, 14, 18]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [53, 21, 22]
    }
    location {
      path: [4, 0, 2, 3]
      span: [57, 2, 20]
      leading_comments: " The mere presence of a DistributionPolicy on a particular datapoint makes it eligible for distribution. This flag\n may be set to suppress distribution of the datapoint temporarily or explicitly.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [57, 2, 53, 23]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [57, 2, 6]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [57, 7, 15]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [57, 18, 19]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "content/MaterialsData.proto"
  package: "content"
  dependency: "structs/Grow.proto"
  dependency: "structs/Shelf.proto"
  dependency: "structs/Species.proto"
  dependency: "structs/Genetics.proto"
  dependency: "products/distribution/DistributionChannel.proto"
  message_type {
    name: "MaterialsData"
    field {
      name: "species"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.Species"
      json_name: "species"
    }
    field {
      name: "genetics"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.Genetics"
      json_name: "genetics"
    }
    field {
      name: "grow"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.Grow"
      json_name: "grow"
    }
    field {
      name: "shelf"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.Shelf"
      json_name: "shelf"
    }
    field {
      name: "channels"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.distribution.DistributionPolicy"
      json_name: "channels"
    }
  }
  options {
    java_package: "io.bloombox.schema.content"
    java_outer_classname: "MaterialsContent"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 35, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 48]
    }
    location {
      path: [3, 0]
      span: [11, 7, 27]
    }
    location {
      path: [3, 1]
      span: [12, 7, 28]
    }
    location {
      path: [3, 2]
      span: [13, 7, 30]
    }
    location {
      path: [3, 3]
      span: [14, 7, 31]
    }
    location {
      path: [3, 4]
      span: [16, 7, 56]
    }
    location {
      path: [4, 0]
      span: [20, 0, 35, 1]
      leading_comments: " Specifies materials-related data about a product that contains cannabis.\n"
    }
    location {
      path: [4, 0, 1]
      span: [20, 8, 21]
    }
    location {
      path: [4, 0, 2, 0]
      span: [22, 2, 30]
      leading_comments: " Species of an item, if known.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [22, 2, 20, 23]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [22, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [22, 18, 25]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [22, 28, 29]
    }
    location {
      path: [4, 0, 2, 1]
      span: [25, 2, 32]
      leading_comments: " Specifies the genetics of an item, if known.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [25, 2, 22, 30]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [25, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [25, 19, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [25, 30, 31]
    }
    location {
      path: [4, 0, 2, 2]
      span: [28, 2, 24]
      leading_comments: " Specifies how this item was grown.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [28, 2, 25, 32]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [28, 2, 14]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [28, 15, 19]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [28, 22, 23]
    }
    location {
      path: [4, 0, 2, 3]
      span: [31, 2, 26]
      leading_comments: " Shelf status of this pre-rolled product.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [31, 2, 28, 24]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [31, 2, 15]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [31, 16, 21]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [31, 24, 25]
    }
    location {
      path: [4, 0, 2, 4]
      span: [34, 2, 65]
      leading_comments: " Specifies distribution policy for this material.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [34, 2, 10]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [34, 11, 51]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [34, 52, 60]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [34, 63, 64]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/ProductFlags.proto"
  package: "structs"
  enum_type {
    name: "ProductFlag"
    value {
      name: "VISIBLE"
      number: 0
    }
    value {
      name: "PREMIUM"
      number: 1
    }
    value {
      name: "FEATURED"
      number: 2
    }
    value {
      name: "ORGANIC"
      number: 3
    }
    value {
      name: "EXCLUSIVE"
      number: 4
    }
    value {
      name: "IN_HOUSE"
      number: 5
    }
    value {
      name: "LAST_CHANCE"
      number: 6
    }
    value {
      name: "LIMITED_TIME"
      number: 7
    }
    value {
      name: "ON_SALE"
      number: 8
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct"
    java_outer_classname: "BaseStructs"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 22, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 44]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 44]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 43]
    }
    location {
      path: [5, 0]
      span: [12, 0, 22, 1]
      leading_comments: " top-level flags\n"
    }
    location {
      path: [5, 0, 1]
      span: [12, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [13, 2, 14]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [13, 2, 9]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [13, 12, 13]
    }
    location {
      path: [5, 0, 2, 1]
      span: [14, 2, 14]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [14, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [14, 12, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [15, 2, 15]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [15, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [15, 13, 14]
    }
    location {
      path: [5, 0, 2, 3]
      span: [16, 2, 14]
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [16, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [16, 12, 13]
    }
    location {
      path: [5, 0, 2, 4]
      span: [17, 2, 16]
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [17, 2, 11]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [17, 14, 15]
    }
    location {
      path: [5, 0, 2, 5]
      span: [18, 2, 15]
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [18, 2, 10]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [18, 13, 14]
    }
    location {
      path: [5, 0, 2, 6]
      span: [19, 2, 18]
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [19, 2, 13]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [19, 16, 17]
    }
    location {
      path: [5, 0, 2, 7]
      span: [20, 2, 19]
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [20, 2, 14]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [20, 17, 18]
    }
    location {
      path: [5, 0, 2, 8]
      span: [21, 2, 14]
    }
    location {
      path: [5, 0, 2, 8, 1]
      span: [21, 2, 9]
    }
    location {
      path: [5, 0, 2, 8, 2]
      span: [21, 12, 13]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/pricing/SaleDescriptor.proto"
  package: "structs.pricing"
  dependency: "temporal/Instant.proto"
  message_type {
    name: "PercentageDiscount"
    field {
      name: "discount"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "discount"
    }
  }
  message_type {
    name: "BOGODiscount"
    field {
      name: "trigger"
      number: 21
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "trigger"
    }
    field {
      name: "reward"
      number: 22
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "reward"
    }
  }
  message_type {
    name: "LoyaltyDiscount"
    field {
      name: "trigger"
      number: 23
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "trigger"
    }
    field {
      name: "reward"
      number: 24
      label: LABEL_OPTIONAL
      type: TYPE_UINT32
      json_name: "reward"
    }
  }
  message_type {
    name: "SaleDescriptor"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.pricing.SaleType"
      json_name: "type"
    }
    field {
      name: "effective"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "effective"
    }
    field {
      name: "expiration"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "expiration"
    }
    field {
      name: "percentage_off"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.PercentageDiscount"
      oneof_index: 0
      json_name: "percentageOff"
    }
    field {
      name: "bogo"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.BOGODiscount"
      oneof_index: 0
      json_name: "bogo"
    }
    field {
      name: "loyalty"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.LoyaltyDiscount"
      oneof_index: 0
      json_name: "loyalty"
    }
    oneof_decl {
      name: "sale"
    }
  }
  enum_type {
    name: "SaleType"
    value {
      name: "PERCENTAGE_OFF"
      number: 0
    }
    value {
      name: "BOGO"
      number: 1
    }
    value {
      name: "LOYALTY"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct"
    java_outer_classname: "ProductDiscount"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 46, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 23]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [5, 0]
      span: [14, 0, 18, 1]
    }
    location {
      path: [5, 0, 1]
      span: [14, 5, 13]
    }
    location {
      path: [5, 0, 2, 0]
      span: [15, 2, 21]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [15, 2, 16]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [15, 19, 20]
    }
    location {
      path: [5, 0, 2, 1]
      span: [16, 2, 11]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [16, 2, 6]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [16, 9, 10]
    }
    location {
      path: [5, 0, 2, 2]
      span: [17, 2, 14]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [17, 2, 9]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [17, 12, 13]
    }
    location {
      path: [4, 0]
      span: [20, 0, 22, 1]
    }
    location {
      path: [4, 0, 1]
      span: [20, 8, 26]
    }
    location {
      path: [4, 0, 2, 0]
      span: [21, 2, 23]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [21, 2, 20, 28]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [21, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [21, 9, 17]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [21, 20, 22]
    }
    location {
      path: [4, 1]
      span: [24, 0, 27, 1]
    }
    location {
      path: [4, 1, 1]
      span: [24, 8, 20]
    }
    location {
      path: [4, 1, 2, 0]
      span: [25, 2, 22]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [25, 2, 24, 22]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [25, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [25, 9, 16]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [25, 19, 21]
    }
    location {
      path: [4, 1, 2, 1]
      span: [26, 2, 21]
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [26, 2, 25, 22]
    }
    location {
      path: [4, 1, 2, 1, 5]
      span: [26, 2, 8]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [26, 9, 15]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [26, 18, 20]
    }
    location {
      path: [4, 2]
      span: [29, 0, 32, 1]
    }
    location {
      path: [4, 2, 1]
      span: [29, 8, 23]
    }
    location {
      path: [4, 2, 2, 0]
      span: [30, 2, 22]
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [30, 2, 29, 25]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [30, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [30, 9, 16]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [30, 19, 21]
    }
    location {
      path: [4, 2, 2, 1]
      span: [31, 2, 21]
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [31, 2, 30, 22]
    }
    location {
      path: [4, 2, 2, 1, 5]
      span: [31, 2, 8]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [31, 9, 15]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [31, 18, 20]
    }
    location {
      path: [4, 3]
      span: [34, 0, 46, 1]
    }
    location {
      path: [4, 3, 1]
      span: [34, 8, 22]
    }
    location {
      path: [4, 3, 2, 0]
      span: [36, 2, 20]
      leading_comments: " sale metadata\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [36, 2, 34, 24]
    }
    location {
      path: [4, 3, 2, 0, 6]
      span: [36, 2, 10]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [36, 11, 15]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [36, 18, 19]
    }
    location {
      path: [4, 3, 2, 1]
      span: [37, 2, 33]
    }
    location {
      path: [4, 3, 2, 1, 4]
      span: [37, 2, 36, 20]
    }
    location {
      path: [4, 3, 2, 1, 6]
      span: [37, 2, 18]
    }
    location {
      path: [4, 3, 2, 1, 1]
      span: [37, 19, 28]
    }
    location {
      path: [4, 3, 2, 1, 3]
      span: [37, 31, 32]
    }
    location {
      path: [4, 3, 2, 2]
      span: [38, 2, 34]
    }
    location {
      path: [4, 3, 2, 2, 4]
      span: [38, 2, 37, 33]
    }
    location {
      path: [4, 3, 2, 2, 6]
      span: [38, 2, 18]
    }
    location {
      path: [4, 3, 2, 2, 1]
      span: [38, 19, 29]
    }
    location {
      path: [4, 3, 2, 2, 3]
      span: [38, 32, 33]
    }
    location {
      path: [4, 3, 8, 0]
      span: [41, 2, 45, 3]
      leading_comments: " sale amount and trigger properties\n"
    }
    location {
      path: [4, 3, 8, 0, 1]
      span: [41, 8, 12]
    }
    location {
      path: [4, 3, 2, 3]
      span: [42, 4, 42]
    }
    location {
      path: [4, 3, 2, 3, 6]
      span: [42, 4, 22]
    }
    location {
      path: [4, 3, 2, 3, 1]
      span: [42, 23, 37]
    }
    location {
      path: [4, 3, 2, 3, 3]
      span: [42, 40, 41]
    }
    location {
      path: [4, 3, 2, 4]
      span: [43, 4, 26]
    }
    location {
      path: [4, 3, 2, 4, 6]
      span: [43, 4, 16]
    }
    location {
      path: [4, 3, 2, 4, 1]
      span: [43, 17, 21]
    }
    location {
      path: [4, 3, 2, 4, 3]
      span: [43, 24, 25]
    }
    location {
      path: [4, 3, 2, 5]
      span: [44, 4, 32]
    }
    location {
      path: [4, 3, 2, 5, 6]
      span: [44, 4, 19]
    }
    location {
      path: [4, 3, 2, 5, 1]
      span: [44, 20, 27]
    }
    location {
      path: [4, 3, 2, 5, 3]
      span: [44, 30, 31]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/pricing/PricingDescriptor.proto"
  package: "structs.pricing"
  dependency: "structs/pricing/SaleDescriptor.proto"
  message_type {
    name: "PricingTierAvailability"
    field {
      name: "offered"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "offered"
    }
    field {
      name: "available"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "available"
    }
  }
  message_type {
    name: "UnitPricingDescriptor"
    field {
      name: "price_value"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_FLOAT
      json_name: "priceValue"
    }
    field {
      name: "status"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.PricingTierAvailability"
      json_name: "status"
    }
    field {
      name: "discounts"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.SaleDescriptor"
      json_name: "discounts"
    }
  }
  message_type {
    name: "WeightedPricingDescriptor"
    field {
      name: "weight"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.pricing.PricingWeightTier"
      json_name: "weight"
    }
    field {
      name: "tier"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.UnitPricingDescriptor"
      json_name: "tier"
    }
    field {
      name: "weight_in_grams"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_FLOAT
      json_name: "weightInGrams"
    }
  }
  message_type {
    name: "FreebiePricingDescriptor"
  }
  message_type {
    name: "PricingDescriptor"
    field {
      name: "type"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".structs.pricing.PricingType"
      json_name: "type"
    }
    field {
      name: "unit"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.UnitPricingDescriptor"
      oneof_index: 0
      json_name: "unit"
    }
    field {
      name: "weighted"
      number: 21
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.WeightedPricingDescriptor"
      oneof_index: 0
      json_name: "weighted"
    }
    field {
      name: "freebie"
      number: 22
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.FreebiePricingDescriptor"
      oneof_index: 0
      json_name: "freebie"
    }
    oneof_decl {
      name: "pricing"
    }
  }
  message_type {
    name: "ProductPricing"
    field {
      name: "discounts"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.SaleDescriptor"
      json_name: "discounts"
    }
    field {
      name: "manifest"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.PricingDescriptor"
      json_name: "manifest"
    }
  }
  enum_type {
    name: "PricingType"
    value {
      name: "UNIT"
      number: 0
    }
    value {
      name: "WEIGHTED"
      number: 1
    }
    value {
      name: "FREEBIE"
      number: 2
    }
  }
  enum_type {
    name: "PricingWeightTier"
    value {
      name: "OTHER"
      number: 0
    }
    value {
      name: "GRAM"
      number: 1
    }
    value {
      name: "HALFGRAM"
      number: 2
    }
    value {
      name: "QUARTERGRAM"
      number: 3
    }
    value {
      name: "DUB"
      number: 4
    }
    value {
      name: "EIGHTH"
      number: 5
    }
    value {
      name: "QUARTER"
      number: 6
    }
    value {
      name: "HALF"
      number: 7
    }
    value {
      name: "OUNCE"
      number: 8
    }
    value {
      name: "POUND"
      number: 9
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct"
    java_outer_classname: "ProductPricingSpec"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 72, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 23]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 58]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 57]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 50]
    }
    location {
      path: [3, 0]
      span: [11, 7, 45]
    }
    location {
      path: [5, 0]
      span: [15, 0, 19, 1]
      leading_comments: " -- Pricing: Objects\n"
    }
    location {
      path: [5, 0, 1]
      span: [15, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [16, 2, 11]
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [16, 2, 6]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [16, 9, 10]
    }
    location {
      path: [5, 0, 2, 1]
      span: [17, 2, 15]
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [17, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [17, 13, 14]
    }
    location {
      path: [5, 0, 2, 2]
      span: [18, 2, 14]
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [18, 2, 9]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [18, 12, 13]
    }
    location {
      path: [5, 1]
      span: [21, 0, 32, 1]
    }
    location {
      path: [5, 1, 1]
      span: [21, 5, 22]
    }
    location {
      path: [5, 1, 2, 0]
      span: [22, 2, 12]
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [22, 2, 7]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [22, 10, 11]
    }
    location {
      path: [5, 1, 2, 1]
      span: [23, 2, 11]
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [23, 2, 6]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [23, 9, 10]
    }
    location {
      path: [5, 1, 2, 2]
      span: [24, 2, 15]
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [24, 2, 10]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [24, 13, 14]
    }
    location {
      path: [5, 1, 2, 3]
      span: [25, 2, 18]
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [25, 2, 13]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [25, 16, 17]
    }
    location {
      path: [5, 1, 2, 4]
      span: [26, 2, 10]
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [26, 2, 5]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [26, 8, 9]
    }
    location {
      path: [5, 1, 2, 5]
      span: [27, 2, 13]
    }
    location {
      path: [5, 1, 2, 5, 1]
      span: [27, 2, 8]
    }
    location {
      path: [5, 1, 2, 5, 2]
      span: [27, 11, 12]
    }
    location {
      path: [5, 1, 2, 6]
      span: [28, 2, 14]
    }
    location {
      path: [5, 1, 2, 6, 1]
      span: [28, 2, 9]
    }
    location {
      path: [5, 1, 2, 6, 2]
      span: [28, 12, 13]
    }
    location {
      path: [5, 1, 2, 7]
      span: [29, 2, 11]
    }
    location {
      path: [5, 1, 2, 7, 1]
      span: [29, 2, 6]
    }
    location {
      path: [5, 1, 2, 7, 2]
      span: [29, 9, 10]
    }
    location {
      path: [5, 1, 2, 8]
      span: [30, 2, 12]
    }
    location {
      path: [5, 1, 2, 8, 1]
      span: [30, 2, 7]
    }
    location {
      path: [5, 1, 2, 8, 2]
      span: [30, 10, 11]
    }
    location {
      path: [5, 1, 2, 9]
      span: [31, 2, 12]
    }
    location {
      path: [5, 1, 2, 9, 1]
      span: [31, 2, 7]
    }
    location {
      path: [5, 1, 2, 9, 2]
      span: [31, 10, 11]
    }
    location {
      path: [4, 0]
      span: [34, 0, 37, 1]
    }
    location {
      path: [4, 0, 1]
      span: [34, 8, 31]
    }
    location {
      path: [4, 0, 2, 0]
      span: [35, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [35, 2, 34, 33]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [35, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [35, 7, 14]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [35, 17, 18]
    }
    location {
      path: [4, 0, 2, 1]
      span: [36, 2, 21]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [36, 2, 35, 19]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [36, 2, 6]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [36, 7, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [36, 19, 20]
    }
    location {
      path: [4, 1]
      span: [40, 0, 44, 1]
      leading_comments: " -- Pricing: Typed Descriptors\n"
    }
    location {
      path: [4, 1, 1]
      span: [40, 8, 29]
    }
    location {
      path: [4, 1, 2, 0]
      span: [41, 2, 24]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [41, 2, 40, 31]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [41, 2, 7]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [41, 8, 19]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [41, 22, 23]
    }
    location {
      path: [4, 1, 2, 1]
      span: [42, 2, 37]
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [42, 2, 41, 24]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [42, 2, 25]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [42, 26, 32]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [42, 35, 36]
    }
    location {
      path: [4, 1, 2, 2]
      span: [43, 2, 56]
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [43, 2, 10]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [43, 11, 41]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [43, 42, 51]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [43, 54, 55]
    }
    location {
      path: [4, 2]
      span: [46, 0, 50, 1]
    }
    location {
      path: [4, 2, 1]
      span: [46, 8, 33]
    }
    location {
      path: [4, 2, 2, 0]
      span: [47, 2, 31]
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [47, 2, 46, 35]
    }
    location {
      path: [4, 2, 2, 0, 6]
      span: [47, 2, 19]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [47, 20, 26]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [47, 29, 30]
    }
    location {
      path: [4, 2, 2, 1]
      span: [48, 2, 33]
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [48, 2, 47, 31]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [48, 2, 23]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [48, 24, 28]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [48, 31, 32]
    }
    location {
      path: [4, 2, 2, 2]
      span: [49, 2, 28]
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [49, 2, 48, 33]
    }
    location {
      path: [4, 2, 2, 2, 5]
      span: [49, 2, 7]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [49, 8, 23]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [49, 26, 27]
    }
    location {
      path: [4, 3]
      span: [52, 0, 54, 1]
    }
    location {
      path: [4, 3, 1]
      span: [52, 8, 32]
    }
    location {
      path: [4, 4]
      span: [57, 0, 66, 1]
      leading_comments: " -- Pricing: Main Descriptor\n"
    }
    location {
      path: [4, 4, 1]
      span: [57, 8, 25]
    }
    location {
      path: [4, 4, 2, 0]
      span: [58, 2, 23]
    }
    location {
      path: [4, 4, 2, 0, 4]
      span: [58, 2, 57, 27]
    }
    location {
      path: [4, 4, 2, 0, 6]
      span: [58, 2, 13]
    }
    location {
      path: [4, 4, 2, 0, 1]
      span: [58, 14, 18]
    }
    location {
      path: [4, 4, 2, 0, 3]
      span: [58, 21, 22]
    }
    location {
      path: [4, 4, 8, 0]
      span: [60, 2, 65, 3]
    }
    location {
      path: [4, 4, 8, 0, 1]
      span: [60, 8, 15]
    }
    location {
      path: [4, 4, 2, 1]
      span: [62, 4, 36]
      leading_comments: " -- descriptors\n"
    }
    location {
      path: [4, 4, 2, 1, 6]
      span: [62, 4, 25]
    }
    location {
      path: [4, 4, 2, 1, 1]
      span: [62, 26, 30]
    }
    location {
      path: [4, 4, 2, 1, 3]
      span: [62, 33, 35]
    }
    location {
      path: [4, 4, 2, 2]
      span: [63, 4, 44]
    }
    location {
      path: [4, 4, 2, 2, 6]
      span: [63, 4, 29]
    }
    location {
      path: [4, 4, 2, 2, 1]
      span: [63, 30, 38]
    }
    location {
      path: [4, 4, 2, 2, 3]
      span: [63, 41, 43]
    }
    location {
      path: [4, 4, 2, 3]
      span: [64, 4, 42]
    }
    location {
      path: [4, 4, 2, 3, 6]
      span: [64, 4, 28]
    }
    location {
      path: [4, 4, 2, 3, 1]
      span: [64, 29, 36]
    }
    location {
      path: [4, 4, 2, 3, 3]
      span: [64, 39, 41]
    }
    location {
      path: [4, 5]
      span: [69, 0, 72, 1]
      leading_comments: " -- Pricing: Product-level Object\n"
    }
    location {
      path: [4, 5, 1]
      span: [69, 8, 22]
    }
    location {
      path: [4, 5, 2, 0]
      span: [70, 2, 56]
    }
    location {
      path: [4, 5, 2, 0, 4]
      span: [70, 2, 10]
    }
    location {
      path: [4, 5, 2, 0, 6]
      span: [70, 11, 41]
    }
    location {
      path: [4, 5, 2, 0, 1]
      span: [70, 42, 51]
    }
    location {
      path: [4, 5, 2, 0, 3]
      span: [70, 54, 55]
    }
    location {
      path: [4, 5, 2, 1]
      span: [71, 2, 42]
    }
    location {
      path: [4, 5, 2, 1, 4]
      span: [71, 2, 10]
    }
    location {
      path: [4, 5, 2, 1, 6]
      span: [71, 11, 28]
    }
    location {
      path: [4, 5, 2, 1, 1]
      span: [71, 29, 37]
    }
    location {
      path: [4, 5, 2, 1, 3]
      span: [71, 40, 41]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "content/ProductContent.proto"
  package: "content"
  dependency: "content/Name.proto"
  dependency: "content/Content.proto"
  dependency: "content/Brand.proto"
  dependency: "temporal/Instant.proto"
  dependency: "media/MediaItem.proto"
  dependency: "structs/ProductFlags.proto"
  dependency: "structs/labtesting/TestResults.proto"
  dependency: "structs/pricing/PricingDescriptor.proto"
  message_type {
    name: "ProductTimestamps"
    field {
      name: "created"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "created"
    }
    field {
      name: "modified"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "modified"
    }
    field {
      name: "published"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "published"
    }
  }
  message_type {
    name: "ProductContent"
    field {
      name: "name"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Name"
      json_name: "name"
    }
    field {
      name: "brand"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Brand"
      json_name: "brand"
    }
    field {
      name: "summary"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Content"
      json_name: "summary"
    }
    field {
      name: "usage"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Content"
      json_name: "usage"
    }
    field {
      name: "dosage"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.Content"
      json_name: "dosage"
    }
    field {
      name: "media"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".media.MediaItem"
      json_name: "media"
    }
    field {
      name: "pricing"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.pricing.ProductPricing"
      json_name: "pricing"
    }
    field {
      name: "testing"
      number: 8
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.TestResults"
      json_name: "testing"
    }
    field {
      name: "flags"
      number: 9
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".structs.ProductFlag"
      json_name: "flags"
    }
    field {
      name: "ts"
      number: 10
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductTimestamps"
      json_name: "ts"
    }
  }
  options {
    java_package: "io.bloombox.schema.content"
    java_outer_classname: "AttachedContent"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 70, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 15]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 48]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 47]
    }
    location {
      path: [3, 0]
      span: [11, 7, 27]
    }
    location {
      path: [3, 1]
      span: [12, 7, 30]
    }
    location {
      path: [3, 2]
      span: [13, 7, 28]
    }
    location {
      path: [3, 3]
      span: [15, 7, 31]
    }
    location {
      path: [3, 4]
      span: [17, 7, 30]
    }
    location {
      path: [3, 5]
      span: [19, 7, 35]
    }
    location {
      path: [3, 6]
      span: [20, 7, 45]
    }
    location {
      path: [3, 7]
      span: [21, 7, 48]
    }
    location {
      path: [4, 0]
      span: [26, 0, 35, 1]
      leading_comments: " Specifies timestamps applied to a product, so that it may be tracked or sorted according to publish date, creation\n date, or last modification date.\n"
    }
    location {
      path: [4, 0, 1]
      span: [26, 8, 25]
    }
    location {
      path: [4, 0, 2, 0]
      span: [28, 2, 31]
      leading_comments: " When the subject product was created.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [28, 2, 26, 27]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [28, 2, 18]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [28, 19, 26]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [28, 29, 30]
    }
    location {
      path: [4, 0, 2, 1]
      span: [31, 2, 32]
      leading_comments: " When the subject product was last modified.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [31, 2, 28, 31]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [31, 2, 18]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [31, 19, 27]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [31, 30, 31]
    }
    location {
      path: [4, 0, 2, 2]
      span: [34, 2, 33]
      leading_comments: " When the subject product was last or first published.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [34, 2, 31, 32]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [34, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [34, 19, 28]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [34, 31, 32]
    }
    location {
      path: [4, 1]
      span: [40, 0, 70, 1]
      leading_comments: " Specifies a common model for product content, mostly user-visible, and shared by all concrete models. Most of the\n information you see when a product is displayed or listed comes from this model.\n"
    }
    location {
      path: [4, 1, 1]
      span: [40, 8, 22]
    }
    location {
      path: [4, 1, 2, 0]
      span: [42, 2, 24]
      leading_comments: " Main product name.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [42, 2, 40, 24]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [42, 2, 14]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [42, 15, 19]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [42, 22, 23]
    }
    location {
      path: [4, 1, 2, 1]
      span: [45, 2, 26]
      leading_comments: " Brand information for this product.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [45, 2, 42, 24]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [45, 2, 15]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [45, 16, 21]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [45, 24, 25]
    }
    location {
      path: [4, 1, 2, 2]
      span: [48, 2, 30]
      leading_comments: " Description or narrative-style content about this product.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [48, 2, 45, 26]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [48, 2, 17]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [48, 18, 25]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [48, 28, 29]
    }
    location {
      path: [4, 1, 2, 3]
      span: [51, 2, 28]
      leading_comments: " Content about how this product is best used, or recommended to be used, either from the manufacturer or retailer.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [51, 2, 48, 30]
    }
    location {
      path: [4, 1, 2, 3, 6]
      span: [51, 2, 17]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [51, 18, 23]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [51, 26, 27]
    }
    location {
      path: [4, 1, 2, 4]
      span: [54, 2, 29]
      leading_comments: " Dosage advice about this product, either from the manufacturer or retailer.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [54, 2, 51, 28]
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [54, 2, 17]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [54, 18, 24]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [54, 27, 28]
    }
    location {
      path: [4, 1, 2, 5]
      span: [57, 2, 37]
      leading_comments: " Product media, including images, videos, and so on.\n"
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [57, 2, 10]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [57, 11, 26]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [57, 27, 32]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [57, 35, 36]
    }
    location {
      path: [4, 1, 2, 6]
      span: [60, 2, 45]
      leading_comments: " Pricing specification for this product, regardless of pricing type (i.e. weighted or unit-style pricing).\n"
    }
    location {
      path: [4, 1, 2, 6, 4]
      span: [60, 2, 57, 37]
    }
    location {
      path: [4, 1, 2, 6, 6]
      span: [60, 2, 32]
    }
    location {
      path: [4, 1, 2, 6, 1]
      span: [60, 33, 40]
    }
    location {
      path: [4, 1, 2, 6, 3]
      span: [60, 43, 44]
    }
    location {
      path: [4, 1, 2, 7]
      span: [63, 2, 45]
      leading_comments: " Lab testing information concerning this product.\n"
    }
    location {
      path: [4, 1, 2, 7, 4]
      span: [63, 2, 60, 45]
    }
    location {
      path: [4, 1, 2, 7, 6]
      span: [63, 2, 32]
    }
    location {
      path: [4, 1, 2, 7, 1]
      span: [63, 33, 40]
    }
    location {
      path: [4, 1, 2, 7, 3]
      span: [63, 43, 44]
    }
    location {
      path: [4, 1, 2, 8]
      span: [66, 2, 41]
      leading_comments: " Product flags attached to this content.\n"
    }
    location {
      path: [4, 1, 2, 8, 4]
      span: [66, 2, 10]
    }
    location {
      path: [4, 1, 2, 8, 6]
      span: [66, 11, 30]
    }
    location {
      path: [4, 1, 2, 8, 1]
      span: [66, 31, 36]
    }
    location {
      path: [4, 1, 2, 8, 3]
      span: [66, 39, 40]
    }
    location {
      path: [4, 1, 2, 9]
      span: [69, 2, 28]
      leading_comments: " Timestamps for this product.\n"
    }
    location {
      path: [4, 1, 2, 9, 4]
      span: [69, 2, 66, 41]
    }
    location {
      path: [4, 1, 2, 9, 6]
      span: [69, 2, 19]
    }
    location {
      path: [4, 1, 2, 9, 1]
      span: [69, 20, 22]
    }
    location {
      path: [4, 1, 2, 9, 3]
      span: [69, 25, 27]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "oauth/AuthorizationScope.proto"
  package: "oauth"
  message_type {
    name: "AuthorizationScope"
    field {
      name: "label"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "label"
    }
    field {
      name: "uri"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "uri"
    }
  }
  options {
    java_package: "io.bloombox.schema.oauth"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 13, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 13]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 49]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 49]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 48]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 13, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 26]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 19]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 28]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 14]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 17, 18]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 17]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 19]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 9, 12]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 15, 16]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "oauth/Client.proto"
  package: "oauth"
  message_type {
    name: "Client"
    field {
      name: "client_id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "clientId"
    }
    field {
      name: "client_secret"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "clientSecret"
    }
  }
  message_type {
    name: "ClientID"
    field {
      name: "id"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "id"
    }
  }
  message_type {
    name: "ClientSecret"
    field {
      name: "secret"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "secret"
    }
  }
  options {
    java_package: "io.bloombox.schema.oauth"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 23, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 13]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 49]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 49]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 48]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [10, 0, 13, 1]
    }
    location {
      path: [4, 0, 1]
      span: [10, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [11, 2, 23]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [11, 2, 10, 16]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [11, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [11, 9, 18]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [11, 21, 22]
    }
    location {
      path: [4, 0, 2, 1]
      span: [12, 2, 27]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [12, 2, 11, 23]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [12, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [12, 9, 22]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [12, 25, 26]
    }
    location {
      path: [4, 1]
      span: [16, 0, 18, 1]
    }
    location {
      path: [4, 1, 1]
      span: [16, 8, 16]
    }
    location {
      path: [4, 1, 2, 0]
      span: [17, 2, 16]
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [17, 2, 16, 18]
    }
    location {
      path: [4, 1, 2, 0, 5]
      span: [17, 2, 8]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [17, 9, 11]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [17, 14, 15]
    }
    location {
      path: [4, 2]
      span: [21, 0, 23, 1]
    }
    location {
      path: [4, 2, 1]
      span: [21, 8, 20]
    }
    location {
      path: [4, 2, 2, 0]
      span: [22, 2, 20]
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [22, 2, 21, 22]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [22, 2, 8]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [22, 9, 15]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [22, 18, 19]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Apothecary.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/MaterialsData.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "Apothecary"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.ApothecaryType"
      json_name: "type"
    }
    field {
      name: "product"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
    field {
      name: "material"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.MaterialsData"
      json_name: "material"
    }
  }
  enum_type {
    name: "ApothecaryType"
    value {
      name: "UNSPECIFIED_APOTHECARY"
      number: 0
    }
    value {
      name: "TOPICAL"
      number: 1
    }
    value {
      name: "TINCTURE"
      number: 2
    }
    value {
      name: "CAPSULE"
      number: 3
    }
    value {
      name: "INJECTOR"
      number: 4
    }
    value {
      name: "SUBLINGUAL"
      number: 5
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "ApothecaryProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 53, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 50]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 50]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 49]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [13, 7, 36]
    }
    location {
      path: [3, 2]
      span: [14, 7, 37]
    }
    location {
      path: [5, 0]
      span: [18, 0, 36, 1]
      leading_comments: " Specifies types of apothecary items that may be expressed.\n"
    }
    location {
      path: [5, 0, 1]
      span: [18, 5, 19]
    }
    location {
      path: [5, 0, 2, 0]
      span: [20, 2, 29]
      leading_comments: " Specifies an unidentified, or unspecified, apothecary item.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [20, 2, 24]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [20, 27, 28]
    }
    location {
      path: [5, 0, 2, 1]
      span: [23, 2, 14]
      leading_comments: " Specifies a topical material, such as an ointment or oil, meant for application to the skin.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [23, 2, 9]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [23, 12, 13]
    }
    location {
      path: [5, 0, 2, 2]
      span: [26, 2, 15]
      leading_comments: " Specifies a liquid that may be added to other liquids or foods. Often used with tea.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [26, 2, 10]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [26, 13, 14]
    }
    location {
      path: [5, 0, 2, 3]
      span: [29, 2, 14]
      leading_comments: " Specifies a capsule containing cannabinoids, similar to a dietary supplement.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [29, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [29, 12, 13]
    }
    location {
      path: [5, 0, 2, 4]
      span: [32, 2, 15]
      leading_comments: " Specifies an injector or injection style system.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [32, 2, 10]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [32, 13, 14]
    }
    location {
      path: [5, 0, 2, 5]
      span: [35, 2, 17]
      leading_comments: " Specifies a sublingual-applied product, i.e., under-the-tongue.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [35, 2, 12]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [35, 15, 16]
    }
    location {
      path: [4, 0]
      span: [41, 0, 53, 1]
      leading_comments: " Specifies an apothecary item for sale. Apothecary items are described as drugstore-style items, like capsules, oils,\n injectors, and other edge-case applications.\n"
    }
    location {
      path: [4, 0, 1]
      span: [41, 8, 18]
    }
    location {
      path: [4, 0, 2, 0]
      span: [43, 2, 26]
      leading_comments: " Product key uniquely identifying this apothecary item.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [43, 2, 41, 20]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [43, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [43, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [43, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [46, 2, 26]
      leading_comments: " Specific type of apothecary item being described.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [46, 2, 43, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [46, 2, 16]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [46, 17, 21]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [46, 24, 25]
    }
    location {
      path: [4, 0, 2, 2]
      span: [49, 2, 37]
      leading_comments: " Product content about this apothecary item.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [49, 2, 46, 26]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [49, 2, 24]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [49, 25, 32]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [49, 35, 36]
    }
    location {
      path: [4, 0, 2, 3]
      span: [52, 2, 37]
      leading_comments: " Materials and handling information about this apothecary item.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [52, 2, 49, 37]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [52, 2, 23]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [52, 24, 32]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [52, 35, 36]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Cartridge.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/MaterialsData.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "Cartridge"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.CartridgeType"
      json_name: "type"
    }
    field {
      name: "product"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
    field {
      name: "material"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.MaterialsData"
      json_name: "material"
    }
  }
  enum_type {
    name: "CartridgeType"
    value {
      name: "UNSPECIFIED_CARTRIDGE"
      number: 0
    }
    value {
      name: "CARTRIDGE"
      number: 1
    }
    value {
      name: "BATTERY"
      number: 2
    }
    value {
      name: "KIT"
      number: 3
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "CartridgeProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 48, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 48]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [13, 7, 36]
    }
    location {
      path: [3, 2]
      span: [14, 7, 37]
    }
    location {
      path: [5, 0]
      span: [18, 0, 30, 1]
      leading_comments: " Specifies types of cartridge products that may be expressed.\n"
    }
    location {
      path: [5, 0, 1]
      span: [18, 5, 18]
    }
    location {
      path: [5, 0, 2, 0]
      span: [20, 2, 28]
      leading_comments: " Unknown, unrecognized, or otherwise unspecified cartridge type.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [20, 2, 23]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [20, 26, 27]
    }
    location {
      path: [5, 0, 2, 1]
      span: [23, 2, 16]
      leading_comments: " Specifies a lone cartridge product with no battery or other accompanying items.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [23, 2, 11]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [23, 14, 15]
    }
    location {
      path: [5, 0, 2, 2]
      span: [26, 2, 14]
      leading_comments: " Specifies a battery unit with no cartridge.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [26, 2, 9]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [26, 12, 13]
    }
    location {
      path: [5, 0, 2, 3]
      span: [29, 2, 10]
      leading_comments: " Specifies a full kit with a battery and cartridge unit.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [29, 2, 5]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [29, 8, 9]
    }
    location {
      path: [4, 0]
      span: [36, 0, 48, 1]
      leading_comments: " Specifies a vaporizor or cartridge-style product, for instance, vaporizor pens and table units. Vaporizors are\n composed of two elements: a battery, or the bottom power unit, and a cartridge, or the top fuel unit, that contains\n cannabinoids and is disposable or refillable.\n"
    }
    location {
      path: [4, 0, 1]
      span: [36, 8, 17]
    }
    location {
      path: [4, 0, 2, 0]
      span: [38, 2, 26]
      leading_comments: " Product key uniquely identifying this cartridge-style product.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [38, 2, 36, 19]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [38, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [38, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [38, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [41, 2, 25]
      leading_comments: " Type of cartridge product being described.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [41, 2, 38, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [41, 2, 15]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [41, 16, 20]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [41, 23, 24]
    }
    location {
      path: [4, 0, 2, 2]
      span: [44, 2, 37]
      leading_comments: " Product content about this cartridge item.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [44, 2, 41, 25]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [44, 2, 24]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [44, 25, 32]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [44, 35, 36]
    }
    location {
      path: [4, 0, 2, 3]
      span: [47, 2, 37]
      leading_comments: " Materials and handling information about this cartridge product.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [47, 2, 44, 37]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [47, 2, 23]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [47, 24, 32]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [47, 35, 36]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Edible.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/MaterialsData.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "EdibleIngredient"
    field {
      name: "label"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "label"
    }
    field {
      name: "amount"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      json_name: "amount"
    }
  }
  message_type {
    name: "Edible"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.EdibleType"
      json_name: "type"
    }
    field {
      name: "flags"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".products.EdibleFlag"
      json_name: "flags"
    }
    field {
      name: "product"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
    field {
      name: "material"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.MaterialsData"
      json_name: "material"
    }
    field {
      name: "ingredients"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.EdibleIngredient"
      json_name: "ingredients"
    }
  }
  enum_type {
    name: "EdibleType"
    value {
      name: "UNSPECIFIED_EDIBLE"
      number: 0
    }
    value {
      name: "CHOCOLATE"
      number: 1
    }
    value {
      name: "BAKED_GOOD"
      number: 2
    }
    value {
      name: "CANDY"
      number: 3
    }
    value {
      name: "DRINK"
      number: 4
    }
  }
  enum_type {
    name: "EdibleFlag"
    value {
      name: "NO_EDIBLE_FLAG"
      number: 0
    }
    value {
      name: "VEGAN"
      number: 1
    }
    value {
      name: "GLUTEN_FREE"
      number: 2
    }
    value {
      name: "SUGAR_FREE"
      number: 3
    }
    value {
      name: "FAIR_TRADE"
      number: 4
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "EdibleProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 85, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [13, 7, 36]
    }
    location {
      path: [3, 2]
      span: [14, 7, 37]
    }
    location {
      path: [5, 0]
      span: [18, 0, 33, 1]
      leading_comments: " Specifies types of edible products that are known and considered sub-categories of the full 'edibles' menu section.\n"
    }
    location {
      path: [5, 0, 1]
      span: [18, 5, 15]
    }
    location {
      path: [5, 0, 2, 0]
      span: [20, 2, 25]
      leading_comments: " Unknown, unrecognized, or otherwise unspecified edible type.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [20, 2, 20]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [20, 23, 24]
    }
    location {
      path: [5, 0, 2, 1]
      span: [23, 2, 16]
      leading_comments: " Specifies chocolate products, including truffles, chocolate bars, and so on.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [23, 2, 11]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [23, 14, 15]
    }
    location {
      path: [5, 0, 2, 2]
      span: [26, 2, 17]
      leading_comments: " Specifies a baked good, such as a cookie, doughnut, brownie, pie, and so on.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [26, 2, 12]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [26, 15, 16]
    }
    location {
      path: [5, 0, 2, 3]
      span: [29, 2, 12]
      leading_comments: " Specifies candy items like lollipops, lozenges, gummies, etc.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [29, 2, 7]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [29, 10, 11]
    }
    location {
      path: [5, 0, 2, 4]
      span: [32, 2, 12]
      leading_comments: " Specifies beverage products.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [32, 2, 7]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [32, 10, 11]
    }
    location {
      path: [5, 1]
      span: [37, 0, 52, 1]
      leading_comments: " Flags that may be applied specifically to an edible product.\n"
    }
    location {
      path: [5, 1, 1]
      span: [37, 5, 15]
    }
    location {
      path: [5, 1, 2, 0]
      span: [39, 2, 21]
      leading_comments: " Special default flag indicating no flags.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [39, 2, 16]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [39, 19, 20]
    }
    location {
      path: [5, 1, 2, 1]
      span: [42, 2, 12]
      leading_comments: " Flag indicating this edible product is vegan.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [42, 2, 7]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [42, 10, 11]
    }
    location {
      path: [5, 1, 2, 2]
      span: [45, 2, 18]
      leading_comments: " Flag indicating this edible product is gluten free.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [45, 2, 13]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [45, 16, 17]
    }
    location {
      path: [5, 1, 2, 3]
      span: [48, 2, 17]
      leading_comments: " Flag indicating this edible product is sugar free.\n"
    }
    location {
      path: [5, 1, 2, 3, 1]
      span: [48, 2, 12]
    }
    location {
      path: [5, 1, 2, 3, 2]
      span: [48, 15, 16]
    }
    location {
      path: [5, 1, 2, 4]
      span: [51, 2, 17]
      leading_comments: " Flag indicating this edible product is compliant with fair trade practices.\n"
    }
    location {
      path: [5, 1, 2, 4, 1]
      span: [51, 2, 12]
    }
    location {
      path: [5, 1, 2, 4, 2]
      span: [51, 15, 16]
    }
    location {
      path: [4, 0]
      span: [56, 0, 62, 1]
      leading_comments: " Specifies an ingredient included in an edible.\n"
    }
    location {
      path: [4, 0, 1]
      span: [56, 8, 24]
    }
    location {
      path: [4, 0, 2, 0]
      span: [58, 2, 19]
      leading_comments: " Human-friendly label for the ingredient.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [58, 2, 56, 26]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [58, 2, 8]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [58, 9, 14]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [58, 17, 18]
    }
    location {
      path: [4, 0, 2, 1]
      span: [61, 2, 20]
      leading_comments: " Human-friendly label describing the amount for this ingredient.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [61, 2, 58, 19]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [61, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [61, 9, 15]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [61, 18, 19]
    }
    location {
      path: [4, 1]
      span: [67, 0, 85, 1]
      leading_comments: " Specifies an edible product that may be consumed as a food or beverage, that contains cannabis or cannabinoids in\n some quantity.\n"
    }
    location {
      path: [4, 1, 1]
      span: [67, 8, 14]
    }
    location {
      path: [4, 1, 2, 0]
      span: [69, 2, 26]
      leading_comments: " Product key that uniquely identifies this edible item.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [69, 2, 67, 16]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [69, 2, 17]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [69, 18, 21]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [69, 24, 25]
    }
    location {
      path: [4, 1, 2, 1]
      span: [72, 2, 22]
      leading_comments: " Specifies the subcategory of this edible product, if known and applicable.\n"
    }
    location {
      path: [4, 1, 2, 1, 4]
      span: [72, 2, 69, 26]
    }
    location {
      path: [4, 1, 2, 1, 6]
      span: [72, 2, 12]
    }
    location {
      path: [4, 1, 2, 1, 1]
      span: [72, 13, 17]
    }
    location {
      path: [4, 1, 2, 1, 3]
      span: [72, 20, 21]
    }
    location {
      path: [4, 1, 2, 2]
      span: [75, 2, 32]
      leading_comments: " Specifies flags attached to this edible product.\n"
    }
    location {
      path: [4, 1, 2, 2, 4]
      span: [75, 2, 10]
    }
    location {
      path: [4, 1, 2, 2, 6]
      span: [75, 11, 21]
    }
    location {
      path: [4, 1, 2, 2, 1]
      span: [75, 22, 27]
    }
    location {
      path: [4, 1, 2, 2, 3]
      span: [75, 30, 31]
    }
    location {
      path: [4, 1, 2, 3]
      span: [78, 2, 37]
      leading_comments: " Product content related to/about this edible item.\n"
    }
    location {
      path: [4, 1, 2, 3, 4]
      span: [78, 2, 75, 32]
    }
    location {
      path: [4, 1, 2, 3, 6]
      span: [78, 2, 24]
    }
    location {
      path: [4, 1, 2, 3, 1]
      span: [78, 25, 32]
    }
    location {
      path: [4, 1, 2, 3, 3]
      span: [78, 35, 36]
    }
    location {
      path: [4, 1, 2, 4]
      span: [81, 2, 37]
      leading_comments: " Materials and handling information about this cartridge product.\n"
    }
    location {
      path: [4, 1, 2, 4, 4]
      span: [81, 2, 78, 37]
    }
    location {
      path: [4, 1, 2, 4, 6]
      span: [81, 2, 23]
    }
    location {
      path: [4, 1, 2, 4, 1]
      span: [81, 24, 32]
    }
    location {
      path: [4, 1, 2, 4, 3]
      span: [81, 35, 36]
    }
    location {
      path: [4, 1, 2, 5]
      span: [84, 2, 44]
      leading_comments: " Specifies the ingredients for a product, when/if it is composed of ingredients (i.e. edibles).\n"
    }
    location {
      path: [4, 1, 2, 5, 4]
      span: [84, 2, 10]
    }
    location {
      path: [4, 1, 2, 5, 6]
      span: [84, 11, 27]
    }
    location {
      path: [4, 1, 2, 5, 1]
      span: [84, 28, 39]
    }
    location {
      path: [4, 1, 2, 5, 3]
      span: [84, 42, 43]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Extract.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/MaterialsData.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "Extract"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.ExtractType"
      json_name: "type"
    }
    field {
      name: "flag"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".products.ExtractFlag"
      json_name: "flag"
    }
    field {
      name: "flower"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductReference"
      json_name: "flower"
    }
    field {
      name: "product"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
    field {
      name: "material"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.MaterialsData"
      json_name: "material"
    }
  }
  enum_type {
    name: "ExtractType"
    value {
      name: "UNSPECIFIED_EXTRACT"
      number: 0
    }
    value {
      name: "OIL"
      number: 1
    }
    value {
      name: "WAX"
      number: 2
    }
    value {
      name: "SHATTER"
      number: 3
    }
    value {
      name: "KIEF"
      number: 4
    }
    value {
      name: "HASH"
      number: 5
    }
    value {
      name: "LIVE_RESIN"
      number: 6
    }
    value {
      name: "ROSIN"
      number: 7
    }
  }
  enum_type {
    name: "ExtractFlag"
    value {
      name: "NO_EXTRACT_FLAGS"
      number: 0
    }
    value {
      name: "SOLVENTLESS"
      number: 1
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "ExtractProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 74, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [12, 7, 36]
    }
    location {
      path: [3, 2]
      span: [13, 7, 37]
    }
    location {
      path: [5, 0]
      span: [17, 0, 41, 1]
      leading_comments: " Enumerates types of extracted oleoresin cannabis products that have known/specified subcategories.\n"
    }
    location {
      path: [5, 0, 1]
      span: [17, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [19, 2, 26]
      leading_comments: " Uknown, unrecognized, or otherwise unspecified extract type.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [19, 2, 21]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [19, 24, 25]
    }
    location {
      path: [5, 0, 2, 1]
      span: [22, 2, 10]
      leading_comments: " Cannabis oil, usually in liquid form.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [22, 2, 5]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [22, 8, 9]
    }
    location {
      path: [5, 0, 2, 2]
      span: [25, 2, 10]
      leading_comments: " Cannabis wax - viscous semisolid forms of cannabis oil.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [25, 2, 5]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [25, 8, 9]
    }
    location {
      path: [5, 0, 2, 3]
      span: [28, 2, 14]
      leading_comments: " Clear, amber solid cannabis wax.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [28, 2, 9]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [28, 12, 13]
    }
    location {
      path: [5, 0, 2, 4]
      span: [31, 2, 11]
      leading_comments: " Particulate discharge from cannabis flowers that contains THC or other cannabinoids.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [31, 2, 6]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [31, 9, 10]
    }
    location {
      path: [5, 0, 2, 5]
      span: [34, 2, 11]
      leading_comments: " Fully extracted and concentrated cannabis resin.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [34, 2, 6]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [34, 9, 10]
    }
    location {
      path: [5, 0, 2, 6]
      span: [37, 2, 17]
      leading_comments: " Extracted cannabis that is kept at freezing temperatures, rather than dried.\n"
    }
    location {
      path: [5, 0, 2, 6, 1]
      span: [37, 2, 12]
    }
    location {
      path: [5, 0, 2, 6, 2]
      span: [37, 15, 16]
    }
    location {
      path: [5, 0, 2, 7]
      span: [40, 2, 12]
      leading_comments: " Heated and terpene-vaporized live resin.\n"
    }
    location {
      path: [5, 0, 2, 7, 1]
      span: [40, 2, 7]
    }
    location {
      path: [5, 0, 2, 7, 2]
      span: [40, 10, 11]
    }
    location {
      path: [5, 1]
      span: [45, 0, 51, 1]
      leading_comments: " Specifies flags that may specifically be applied to an extracted cannabis product.\n"
    }
    location {
      path: [5, 1, 1]
      span: [45, 5, 16]
    }
    location {
      path: [5, 1, 2, 0]
      span: [47, 2, 23]
      leading_comments: " Specifies that no flags are set.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [47, 2, 18]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [47, 21, 22]
    }
    location {
      path: [5, 1, 2, 1]
      span: [50, 2, 18]
      leading_comments: " Specifies that this extract was made with a solventless process.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [50, 2, 13]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [50, 16, 17]
    }
    location {
      path: [4, 0]
      span: [56, 0, 74, 1]
      leading_comments: " Specifies an extracted cannabis product, whereby cannabis plant material has been reduced to a more potent and\n concentrated form by some process.\n"
    }
    location {
      path: [4, 0, 1]
      span: [56, 8, 15]
    }
    location {
      path: [4, 0, 2, 0]
      span: [58, 2, 26]
      leading_comments: " Product key that uniquely identifies this cannabis extract item.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [58, 2, 56, 17]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [58, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [58, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [58, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [61, 2, 23]
      leading_comments: " Specific type of extract being described.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [61, 2, 58, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [61, 2, 13]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [61, 14, 18]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [61, 21, 22]
    }
    location {
      path: [4, 0, 2, 2]
      span: [64, 2, 32]
      leading_comments: " Specifies flags that may specifically be applied to this extracted cannabis item.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [64, 2, 10]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [64, 11, 22]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [64, 23, 27]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [64, 30, 31]
    }
    location {
      path: [4, 0, 2, 3]
      span: [67, 2, 35]
      leading_comments: " Flower that was used to produce this extract.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [67, 2, 64, 32]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [67, 2, 23]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [67, 24, 30]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [67, 33, 34]
    }
    location {
      path: [4, 0, 2, 4]
      span: [70, 2, 37]
      leading_comments: " Product content about this extracted cannabis item.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [70, 2, 67, 35]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [70, 2, 24]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [70, 25, 32]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [70, 35, 36]
    }
    location {
      path: [4, 0, 2, 5]
      span: [73, 2, 37]
      leading_comments: " Materials and handling data attached to this extracted cannabis item.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [73, 2, 70, 37]
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [73, 2, 23]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [73, 24, 32]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [73, 35, 36]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Flower.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/MaterialsData.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "Flower"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "product"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
    field {
      name: "material"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.MaterialsData"
      json_name: "material"
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "FlowerProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 28, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 46]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 45]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [13, 7, 36]
    }
    location {
      path: [3, 2]
      span: [14, 7, 37]
    }
    location {
      path: [4, 0]
      span: [19, 0, 28, 1]
      leading_comments: " Specifies the model for a traditional 'flower'-style product, which involves the sale or consumption of the flower\n or 'bud,' of a cannabis plant.\n"
    }
    location {
      path: [4, 0, 1]
      span: [19, 8, 14]
    }
    location {
      path: [4, 0, 2, 0]
      span: [21, 2, 26]
      leading_comments: " Key that uniquely identifies this flower product.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [21, 2, 19, 16]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [21, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [21, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [21, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [24, 2, 37]
      leading_comments: " Content about this product.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [24, 2, 21, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [24, 2, 24]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [24, 25, 32]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [24, 35, 36]
    }
    location {
      path: [4, 0, 2, 2]
      span: [27, 2, 37]
      leading_comments: " Materials and handling information about this product.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [27, 2, 24, 37]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [27, 2, 23]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [27, 24, 32]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [27, 35, 36]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Merchandise.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "Merchandise"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.MerchandiseType"
      json_name: "type"
    }
    field {
      name: "flags"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".products.MerchandiseFlag"
      json_name: "flags"
    }
    field {
      name: "product"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
  }
  enum_type {
    name: "MerchandiseType"
    value {
      name: "UNSPECIFIED_MERCHANDISE"
      number: 0
    }
    value {
      name: "CLOTHING"
      number: 1
    }
    value {
      name: "GLASSWARE"
      number: 2
    }
    value {
      name: "CONTAINER"
      number: 3
    }
    value {
      name: "LIGHTER"
      number: 4
    }
  }
  enum_type {
    name: "MerchandiseFlag"
    value {
      name: "NO_MERCHANDISE_FLAGS"
      number: 0
    }
    value {
      name: "MEDICAL_ONLY"
      number: 1
    }
    value {
      name: "BRAND_SWAG"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "MerchandiseProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 61, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 51]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 50]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [12, 7, 37]
    }
    location {
      path: [5, 0]
      span: [16, 0, 31, 1]
      leading_comments: " Specifies types of generic merchandise that may be carried on a dispensary menu.\n"
    }
    location {
      path: [5, 0, 1]
      span: [16, 5, 20]
    }
    location {
      path: [5, 0, 2, 0]
      span: [18, 2, 30]
      leading_comments: " Unknown, unrecognized, or otherwise unspecified merchandise subcategory.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [18, 2, 25]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [18, 28, 29]
    }
    location {
      path: [5, 0, 2, 1]
      span: [21, 2, 15]
      leading_comments: " Clothing - i.e. shirts, pants, hoodies, and other wearable textiles.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [21, 2, 10]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [21, 13, 14]
    }
    location {
      path: [5, 0, 2, 2]
      span: [24, 2, 16]
      leading_comments: " Cups, mugs, on up to pipes and bongs.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [24, 2, 11]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [24, 14, 15]
    }
    location {
      path: [5, 0, 2, 3]
      span: [27, 2, 16]
      leading_comments: " Containers for cannabis.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [27, 2, 11]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [27, 14, 15]
    }
    location {
      path: [5, 0, 2, 4]
      span: [30, 2, 14]
      leading_comments: " Tools to produce fire to consume cannabis.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [30, 2, 9]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [30, 12, 13]
    }
    location {
      path: [5, 1]
      span: [35, 0, 44, 1]
      leading_comments: " Flags that may be applied specifically to merchandise items.\n"
    }
    location {
      path: [5, 1, 1]
      span: [35, 5, 20]
    }
    location {
      path: [5, 1, 2, 0]
      span: [37, 2, 27]
      leading_comments: " No flags specified.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [37, 2, 22]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [37, 25, 26]
    }
    location {
      path: [5, 1, 2, 1]
      span: [40, 2, 19]
      leading_comments: " This item requires that a user have a valid medical recommendation for cannabis.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [40, 2, 14]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [40, 17, 18]
    }
    location {
      path: [5, 1, 2, 2]
      span: [43, 2, 17]
      leading_comments: " This item is branded for the partner and should be promoted as such.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [43, 2, 12]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [43, 15, 16]
    }
    location {
      path: [4, 0]
      span: [49, 0, 61, 1]
      leading_comments: " Specifies an item of merchandise, that does not contain cannabis, but is sold anyway by a dispensary, such as branded\n clothing, containers, lighters, and other random stuff.\n"
    }
    location {
      path: [4, 0, 1]
      span: [49, 8, 19]
    }
    location {
      path: [4, 0, 2, 0]
      span: [51, 2, 26]
      leading_comments: " Product key uniquely identifying this merchandise item.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [51, 2, 49, 21]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [51, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [51, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [51, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [54, 2, 27]
      leading_comments: " Sub-category for this merchandise item, if known.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [54, 2, 51, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [54, 2, 17]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [54, 18, 22]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [54, 25, 26]
    }
    location {
      path: [4, 0, 2, 2]
      span: [57, 2, 37]
      leading_comments: " Flags for this merchandise item.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [57, 2, 10]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [57, 11, 26]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [57, 27, 32]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [57, 35, 36]
    }
    location {
      path: [4, 0, 2, 3]
      span: [60, 2, 37]
      leading_comments: " Content about this merchandise item.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [60, 2, 57, 37]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [60, 2, 24]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [60, 25, 32]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [60, 35, 36]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Plant.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/MaterialsData.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "Plant"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "type"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.PlantType"
      json_name: "type"
    }
    field {
      name: "origin"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".base.ProductReference"
      json_name: "origin"
    }
    field {
      name: "product"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
    field {
      name: "material"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.MaterialsData"
      json_name: "material"
    }
  }
  enum_type {
    name: "PlantType"
    value {
      name: "UNSPECIFIED_PLANT"
      number: 0
    }
    value {
      name: "SEED"
      number: 1
    }
    value {
      name: "CLONE"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "PlantProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 45, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 45]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 44]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [12, 7, 36]
    }
    location {
      path: [3, 2]
      span: [13, 7, 37]
    }
    location {
      path: [5, 0]
      span: [17, 0, 26, 1]
      leading_comments: " Enumerates types or subcategories of plants that may be sold.\n"
    }
    location {
      path: [5, 0, 1]
      span: [17, 5, 14]
    }
    location {
      path: [5, 0, 2, 0]
      span: [19, 2, 24]
      leading_comments: " Unknown, unrecognized, or otherwise unspecified plant type.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [19, 2, 19]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [19, 22, 23]
    }
    location {
      path: [5, 0, 2, 1]
      span: [22, 2, 11]
      leading_comments: " Specifies a pack of seeds, or an individual seed.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [22, 2, 6]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [22, 9, 10]
    }
    location {
      path: [5, 0, 2, 2]
      span: [25, 2, 12]
      leading_comments: " Specifies a cloned plant that is grown to some point and then sold.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [25, 2, 7]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [25, 10, 11]
    }
    location {
      path: [4, 0]
      span: [30, 0, 45, 1]
      leading_comments: " Specifies a plant product, such as seeds, or clones, that are designed to be cultivated by the end user.\n"
    }
    location {
      path: [4, 0, 1]
      span: [30, 8, 13]
    }
    location {
      path: [4, 0, 2, 0]
      span: [32, 2, 26]
      leading_comments: " Product key uniquely identifying this cannabis plant item.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [32, 2, 30, 15]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [32, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [32, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [32, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [35, 2, 21]
      leading_comments: " Specific subcategory for this plant item.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [35, 2, 32, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [35, 2, 11]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [35, 12, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [35, 19, 20]
    }
    location {
      path: [4, 0, 2, 2]
      span: [38, 2, 44]
      leading_comments: " Menu products made from this raw plant product.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [38, 2, 10]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [38, 11, 32]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [38, 33, 39]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [38, 42, 43]
    }
    location {
      path: [4, 0, 2, 3]
      span: [41, 2, 37]
      leading_comments: " Product content attached to this cannabis plant item.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [41, 2, 38, 44]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [41, 2, 24]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [41, 25, 32]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [41, 35, 36]
    }
    location {
      path: [4, 0, 2, 4]
      span: [44, 2, 37]
      leading_comments: " Handling and materials data regarding this cannabis plant item.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [44, 2, 41, 37]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [44, 2, 23]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [44, 24, 32]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [44, 35, 36]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/Preroll.proto"
  package: "products"
  dependency: "base/ProductKey.proto"
  dependency: "content/MaterialsData.proto"
  dependency: "content/ProductContent.proto"
  message_type {
    name: "Preroll"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
    field {
      name: "flower"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductReference"
      json_name: "flower"
    }
    field {
      name: "length"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "length"
    }
    field {
      name: "thickness"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_DOUBLE
      json_name: "thickness"
    }
    field {
      name: "flags"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".products.PrerollFlag"
      json_name: "flags"
    }
    field {
      name: "product"
      number: 6
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.ProductContent"
      json_name: "product"
    }
    field {
      name: "material"
      number: 7
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".content.MaterialsData"
      json_name: "material"
    }
  }
  enum_type {
    name: "PrerollFlag"
    value {
      name: "NO_PREROLL_FLAGS"
      number: 0
    }
    value {
      name: "HASH_INFUSED"
      number: 1
    }
    value {
      name: "KIEF_INFUSED"
      number: 2
    }
    value {
      name: "FORTIFIED"
      number: 3
    }
    value {
      name: "FULL_FLOWER"
      number: 4
    }
    value {
      name: "CONTAINS_TOBACCO"
      number: 5
    }
  }
  options {
    java_package: "io.bloombox.schema.product"
    java_outer_classname: "PrerollProduct"
    optimize_for: SPEED
    java_multiple_files: false
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 63, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 51]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 50]
    }
    location {
      path: [8]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 35]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 34]
    }
    location {
      path: [8]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 47]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 46]
    }
    location {
      path: [3, 0]
      span: [11, 7, 30]
    }
    location {
      path: [3, 1]
      span: [13, 7, 36]
    }
    location {
      path: [3, 2]
      span: [14, 7, 37]
    }
    location {
      path: [5, 0]
      span: [18, 0, 37, 1]
      leading_comments: " Specifies flags that may be specifically applied to pre-rolled cannabis products.\n"
    }
    location {
      path: [5, 0, 1]
      span: [18, 5, 16]
    }
    location {
      path: [5, 0, 2, 0]
      span: [20, 2, 23]
      leading_comments: " Specifies that no flags are set.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [20, 2, 18]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [20, 21, 22]
    }
    location {
      path: [5, 0, 2, 1]
      span: [23, 2, 19]
      leading_comments: " Specifies that this pre-rolled item is hash-infused.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [23, 2, 14]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [23, 17, 18]
    }
    location {
      path: [5, 0, 2, 2]
      span: [26, 2, 19]
      leading_comments: " Specifies that this pre-rolled item is kief-infused.\n"
    }
    location {
      path: [5, 0, 2, 2, 1]
      span: [26, 2, 14]
    }
    location {
      path: [5, 0, 2, 2, 2]
      span: [26, 17, 18]
    }
    location {
      path: [5, 0, 2, 3]
      span: [29, 2, 16]
      leading_comments: " Specifies that this pre-rolled item is fortified with extracted cannabis products in some manner.\n"
    }
    location {
      path: [5, 0, 2, 3, 1]
      span: [29, 2, 11]
    }
    location {
      path: [5, 0, 2, 3, 2]
      span: [29, 14, 15]
    }
    location {
      path: [5, 0, 2, 4]
      span: [33, 2, 18]
      leading_comments: " Specifies that this pre-rolled item is rolled with \"full flower\" buds, rather than trimmings, or other discarded\n cannabis from other production processes.\n"
    }
    location {
      path: [5, 0, 2, 4, 1]
      span: [33, 2, 13]
    }
    location {
      path: [5, 0, 2, 4, 2]
      span: [33, 16, 17]
    }
    location {
      path: [5, 0, 2, 5]
      span: [36, 2, 23]
      leading_comments: " Specifies that this product contains tobacco.\n"
    }
    location {
      path: [5, 0, 2, 5, 1]
      span: [36, 2, 18]
    }
    location {
      path: [5, 0, 2, 5, 2]
      span: [36, 21, 22]
    }
    location {
      path: [4, 0]
      span: [42, 0, 63, 1]
      leading_comments: " Specifies a pre-rolled cannabis product, where a production process consumes cannabis plant material and produces\n end-products that are already rolled into joints, marijuana cigarettes, blunts, and so on.\n"
    }
    location {
      path: [4, 0, 1]
      span: [42, 8, 15]
    }
    location {
      path: [4, 0, 2, 0]
      span: [44, 2, 26]
      leading_comments: " Product key that uniquely identifies this pre-rolled cannabis product.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [44, 2, 42, 17]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [44, 2, 17]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [44, 18, 21]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [44, 24, 25]
    }
    location {
      path: [4, 0, 2, 1]
      span: [47, 2, 35]
      leading_comments: " Specifies the flowers used to produce this product, if known.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [47, 2, 44, 26]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [47, 2, 23]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [47, 24, 30]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [47, 33, 34]
    }
    location {
      path: [4, 0, 2, 2]
      span: [50, 2, 20]
      leading_comments: " Specifies the measured length of this prerolled item, if known.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [50, 2, 47, 35]
    }
    location {
      path: [4, 0, 2, 2, 5]
      span: [50, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [50, 9, 15]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [50, 18, 19]
    }
    location {
      path: [4, 0, 2, 3]
      span: [53, 2, 23]
      leading_comments: " Specifies the measured thickness of this prerolled item, if known.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [53, 2, 50, 20]
    }
    location {
      path: [4, 0, 2, 3, 5]
      span: [53, 2, 8]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [53, 9, 18]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [53, 21, 22]
    }
    location {
      path: [4, 0, 2, 4]
      span: [56, 2, 33]
      leading_comments: " Specifies flags that may be applied specifically to this prerolled item.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [56, 2, 10]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [56, 11, 22]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [56, 23, 28]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [56, 31, 32]
    }
    location {
      path: [4, 0, 2, 5]
      span: [59, 2, 37]
      leading_comments: " Specifies product content attached to this prerolled item.\n"
    }
    location {
      path: [4, 0, 2, 5, 4]
      span: [59, 2, 56, 33]
    }
    location {
      path: [4, 0, 2, 5, 6]
      span: [59, 2, 24]
    }
    location {
      path: [4, 0, 2, 5, 1]
      span: [59, 25, 32]
    }
    location {
      path: [4, 0, 2, 5, 3]
      span: [59, 35, 36]
    }
    location {
      path: [4, 0, 2, 6]
      span: [62, 2, 37]
      leading_comments: " Specifies handling and materials data associated with this prerolled item.\n"
    }
    location {
      path: [4, 0, 2, 6, 4]
      span: [62, 2, 59, 37]
    }
    location {
      path: [4, 0, 2, 6, 6]
      span: [62, 2, 23]
    }
    location {
      path: [4, 0, 2, 6, 1]
      span: [62, 24, 32]
    }
    location {
      path: [4, 0, 2, 6, 3]
      span: [62, 35, 36]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "products/menu/Menu.proto"
  package: "products.menu"
  dependency: "base/ProductKey.proto"
  dependency: "temporal/Instant.proto"
  dependency: "products/menu/Section.proto"
  dependency: "partner/PartnerLocation.proto"
  dependency: "products/Apothecary.proto"
  dependency: "products/Cartridge.proto"
  dependency: "products/Edible.proto"
  dependency: "products/Extract.proto"
  dependency: "products/Flower.proto"
  dependency: "products/Merchandise.proto"
  dependency: "products/Plant.proto"
  dependency: "products/Preroll.proto"
  message_type {
    name: "Metadata"
    field {
      name: "location"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".partner.PartnerLocation"
      json_name: "location"
    }
    field {
      name: "version"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_UINT64
      json_name: "version"
    }
    field {
      name: "status"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_ENUM
      type_name: ".products.menu.Status"
      json_name: "status"
    }
    field {
      name: "flags"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_ENUM
      type_name: ".products.menu.Flag"
      json_name: "flags"
    }
    field {
      name: "published"
      number: 5
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "published"
    }
  }
  message_type {
    name: "MenuProduct"
    field {
      name: "key"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".base.ProductKey"
      json_name: "key"
    }
  }
  message_type {
    name: "SectionData"
    field {
      name: "count"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "count"
    }
    field {
      name: "section"
      number: 2
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.section.SectionSpec"
      json_name: "section"
    }
    field {
      name: "product"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.MenuProduct"
      json_name: "product"
    }
  }
  message_type {
    name: "SectionedMenu"
    field {
      name: "count"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_INT32
      json_name: "count"
    }
    field {
      name: "payload"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.SectionData"
      json_name: "payload"
    }
  }
  message_type {
    name: "StaticMenu"
    field {
      name: "apothecary"
      number: 1
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.ApothecaryEntry"
      json_name: "apothecary"
    }
    field {
      name: "cartridges"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.CartridgesEntry"
      json_name: "cartridges"
    }
    field {
      name: "edibles"
      number: 3
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.EdiblesEntry"
      json_name: "edibles"
    }
    field {
      name: "extracts"
      number: 4
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.ExtractsEntry"
      json_name: "extracts"
    }
    field {
      name: "flowers"
      number: 5
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.FlowersEntry"
      json_name: "flowers"
    }
    field {
      name: "merchandise"
      number: 6
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.MerchandiseEntry"
      json_name: "merchandise"
    }
    field {
      name: "plants"
      number: 7
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.PlantsEntry"
      json_name: "plants"
    }
    field {
      name: "prerolls"
      number: 8
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu.PrerollsEntry"
      json_name: "prerolls"
    }
    nested_type {
      name: "ApothecaryEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Apothecary"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "CartridgesEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Cartridge"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "EdiblesEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Edible"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "ExtractsEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Extract"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "FlowersEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Flower"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "MerchandiseEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Merchandise"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "PlantsEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Plant"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
    nested_type {
      name: "PrerollsEntry"
      field {
        name: "key"
        number: 1
        label: LABEL_OPTIONAL
        type: TYPE_STRING
        json_name: "key"
      }
      field {
        name: "value"
        number: 2
        label: LABEL_OPTIONAL
        type: TYPE_MESSAGE
        type_name: ".products.Preroll"
        json_name: "value"
      }
      options {
        map_entry: true
      }
    }
  }
  message_type {
    name: "Menu"
    field {
      name: "metadata"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.Metadata"
      json_name: "metadata"
    }
    field {
      name: "payload"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.SectionedMenu"
      oneof_index: 0
      json_name: "payload"
    }
    field {
      name: "menu"
      number: 4
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".products.menu.StaticMenu"
      oneof_index: 0
      json_name: "menu"
    }
    oneof_decl {
      name: "content"
    }
  }
  enum_type {
    name: "Status"
    value {
      name: "UNPUBLISHED"
      number: 0
    }
    value {
      name: "LIVE"
      number: 1
    }
  }
  enum_type {
    name: "Flag"
    value {
      name: "DRAFT"
      number: 0
    }
    value {
      name: "PRIVATE"
      number: 1
    }
    value {
      name: "OUT_OF_DATE"
      number: 2
    }
  }
  options {
    java_package: "io.bloombox.schema.menu"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 139, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 21]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 48]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 48]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 47]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [3, 0]
      span: [9, 7, 30]
    }
    location {
      path: [3, 1]
      span: [10, 7, 31]
    }
    location {
      path: [3, 2]
      span: [11, 7, 36]
    }
    location {
      path: [3, 3]
      span: [12, 7, 38]
    }
    location {
      path: [3, 4]
      span: [14, 7, 34]
    }
    location {
      path: [3, 5]
      span: [15, 7, 33]
    }
    location {
      path: [3, 6]
      span: [16, 7, 30]
    }
    location {
      path: [3, 7]
      span: [17, 7, 31]
    }
    location {
      path: [3, 8]
      span: [18, 7, 30]
    }
    location {
      path: [3, 9]
      span: [19, 7, 35]
    }
    location {
      path: [3, 10]
      span: [20, 7, 29]
    }
    location {
      path: [3, 11]
      span: [21, 7, 31]
    }
    location {
      path: [5, 0]
      span: [25, 0, 31, 1]
      leading_comments: " Enumerates statuses a menu may assume.\n"
    }
    location {
      path: [5, 0, 1]
      span: [25, 5, 11]
    }
    location {
      path: [5, 0, 2, 0]
      span: [27, 2, 18]
      leading_comments: " Indicates that a menu revision is not yet published.\n"
    }
    location {
      path: [5, 0, 2, 0, 1]
      span: [27, 2, 13]
    }
    location {
      path: [5, 0, 2, 0, 2]
      span: [27, 16, 17]
    }
    location {
      path: [5, 0, 2, 1]
      span: [30, 2, 11]
      leading_comments: " Indicates that a menu revision has been published and is considered live.\n"
    }
    location {
      path: [5, 0, 2, 1, 1]
      span: [30, 2, 6]
    }
    location {
      path: [5, 0, 2, 1, 2]
      span: [30, 9, 10]
    }
    location {
      path: [5, 1]
      span: [35, 0, 44, 1]
      leading_comments: " Enumerates flags that can be set on a menu.\n"
    }
    location {
      path: [5, 1, 1]
      span: [35, 5, 9]
    }
    location {
      path: [5, 1, 2, 0]
      span: [37, 2, 12]
      leading_comments: " Indicates that this entire menu is considered a draft.\n"
    }
    location {
      path: [5, 1, 2, 0, 1]
      span: [37, 2, 7]
    }
    location {
      path: [5, 1, 2, 0, 2]
      span: [37, 10, 11]
    }
    location {
      path: [5, 1, 2, 1]
      span: [40, 2, 14]
      leading_comments: " Indicates that the underlying menu data is currently private and should not be exposed publicly.\n"
    }
    location {
      path: [5, 1, 2, 1, 1]
      span: [40, 2, 9]
    }
    location {
      path: [5, 1, 2, 1, 2]
      span: [40, 12, 13]
    }
    location {
      path: [5, 1, 2, 2]
      span: [43, 2, 18]
      leading_comments: " Indicates that the underlying menu data is known to be out-of-date.\n"
    }
    location {
      path: [5, 1, 2, 2, 1]
      span: [43, 2, 13]
    }
    location {
      path: [5, 1, 2, 2, 2]
      span: [43, 16, 17]
    }
    location {
      path: [4, 0]
      span: [48, 0, 63, 1]
      leading_comments: " Specifies metadata for a package of menu data.\n"
    }
    location {
      path: [4, 0, 1]
      span: [48, 8, 16]
    }
    location {
      path: [4, 0, 2, 0]
      span: [50, 2, 39]
      leading_comments: " Partner location that owns this menu data.\n"
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [50, 2, 48, 18]
    }
    location {
      path: [4, 0, 2, 0, 6]
      span: [50, 2, 25]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [50, 26, 34]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [50, 37, 38]
    }
    location {
      path: [4, 0, 2, 1]
      span: [53, 2, 21]
      leading_comments: " Version number, or publish timestamp, of this data.\n"
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [53, 2, 50, 39]
    }
    location {
      path: [4, 0, 2, 1, 5]
      span: [53, 2, 8]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [53, 9, 16]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [53, 19, 20]
    }
    location {
      path: [4, 0, 2, 2]
      span: [56, 2, 20]
      leading_comments: " Status of this menu data.\n"
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [56, 2, 53, 21]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [56, 2, 8]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [56, 9, 15]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [56, 18, 19]
    }
    location {
      path: [4, 0, 2, 3]
      span: [59, 2, 26]
      leading_comments: " Flags attached to this menu data.\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [59, 2, 10]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [59, 11, 15]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [59, 16, 21]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [59, 24, 25]
    }
    location {
      path: [4, 0, 2, 4]
      span: [62, 2, 33]
      leading_comments: " When this menu data was published.\n"
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [62, 2, 59, 26]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [62, 2, 18]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [62, 19, 28]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [62, 31, 32]
    }
    location {
      path: [4, 1]
      span: [67, 0, 70, 1]
      leading_comments: " Menu product payload stanza. Specifies a single product as a member of a menu section.\n"
    }
    location {
      path: [4, 1, 1]
      span: [67, 8, 19]
    }
    location {
      path: [4, 1, 2, 0]
      span: [69, 2, 26]
      leading_comments: " Section that this data is attached to.\n"
    }
    location {
      path: [4, 1, 2, 0, 4]
      span: [69, 2, 67, 21]
    }
    location {
      path: [4, 1, 2, 0, 6]
      span: [69, 2, 17]
    }
    location {
      path: [4, 1, 2, 0, 1]
      span: [69, 18, 21]
    }
    location {
      path: [4, 1, 2, 0, 3]
      span: [69, 24, 25]
    }
    location {
      path: [4, 2]
      span: [74, 0, 83, 1]
      leading_comments: " Specifies an inner menu payload which contains menu data for a given menu section.\n"
    }
    location {
      path: [4, 2, 1]
      span: [74, 8, 19]
    }
    location {
      path: [4, 2, 2, 0]
      span: [76, 2, 18]
      leading_comments: " Count of products included in this menu section data.\n"
    }
    location {
      path: [4, 2, 2, 0, 4]
      span: [76, 2, 74, 21]
    }
    location {
      path: [4, 2, 2, 0, 5]
      span: [76, 2, 7]
    }
    location {
      path: [4, 2, 2, 0, 1]
      span: [76, 8, 13]
    }
    location {
      path: [4, 2, 2, 0, 3]
      span: [76, 16, 17]
    }
    location {
      path: [4, 2, 2, 1]
      span: [79, 2, 48]
      leading_comments: " Section that this data is attached to.\n"
    }
    location {
      path: [4, 2, 2, 1, 4]
      span: [79, 2, 76, 18]
    }
    location {
      path: [4, 2, 2, 1, 6]
      span: [79, 2, 35]
    }
    location {
      path: [4, 2, 2, 1, 1]
      span: [79, 36, 43]
    }
    location {
      path: [4, 2, 2, 1, 3]
      span: [79, 46, 47]
    }
    location {
      path: [4, 2, 2, 2]
      span: [82, 2, 35]
      leading_comments: " Menu products attached to this section.\n"
    }
    location {
      path: [4, 2, 2, 2, 4]
      span: [82, 2, 10]
    }
    location {
      path: [4, 2, 2, 2, 6]
      span: [82, 11, 22]
    }
    location {
      path: [4, 2, 2, 2, 1]
      span: [82, 23, 30]
    }
    location {
      path: [4, 2, 2, 2, 3]
      span: [82, 33, 34]
    }
    location {
      path: [4, 3]
      span: [87, 0, 93, 1]
      leading_comments: " Specifies a menu split into section-level chunks.\n"
    }
    location {
      path: [4, 3, 1]
      span: [87, 8, 21]
    }
    location {
      path: [4, 3, 2, 0]
      span: [89, 2, 18]
      leading_comments: " Count of all products included in this menu, all sections considered.\n"
    }
    location {
      path: [4, 3, 2, 0, 4]
      span: [89, 2, 87, 23]
    }
    location {
      path: [4, 3, 2, 0, 5]
      span: [89, 2, 7]
    }
    location {
      path: [4, 3, 2, 0, 1]
      span: [89, 8, 13]
    }
    location {
      path: [4, 3, 2, 0, 3]
      span: [89, 16, 17]
    }
    location {
      path: [4, 3, 2, 1]
      span: [92, 2, 35]
      leading_comments: " Specifies a payload of sectioned menu data.\n"
    }
    location {
      path: [4, 3, 2, 1, 4]
      span: [92, 2, 10]
    }
    location {
      path: [4, 3, 2, 1, 6]
      span: [92, 11, 22]
    }
    location {
      path: [4, 3, 2, 1, 1]
      span: [92, 23, 30]
    }
    location {
      path: [4, 3, 2, 1, 3]
      span: [92, 33, 34]
    }
    location {
      path: [4, 4]
      span: [98, 0, 122, 1]
      leading_comments: " Specifies an inner menu payload which contains mapped data, where each map key is a section name, lowercased, and\n each map value is itself a product, and each map is addressed at a typed property name.\n"
    }
    location {
      path: [4, 4, 1]
      span: [98, 8, 18]
    }
    location {
      path: [4, 4, 2, 0]
      span: [100, 2, 50]
      leading_comments: " Specifies APOTHECARY products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 0, 4]
      span: [100, 2, 98, 20]
    }
    location {
      path: [4, 4, 2, 0, 6]
      span: [100, 2, 34]
    }
    location {
      path: [4, 4, 2, 0, 1]
      span: [100, 35, 45]
    }
    location {
      path: [4, 4, 2, 0, 3]
      span: [100, 48, 49]
    }
    location {
      path: [4, 4, 2, 1]
      span: [103, 2, 49]
      leading_comments: " Specifies CARTRIDGE products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 1, 4]
      span: [103, 2, 100, 50]
    }
    location {
      path: [4, 4, 2, 1, 6]
      span: [103, 2, 33]
    }
    location {
      path: [4, 4, 2, 1, 1]
      span: [103, 34, 44]
    }
    location {
      path: [4, 4, 2, 1, 3]
      span: [103, 47, 48]
    }
    location {
      path: [4, 4, 2, 2]
      span: [106, 2, 43]
      leading_comments: " Specifies EDIBLE products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 2, 4]
      span: [106, 2, 103, 49]
    }
    location {
      path: [4, 4, 2, 2, 6]
      span: [106, 2, 30]
    }
    location {
      path: [4, 4, 2, 2, 1]
      span: [106, 31, 38]
    }
    location {
      path: [4, 4, 2, 2, 3]
      span: [106, 41, 42]
    }
    location {
      path: [4, 4, 2, 3]
      span: [109, 2, 45]
      leading_comments: " Specifies EXTRACT products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 3, 4]
      span: [109, 2, 106, 43]
    }
    location {
      path: [4, 4, 2, 3, 6]
      span: [109, 2, 31]
    }
    location {
      path: [4, 4, 2, 3, 1]
      span: [109, 32, 40]
    }
    location {
      path: [4, 4, 2, 3, 3]
      span: [109, 43, 44]
    }
    location {
      path: [4, 4, 2, 4]
      span: [112, 2, 43]
      leading_comments: " Specifies FLOWER products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 4, 4]
      span: [112, 2, 109, 45]
    }
    location {
      path: [4, 4, 2, 4, 6]
      span: [112, 2, 30]
    }
    location {
      path: [4, 4, 2, 4, 1]
      span: [112, 31, 38]
    }
    location {
      path: [4, 4, 2, 4, 3]
      span: [112, 41, 42]
    }
    location {
      path: [4, 4, 2, 5]
      span: [115, 2, 52]
      leading_comments: " Specifies MERCHANDISE products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 5, 4]
      span: [115, 2, 112, 43]
    }
    location {
      path: [4, 4, 2, 5, 6]
      span: [115, 2, 35]
    }
    location {
      path: [4, 4, 2, 5, 1]
      span: [115, 36, 47]
    }
    location {
      path: [4, 4, 2, 5, 3]
      span: [115, 50, 51]
    }
    location {
      path: [4, 4, 2, 6]
      span: [118, 2, 41]
      leading_comments: " Specifies PLANT products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 6, 4]
      span: [118, 2, 115, 52]
    }
    location {
      path: [4, 4, 2, 6, 6]
      span: [118, 2, 29]
    }
    location {
      path: [4, 4, 2, 6, 1]
      span: [118, 30, 36]
    }
    location {
      path: [4, 4, 2, 6, 3]
      span: [118, 39, 40]
    }
    location {
      path: [4, 4, 2, 7]
      span: [121, 2, 45]
      leading_comments: " Specifies PREROLL products attached to this menu.\n"
    }
    location {
      path: [4, 4, 2, 7, 4]
      span: [121, 2, 118, 41]
    }
    location {
      path: [4, 4, 2, 7, 6]
      span: [121, 2, 31]
    }
    location {
      path: [4, 4, 2, 7, 1]
      span: [121, 32, 40]
    }
    location {
      path: [4, 4, 2, 7, 3]
      span: [121, 43, 44]
    }
    location {
      path: [4, 5]
      span: [127, 0, 139, 1]
      leading_comments: " Holds a full specification for a revision of menu data, segmented into sections, by the categories member products\n are filed in. Categories are enumerated in `menu.Section`.\n"
    }
    location {
      path: [4, 5, 1]
      span: [127, 8, 12]
    }
    location {
      path: [4, 5, 2, 0]
      span: [129, 2, 24]
      leading_comments: " Metadata for the menu.\n"
    }
    location {
      path: [4, 5, 2, 0, 4]
      span: [129, 2, 127, 14]
    }
    location {
      path: [4, 5, 2, 0, 6]
      span: [129, 2, 10]
    }
    location {
      path: [4, 5, 2, 0, 1]
      span: [129, 11, 19]
    }
    location {
      path: [4, 5, 2, 0, 3]
      span: [129, 22, 23]
    }
    location {
      path: [4, 5, 8, 0]
      span: [132, 2, 138, 3]
      leading_comments: " Specifies menu content, either in repeated section data, or with a static map.\n"
    }
    location {
      path: [4, 5, 8, 0, 1]
      span: [132, 8, 15]
    }
    location {
      path: [4, 5, 2, 1]
      span: [134, 4, 30]
      leading_comments: " Data payloads attached to this menu.\n"
    }
    location {
      path: [4, 5, 2, 1, 6]
      span: [134, 4, 17]
    }
    location {
      path: [4, 5, 2, 1, 1]
      span: [134, 18, 25]
    }
    location {
      path: [4, 5, 2, 1, 3]
      span: [134, 28, 29]
    }
    location {
      path: [4, 5, 2, 2]
      span: [137, 4, 24]
      leading_comments: " Specifies a static menu, where each section is specified as a typed map, with keys mapped to products.\n"
    }
    location {
      path: [4, 5, 2, 2, 6]
      span: [137, 4, 14]
    }
    location {
      path: [4, 5, 2, 2, 1]
      span: [137, 15, 19]
    }
    location {
      path: [4, 5, 2, 2, 3]
      span: [137, 22, 23]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "structs/labtesting/BasicTestResults.proto"
  package: "structs.labtesting"
  dependency: "temporal/Instant.proto"
  dependency: "structs/labtesting/TestValue.proto"
  dependency: "structs/labtesting/TestResults.proto"
  message_type {
    name: "BasicTestResults"
    field {
      name: "available"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_BOOL
      json_name: "available"
    }
    field {
      name: "media"
      number: 2
      label: LABEL_REPEATED
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.TestMedia"
      json_name: "media"
    }
    field {
      name: "last_updated"
      number: 3
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".temporal.Instant"
      json_name: "lastUpdated"
    }
    field {
      name: "cannabinoids"
      number: 20
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Cannabinoids"
      json_name: "cannabinoids"
    }
    field {
      name: "subjective"
      number: 30
      label: LABEL_OPTIONAL
      type: TYPE_MESSAGE
      type_name: ".structs.labtesting.Subjective"
      json_name: "subjective"
    }
  }
  options {
    java_package: "io.bloombox.schema.product.struct.testing"
    java_outer_classname: "BasicTestingSpec"
    optimize_for: SPEED
    java_multiple_files: true
    cc_enable_arenas: true
  }
  source_code_info {
    location {
      span: [1, 0, 26, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 26]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 31]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 23]
    }
    location {
      path: [8, 999, 1, 3]
      span: [6, 26, 30]
    }
    location {
      path: [8]
      span: [7, 0, 66]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 66]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 19]
    }
    location {
      path: [8, 999, 2, 7]
      span: [7, 22, 65]
    }
    location {
      path: [8]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3]
      span: [8, 0, 34]
    }
    location {
      path: [8, 999, 3, 2]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 2, 0, 1]
      span: [8, 7, 26]
    }
    location {
      path: [8, 999, 3, 3]
      span: [8, 29, 33]
    }
    location {
      path: [8]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4]
      span: [9, 0, 49]
    }
    location {
      path: [8, 999, 4, 2]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 2, 0, 1]
      span: [9, 7, 27]
    }
    location {
      path: [8, 999, 4, 7]
      span: [9, 30, 48]
    }
    location {
      path: [3, 0]
      span: [11, 7, 31]
    }
    location {
      path: [3, 1]
      span: [13, 7, 43]
    }
    location {
      path: [3, 2]
      span: [14, 7, 45]
    }
    location {
      path: [4, 0]
      span: [18, 0, 26, 1]
      leading_comments: " -- Testing: Basic Protocol\n"
    }
    location {
      path: [4, 0, 1]
      span: [18, 8, 24]
    }
    location {
      path: [4, 0, 2, 0]
      span: [19, 2, 21]
    }
    location {
      path: [4, 0, 2, 0, 4]
      span: [19, 2, 18, 26]
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [19, 2, 6]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [19, 7, 16]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [19, 19, 20]
    }
    location {
      path: [4, 0, 2, 1]
      span: [20, 2, 50]
    }
    location {
      path: [4, 0, 2, 1, 4]
      span: [20, 2, 10]
    }
    location {
      path: [4, 0, 2, 1, 6]
      span: [20, 11, 39]
    }
    location {
      path: [4, 0, 2, 1, 1]
      span: [20, 40, 45]
    }
    location {
      path: [4, 0, 2, 1, 3]
      span: [20, 48, 49]
    }
    location {
      path: [4, 0, 2, 2]
      span: [21, 2, 36]
    }
    location {
      path: [4, 0, 2, 2, 4]
      span: [21, 2, 20, 50]
    }
    location {
      path: [4, 0, 2, 2, 6]
      span: [21, 2, 18]
    }
    location {
      path: [4, 0, 2, 2, 1]
      span: [21, 19, 31]
    }
    location {
      path: [4, 0, 2, 2, 3]
      span: [21, 34, 35]
    }
    location {
      path: [4, 0, 2, 3]
      span: [24, 2, 33]
      leading_comments: " --- Cannabinoids + Subjective\n"
    }
    location {
      path: [4, 0, 2, 3, 4]
      span: [24, 2, 21, 36]
    }
    location {
      path: [4, 0, 2, 3, 6]
      span: [24, 2, 14]
    }
    location {
      path: [4, 0, 2, 3, 1]
      span: [24, 15, 27]
    }
    location {
      path: [4, 0, 2, 3, 3]
      span: [24, 30, 32]
    }
    location {
      path: [4, 0, 2, 4]
      span: [25, 2, 29]
    }
    location {
      path: [4, 0, 2, 4, 4]
      span: [25, 2, 24, 33]
    }
    location {
      path: [4, 0, 2, 4, 6]
      span: [25, 2, 12]
    }
    location {
      path: [4, 0, 2, 4, 1]
      span: [25, 13, 23]
    }
    location {
      path: [4, 0, 2, 4, 3]
      span: [25, 26, 28]
    }
  }
  syntax: "proto3"
}
proto_file {
  name: "temporal/Time.proto"
  package: "temporal"
  message_type {
    name: "Time"
    field {
      name: "iso8601"
      number: 1
      label: LABEL_OPTIONAL
      type: TYPE_STRING
      oneof_index: 0
      json_name: "iso8601"
    }
    oneof_decl {
      name: "spec"
    }
  }
  options {
    java_package: "io.bloombox.schema.temporal"
    optimize_for: SPEED
    java_multiple_files: true
  }
  source_code_info {
    location {
      span: [1, 0, 17, 1]
    }
    location {
      path: [12]
      span: [1, 0, 18]
    }
    location {
      path: [2]
      span: [3, 8, 16]
    }
    location {
      path: [8]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0]
      span: [5, 0, 28]
    }
    location {
      path: [8, 999, 0, 2]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 2, 0, 1]
      span: [5, 7, 19]
    }
    location {
      path: [8, 999, 0, 3]
      span: [5, 22, 27]
    }
    location {
      path: [8]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1]
      span: [6, 0, 52]
    }
    location {
      path: [8, 999, 1, 2]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 2, 0, 1]
      span: [6, 7, 19]
    }
    location {
      path: [8, 999, 1, 7]
      span: [6, 22, 51]
    }
    location {
      path: [8]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2]
      span: [7, 0, 34]
    }
    location {
      path: [8, 999, 2, 2]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 2, 0, 1]
      span: [7, 7, 26]
    }
    location {
      path: [8, 999, 2, 3]
      span: [7, 29, 33]
    }
    location {
      path: [4, 0]
      span: [11, 0, 17, 1]
      leading_comments: " Specifies a particular time of day.\n"
    }
    location {
      path: [4, 0, 1]
      span: [11, 8, 12]
    }
    location {
      path: [4, 0, 8, 0]
      span: [13, 2, 16, 3]
      leading_comments: " Time specification option.\n"
    }
    location {
      path: [4, 0, 8, 0, 1]
      span: [13, 8, 12]
    }
    location {
      path: [4, 0, 2, 0]
      span: [15, 4, 23]
      leading_comments: " ISO8601 time format.\n"
    }
    location {
      path: [4, 0, 2, 0, 5]
      span: [15, 4, 10]
    }
    location {
      path: [4, 0, 2, 0, 1]
      span: [15, 11, 18]
    }
    location {
      path: [4, 0, 2, 0, 3]
      span: [15, 21, 22]
    }
  }
  syntax: "proto3"
}
