// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: protoc-gen-swagger/options/openapiv2.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// `Swagger` is a representation of OpenAPI v2 specification's Swagger object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#swaggerObject
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_Swagger: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Swagger"

  public var swagger: String {
    get {return _storage._swagger}
    set {_uniqueStorage()._swagger = newValue}
  }

  public var info: Grpc_Gateway_ProtocGenSwagger_Options_Info {
    get {return _storage._info ?? Grpc_Gateway_ProtocGenSwagger_Options_Info()}
    set {_uniqueStorage()._info = newValue}
  }
  /// Returns true if `info` has been explicitly set.
  public var hasInfo: Bool {return _storage._info != nil}
  /// Clears the value of `info`. Subsequent reads from it will return its default value.
  public mutating func clearInfo() {_storage._info = nil}

  public var host: String {
    get {return _storage._host}
    set {_uniqueStorage()._host = newValue}
  }

  public var basePath: String {
    get {return _storage._basePath}
    set {_uniqueStorage()._basePath = newValue}
  }

  public var schemes: [Grpc_Gateway_ProtocGenSwagger_Options_Swagger.SwaggerScheme] {
    get {return _storage._schemes}
    set {_uniqueStorage()._schemes = newValue}
  }

  public var consumes: [String] {
    get {return _storage._consumes}
    set {_uniqueStorage()._consumes = newValue}
  }

  public var produces: [String] {
    get {return _storage._produces}
    set {_uniqueStorage()._produces = newValue}
  }

  public var securityDefinitions: Grpc_Gateway_ProtocGenSwagger_Options_SecurityDefinitions {
    get {return _storage._securityDefinitions ?? Grpc_Gateway_ProtocGenSwagger_Options_SecurityDefinitions()}
    set {_uniqueStorage()._securityDefinitions = newValue}
  }
  /// Returns true if `securityDefinitions` has been explicitly set.
  public var hasSecurityDefinitions: Bool {return _storage._securityDefinitions != nil}
  /// Clears the value of `securityDefinitions`. Subsequent reads from it will return its default value.
  public mutating func clearSecurityDefinitions() {_storage._securityDefinitions = nil}

  public var security: [Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement] {
    get {return _storage._security}
    set {_uniqueStorage()._security = newValue}
  }

  public var externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation {
    get {return _storage._externalDocs ?? Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  /// Returns true if `externalDocs` has been explicitly set.
  public var hasExternalDocs: Bool {return _storage._externalDocs != nil}
  /// Clears the value of `externalDocs`. Subsequent reads from it will return its default value.
  public mutating func clearExternalDocs() {_storage._externalDocs = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum SwaggerScheme: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unknown // = 0
    case http // = 1
    case https // = 2
    case ws // = 3
    case wss // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .unknown
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unknown
      case 1: self = .http
      case 2: self = .https
      case 3: self = .ws
      case 4: self = .wss
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unknown: return 0
      case .http: return 1
      case .https: return 2
      case .ws: return 3
      case .wss: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._swagger)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._info)
        case 3: try decoder.decodeSingularStringField(value: &_storage._host)
        case 4: try decoder.decodeSingularStringField(value: &_storage._basePath)
        case 5: try decoder.decodeRepeatedEnumField(value: &_storage._schemes)
        case 6: try decoder.decodeRepeatedStringField(value: &_storage._consumes)
        case 7: try decoder.decodeRepeatedStringField(value: &_storage._produces)
        case 11: try decoder.decodeSingularMessageField(value: &_storage._securityDefinitions)
        case 12: try decoder.decodeRepeatedMessageField(value: &_storage._security)
        case 14: try decoder.decodeSingularMessageField(value: &_storage._externalDocs)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._swagger.isEmpty {
        try visitor.visitSingularStringField(value: _storage._swagger, fieldNumber: 1)
      }
      if let v = _storage._info {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if !_storage._host.isEmpty {
        try visitor.visitSingularStringField(value: _storage._host, fieldNumber: 3)
      }
      if !_storage._basePath.isEmpty {
        try visitor.visitSingularStringField(value: _storage._basePath, fieldNumber: 4)
      }
      if !_storage._schemes.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._schemes, fieldNumber: 5)
      }
      if !_storage._consumes.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._consumes, fieldNumber: 6)
      }
      if !_storage._produces.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._produces, fieldNumber: 7)
      }
      if let v = _storage._securityDefinitions {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 11)
      }
      if !_storage._security.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._security, fieldNumber: 12)
      }
      if let v = _storage._externalDocs {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 14)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// `Operation` is a representation of OpenAPI v2 specification's Operation object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#operationObject
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_Operation: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Operation"

  public var tags: [String] {
    get {return _storage._tags}
    set {_uniqueStorage()._tags = newValue}
  }

  public var summary: String {
    get {return _storage._summary}
    set {_uniqueStorage()._summary = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation {
    get {return _storage._externalDocs ?? Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  /// Returns true if `externalDocs` has been explicitly set.
  public var hasExternalDocs: Bool {return _storage._externalDocs != nil}
  /// Clears the value of `externalDocs`. Subsequent reads from it will return its default value.
  public mutating func clearExternalDocs() {_storage._externalDocs = nil}

  public var operationID: String {
    get {return _storage._operationID}
    set {_uniqueStorage()._operationID = newValue}
  }

  public var consumes: [String] {
    get {return _storage._consumes}
    set {_uniqueStorage()._consumes = newValue}
  }

  public var produces: [String] {
    get {return _storage._produces}
    set {_uniqueStorage()._produces = newValue}
  }

  public var schemes: [String] {
    get {return _storage._schemes}
    set {_uniqueStorage()._schemes = newValue}
  }

  public var deprecated: Bool {
    get {return _storage._deprecated}
    set {_uniqueStorage()._deprecated = newValue}
  }

  public var security: [Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement] {
    get {return _storage._security}
    set {_uniqueStorage()._security = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedStringField(value: &_storage._tags)
        case 2: try decoder.decodeSingularStringField(value: &_storage._summary)
        case 3: try decoder.decodeSingularStringField(value: &_storage._description_p)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._externalDocs)
        case 5: try decoder.decodeSingularStringField(value: &_storage._operationID)
        case 6: try decoder.decodeRepeatedStringField(value: &_storage._consumes)
        case 7: try decoder.decodeRepeatedStringField(value: &_storage._produces)
        case 10: try decoder.decodeRepeatedStringField(value: &_storage._schemes)
        case 11: try decoder.decodeSingularBoolField(value: &_storage._deprecated)
        case 12: try decoder.decodeRepeatedMessageField(value: &_storage._security)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._tags.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._tags, fieldNumber: 1)
      }
      if !_storage._summary.isEmpty {
        try visitor.visitSingularStringField(value: _storage._summary, fieldNumber: 2)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 3)
      }
      if let v = _storage._externalDocs {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if !_storage._operationID.isEmpty {
        try visitor.visitSingularStringField(value: _storage._operationID, fieldNumber: 5)
      }
      if !_storage._consumes.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._consumes, fieldNumber: 6)
      }
      if !_storage._produces.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._produces, fieldNumber: 7)
      }
      if !_storage._schemes.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._schemes, fieldNumber: 10)
      }
      if _storage._deprecated != false {
        try visitor.visitSingularBoolField(value: _storage._deprecated, fieldNumber: 11)
      }
      if !_storage._security.isEmpty {
        try visitor.visitRepeatedMessageField(value: _storage._security, fieldNumber: 12)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// `Info` is a representation of OpenAPI v2 specification's Info object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#infoObject
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_Info: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Info"

  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var termsOfService: String {
    get {return _storage._termsOfService}
    set {_uniqueStorage()._termsOfService = newValue}
  }

  public var contact: Grpc_Gateway_ProtocGenSwagger_Options_Contact {
    get {return _storage._contact ?? Grpc_Gateway_ProtocGenSwagger_Options_Contact()}
    set {_uniqueStorage()._contact = newValue}
  }
  /// Returns true if `contact` has been explicitly set.
  public var hasContact: Bool {return _storage._contact != nil}
  /// Clears the value of `contact`. Subsequent reads from it will return its default value.
  public mutating func clearContact() {_storage._contact = nil}

  public var version: String {
    get {return _storage._version}
    set {_uniqueStorage()._version = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularStringField(value: &_storage._title)
        case 2: try decoder.decodeSingularStringField(value: &_storage._description_p)
        case 3: try decoder.decodeSingularStringField(value: &_storage._termsOfService)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._contact)
        case 6: try decoder.decodeSingularStringField(value: &_storage._version)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 1)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 2)
      }
      if !_storage._termsOfService.isEmpty {
        try visitor.visitSingularStringField(value: _storage._termsOfService, fieldNumber: 3)
      }
      if let v = _storage._contact {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if !_storage._version.isEmpty {
        try visitor.visitSingularStringField(value: _storage._version, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// `Contact` is a representation of OpenAPI v2 specification's Contact object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#contactObject
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_Contact: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Contact"

  public var name: String = String()

  public var url: String = String()

  public var email: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.name)
      case 2: try decoder.decodeSingularStringField(value: &self.url)
      case 3: try decoder.decodeSingularStringField(value: &self.email)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.name.isEmpty {
      try visitor.visitSingularStringField(value: self.name, fieldNumber: 1)
    }
    if !self.url.isEmpty {
      try visitor.visitSingularStringField(value: self.url, fieldNumber: 2)
    }
    if !self.email.isEmpty {
      try visitor.visitSingularStringField(value: self.email, fieldNumber: 3)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// `ExternalDocumentation` is a representation of OpenAPI v2 specification's
/// ExternalDocumentation object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#externalDocumentationObject
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".ExternalDocumentation"

  public var description_p: String = String()

  public var url: String = String()

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularStringField(value: &self.description_p)
      case 2: try decoder.decodeSingularStringField(value: &self.url)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.description_p.isEmpty {
      try visitor.visitSingularStringField(value: self.description_p, fieldNumber: 1)
    }
    if !self.url.isEmpty {
      try visitor.visitSingularStringField(value: self.url, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// `Schema` is a representation of OpenAPI v2 specification's Schema object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_Schema: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Schema"

  public var jsonSchema: Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema {
    get {return _storage._jsonSchema ?? Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema()}
    set {_uniqueStorage()._jsonSchema = newValue}
  }
  /// Returns true if `jsonSchema` has been explicitly set.
  public var hasJsonSchema: Bool {return _storage._jsonSchema != nil}
  /// Clears the value of `jsonSchema`. Subsequent reads from it will return its default value.
  public mutating func clearJsonSchema() {_storage._jsonSchema = nil}

  public var discriminator: String {
    get {return _storage._discriminator}
    set {_uniqueStorage()._discriminator = newValue}
  }

  public var readOnly: Bool {
    get {return _storage._readOnly}
    set {_uniqueStorage()._readOnly = newValue}
  }

  public var externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation {
    get {return _storage._externalDocs ?? Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  /// Returns true if `externalDocs` has been explicitly set.
  public var hasExternalDocs: Bool {return _storage._externalDocs != nil}
  /// Clears the value of `externalDocs`. Subsequent reads from it will return its default value.
  public mutating func clearExternalDocs() {_storage._externalDocs = nil}

  public var example: SwiftProtobuf.Google_Protobuf_Any {
    get {return _storage._example ?? SwiftProtobuf.Google_Protobuf_Any()}
    set {_uniqueStorage()._example = newValue}
  }
  /// Returns true if `example` has been explicitly set.
  public var hasExample: Bool {return _storage._example != nil}
  /// Clears the value of `example`. Subsequent reads from it will return its default value.
  public mutating func clearExample() {_storage._example = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._jsonSchema)
        case 2: try decoder.decodeSingularStringField(value: &_storage._discriminator)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._readOnly)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._externalDocs)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._example)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._jsonSchema {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if !_storage._discriminator.isEmpty {
        try visitor.visitSingularStringField(value: _storage._discriminator, fieldNumber: 2)
      }
      if _storage._readOnly != false {
        try visitor.visitSingularBoolField(value: _storage._readOnly, fieldNumber: 3)
      }
      if let v = _storage._externalDocs {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._example {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// `JSONSchema` represents properties from JSON Schema taken, and as used, in
/// the OpenAPI v2 spec.
///
/// This includes changes made by OpenAPI v2.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject
///
/// See also: https://cswr.github.io/JsonSchema/spec/basic_types/,
/// https://github.com/json-schema-org/json-schema-spec/blob/master/schema.json
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".JSONSchema"

  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var `default`: String {
    get {return _storage._default}
    set {_uniqueStorage()._default = newValue}
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: UInt64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: UInt64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: UInt64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: UInt64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var maxProperties: UInt64 {
    get {return _storage._maxProperties}
    set {_uniqueStorage()._maxProperties = newValue}
  }

  public var minProperties: UInt64 {
    get {return _storage._minProperties}
    set {_uniqueStorage()._minProperties = newValue}
  }

  public var required: [String] {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  /// Items in 'array' must be unique.
  public var array: [String] {
    get {return _storage._array}
    set {_uniqueStorage()._array = newValue}
  }

  public var type: [Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema.JSONSchemaSimpleTypes] {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum JSONSchemaSimpleTypes: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case unknown // = 0
    case array // = 1
    case boolean // = 2
    case integer // = 3
    case null // = 4
    case number // = 5
    case object // = 6
    case string // = 7
    case UNRECOGNIZED(Int)

    public init() {
      self = .unknown
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .unknown
      case 1: self = .array
      case 2: self = .boolean
      case 3: self = .integer
      case 4: self = .null
      case 5: self = .number
      case 6: self = .object
      case 7: self = .string
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .unknown: return 0
      case .array: return 1
      case .boolean: return 2
      case .integer: return 3
      case .null: return 4
      case .number: return 5
      case .object: return 6
      case .string: return 7
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 5: try decoder.decodeSingularStringField(value: &_storage._title)
        case 6: try decoder.decodeSingularStringField(value: &_storage._description_p)
        case 7: try decoder.decodeSingularStringField(value: &_storage._default)
        case 10: try decoder.decodeSingularDoubleField(value: &_storage._multipleOf)
        case 11: try decoder.decodeSingularDoubleField(value: &_storage._maximum)
        case 12: try decoder.decodeSingularBoolField(value: &_storage._exclusiveMaximum)
        case 13: try decoder.decodeSingularDoubleField(value: &_storage._minimum)
        case 14: try decoder.decodeSingularBoolField(value: &_storage._exclusiveMinimum)
        case 15: try decoder.decodeSingularUInt64Field(value: &_storage._maxLength)
        case 16: try decoder.decodeSingularUInt64Field(value: &_storage._minLength)
        case 17: try decoder.decodeSingularStringField(value: &_storage._pattern)
        case 20: try decoder.decodeSingularUInt64Field(value: &_storage._maxItems)
        case 21: try decoder.decodeSingularUInt64Field(value: &_storage._minItems)
        case 22: try decoder.decodeSingularBoolField(value: &_storage._uniqueItems)
        case 24: try decoder.decodeSingularUInt64Field(value: &_storage._maxProperties)
        case 25: try decoder.decodeSingularUInt64Field(value: &_storage._minProperties)
        case 26: try decoder.decodeRepeatedStringField(value: &_storage._required)
        case 34: try decoder.decodeRepeatedStringField(value: &_storage._array)
        case 35: try decoder.decodeRepeatedEnumField(value: &_storage._type)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._title.isEmpty {
        try visitor.visitSingularStringField(value: _storage._title, fieldNumber: 5)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 6)
      }
      if !_storage._default.isEmpty {
        try visitor.visitSingularStringField(value: _storage._default, fieldNumber: 7)
      }
      if _storage._multipleOf != 0 {
        try visitor.visitSingularDoubleField(value: _storage._multipleOf, fieldNumber: 10)
      }
      if _storage._maximum != 0 {
        try visitor.visitSingularDoubleField(value: _storage._maximum, fieldNumber: 11)
      }
      if _storage._exclusiveMaximum != false {
        try visitor.visitSingularBoolField(value: _storage._exclusiveMaximum, fieldNumber: 12)
      }
      if _storage._minimum != 0 {
        try visitor.visitSingularDoubleField(value: _storage._minimum, fieldNumber: 13)
      }
      if _storage._exclusiveMinimum != false {
        try visitor.visitSingularBoolField(value: _storage._exclusiveMinimum, fieldNumber: 14)
      }
      if _storage._maxLength != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._maxLength, fieldNumber: 15)
      }
      if _storage._minLength != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._minLength, fieldNumber: 16)
      }
      if !_storage._pattern.isEmpty {
        try visitor.visitSingularStringField(value: _storage._pattern, fieldNumber: 17)
      }
      if _storage._maxItems != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._maxItems, fieldNumber: 20)
      }
      if _storage._minItems != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._minItems, fieldNumber: 21)
      }
      if _storage._uniqueItems != false {
        try visitor.visitSingularBoolField(value: _storage._uniqueItems, fieldNumber: 22)
      }
      if _storage._maxProperties != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._maxProperties, fieldNumber: 24)
      }
      if _storage._minProperties != 0 {
        try visitor.visitSingularUInt64Field(value: _storage._minProperties, fieldNumber: 25)
      }
      if !_storage._required.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._required, fieldNumber: 26)
      }
      if !_storage._array.isEmpty {
        try visitor.visitRepeatedStringField(value: _storage._array, fieldNumber: 34)
      }
      if !_storage._type.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._type, fieldNumber: 35)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// `Tag` is a representation of OpenAPI v2 specification's Tag object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#tagObject
///
/// TODO(ivucica): document fields
public struct Grpc_Gateway_ProtocGenSwagger_Options_Tag: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Tag"

  /// TODO(ivucica): Description should be extracted from comments on the proto
  /// service object.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation {
    get {return _storage._externalDocs ?? Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  /// Returns true if `externalDocs` has been explicitly set.
  public var hasExternalDocs: Bool {return _storage._externalDocs != nil}
  /// Clears the value of `externalDocs`. Subsequent reads from it will return its default value.
  public mutating func clearExternalDocs() {_storage._externalDocs = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 2: try decoder.decodeSingularStringField(value: &_storage._description_p)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._externalDocs)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 2)
      }
      if let v = _storage._externalDocs {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// `SecurityDefinitions` is a representation of OpenAPI v2 specification's
/// Security Definitions object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityDefinitionsObject
///
/// A declaration of the security schemes available to be used in the
/// specification. This does not enforce the security schemes on the operations
/// and only serves to provide the relevant details for each scheme.
public struct Grpc_Gateway_ProtocGenSwagger_Options_SecurityDefinitions: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SecurityDefinitions"

  /// A single security scheme definition, mapping a "name" to the scheme it defines.
  public var security: Dictionary<String,Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme> = [:]

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme>.self, value: &self.security)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.security.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme>.self, value: self.security, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// `SecurityScheme` is a representation of OpenAPI v2 specification's
/// Security Scheme object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securitySchemeObject
///
/// Allows the definition of a security scheme that can be used by the
/// operations. Supported schemes are basic authentication, an API key (either as
/// a header or as a query parameter) and OAuth2's common flows (implicit,
/// password, application and access code).
public struct Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SecurityScheme"

  /// Required. The type of the security scheme. Valid values are "basic",
  /// "apiKey" or "oauth2".
  public var type: Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.TypeEnum {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  /// A short description for security scheme.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  /// Required. The name of the header or query parameter to be used.
  ///
  /// Valid for apiKey.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  /// Required. The location of the API key. Valid values are "query" or "header".
  ///
  /// Valid for apiKey.
  public var `in`: Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.In {
    get {return _storage._in}
    set {_uniqueStorage()._in = newValue}
  }

  /// Required. The flow used by the OAuth2 security scheme. Valid values are
  /// "implicit", "password", "application" or "accessCode".
  ///
  /// Valid for oauth2.
  public var flow: Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.Flow {
    get {return _storage._flow}
    set {_uniqueStorage()._flow = newValue}
  }

  /// Required. The authorization URL to be used for this flow. This SHOULD be in
  /// the form of a URL.
  ///
  /// Valid for oauth2/implicit and oauth2/accessCode.
  public var authorizationURL: String {
    get {return _storage._authorizationURL}
    set {_uniqueStorage()._authorizationURL = newValue}
  }

  /// Required. The token URL to be used for this flow. This SHOULD be in the
  /// form of a URL.
  ///
  /// Valid for oauth2/password, oauth2/application and oauth2/accessCode.
  public var tokenURL: String {
    get {return _storage._tokenURL}
    set {_uniqueStorage()._tokenURL = newValue}
  }

  /// Required. The available scopes for the OAuth2 security scheme.
  ///
  /// Valid for oauth2.
  public var scopes: Grpc_Gateway_ProtocGenSwagger_Options_Scopes {
    get {return _storage._scopes ?? Grpc_Gateway_ProtocGenSwagger_Options_Scopes()}
    set {_uniqueStorage()._scopes = newValue}
  }
  /// Returns true if `scopes` has been explicitly set.
  public var hasScopes: Bool {return _storage._scopes != nil}
  /// Clears the value of `scopes`. Subsequent reads from it will return its default value.
  public mutating func clearScopes() {_storage._scopes = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// Required. The type of the security scheme. Valid values are "basic",
  /// "apiKey" or "oauth2".
  public enum TypeEnum: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case invalid // = 0
    case basic // = 1
    case apiKey // = 2
    case oauth2 // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .invalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .invalid
      case 1: self = .basic
      case 2: self = .apiKey
      case 3: self = .oauth2
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .invalid: return 0
      case .basic: return 1
      case .apiKey: return 2
      case .oauth2: return 3
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  /// Required. The location of the API key. Valid values are "query" or "header".
  public enum In: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case invalid // = 0
    case query // = 1
    case header // = 2
    case UNRECOGNIZED(Int)

    public init() {
      self = .invalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .invalid
      case 1: self = .query
      case 2: self = .header
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .invalid: return 0
      case .query: return 1
      case .header: return 2
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  /// Required. The flow used by the OAuth2 security scheme. Valid values are
  /// "implicit", "password", "application" or "accessCode".
  public enum Flow: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case invalid // = 0
    case implicit // = 1
    case password // = 2
    case application // = 3
    case accessCode // = 4
    case UNRECOGNIZED(Int)

    public init() {
      self = .invalid
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0: self = .invalid
      case 1: self = .implicit
      case 2: self = .password
      case 3: self = .application
      case 4: self = .accessCode
      default: self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .invalid: return 0
      case .implicit: return 1
      case .password: return 2
      case .application: return 3
      case .accessCode: return 4
      case .UNRECOGNIZED(let i): return i
      }
    }

  }

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._type)
        case 2: try decoder.decodeSingularStringField(value: &_storage._description_p)
        case 3: try decoder.decodeSingularStringField(value: &_storage._name)
        case 4: try decoder.decodeSingularEnumField(value: &_storage._in)
        case 5: try decoder.decodeSingularEnumField(value: &_storage._flow)
        case 6: try decoder.decodeSingularStringField(value: &_storage._authorizationURL)
        case 7: try decoder.decodeSingularStringField(value: &_storage._tokenURL)
        case 8: try decoder.decodeSingularMessageField(value: &_storage._scopes)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._type != .invalid {
        try visitor.visitSingularEnumField(value: _storage._type, fieldNumber: 1)
      }
      if !_storage._description_p.isEmpty {
        try visitor.visitSingularStringField(value: _storage._description_p, fieldNumber: 2)
      }
      if !_storage._name.isEmpty {
        try visitor.visitSingularStringField(value: _storage._name, fieldNumber: 3)
      }
      if _storage._in != .invalid {
        try visitor.visitSingularEnumField(value: _storage._in, fieldNumber: 4)
      }
      if _storage._flow != .invalid {
        try visitor.visitSingularEnumField(value: _storage._flow, fieldNumber: 5)
      }
      if !_storage._authorizationURL.isEmpty {
        try visitor.visitSingularStringField(value: _storage._authorizationURL, fieldNumber: 6)
      }
      if !_storage._tokenURL.isEmpty {
        try visitor.visitSingularStringField(value: _storage._tokenURL, fieldNumber: 7)
      }
      if let v = _storage._scopes {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 8)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// `SecurityRequirement` is a representation of OpenAPI v2 specification's
/// Security Requirement object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityRequirementObject
///
/// Lists the required security schemes to execute this operation. The object can
/// have multiple security schemes declared in it which are all required (that
/// is, there is a logical AND between the schemes).
///
/// The name used for each property MUST correspond to a security scheme
/// declared in the Security Definitions.
public struct Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".SecurityRequirement"

  /// Each name must correspond to a security scheme which is declared in
  /// the Security Definitions. If the security scheme is of type "oauth2",
  /// then the value is a list of scope names required for the execution.
  /// For other security scheme types, the array MUST be empty.
  public var securityRequirement: Dictionary<String,Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement.SecurityRequirementValue> = [:]

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  /// If the security scheme is of type "oauth2", then the value is a list of
  /// scope names required for the execution. For other security scheme types,
  /// the array MUST be empty.
  public struct SecurityRequirementValue: SwiftProtobuf.Message {
    public static let protoMessageName: String = Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement.protoMessageName + ".SecurityRequirementValue"

    public var scope: [String] = []

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public init() {}

    /// Used by the decoding initializers in the SwiftProtobuf library, not generally
    /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
    /// initializers are defined in the SwiftProtobuf library. See the Message and
    /// Message+*Additions` files.
    public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedStringField(value: &self.scope)
        default: break
        }
      }
    }

    /// Used by the encoding methods of the SwiftProtobuf library, not generally
    /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
    /// other serializer methods are defined in the SwiftProtobuf library. See the
    /// `Message` and `Message+*Additions` files.
    public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
      if !self.scope.isEmpty {
        try visitor.visitRepeatedStringField(value: self.scope, fieldNumber: 1)
      }
      try unknownFields.traverse(visitor: &visitor)
    }
  }

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement.SecurityRequirementValue>.self, value: &self.securityRequirement)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.securityRequirement.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement.SecurityRequirementValue>.self, value: self.securityRequirement, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

/// `Scopes` is a representation of OpenAPI v2 specification's Scopes object.
///
/// See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#scopesObject
///
/// Lists the available scopes for an OAuth2 security scheme.
public struct Grpc_Gateway_ProtocGenSwagger_Options_Scopes: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".Scopes"

  /// Maps between a name of a scope to a short description of it (as the value
  /// of the property).
  public var scope: Dictionary<String,String> = [:]

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: &self.scope)
      default: break
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.scope.isEmpty {
      try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMap<SwiftProtobuf.ProtobufString,SwiftProtobuf.ProtobufString>.self, value: self.scope, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "grpc.gateway.protoc_gen_swagger.options"

extension Grpc_Gateway_ProtocGenSwagger_Options_Swagger: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "swagger"),
    2: .same(proto: "info"),
    3: .same(proto: "host"),
    4: .standard(proto: "base_path"),
    5: .same(proto: "schemes"),
    6: .same(proto: "consumes"),
    7: .same(proto: "produces"),
    11: .standard(proto: "security_definitions"),
    12: .same(proto: "security"),
    14: .standard(proto: "external_docs"),
  ]

  fileprivate class _StorageClass {
    var _swagger: String = String()
    var _info: Grpc_Gateway_ProtocGenSwagger_Options_Info? = nil
    var _host: String = String()
    var _basePath: String = String()
    var _schemes: [Grpc_Gateway_ProtocGenSwagger_Options_Swagger.SwaggerScheme] = []
    var _consumes: [String] = []
    var _produces: [String] = []
    var _securityDefinitions: Grpc_Gateway_ProtocGenSwagger_Options_SecurityDefinitions? = nil
    var _security: [Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement] = []
    var _externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _swagger = source._swagger
      _info = source._info
      _host = source._host
      _basePath = source._basePath
      _schemes = source._schemes
      _consumes = source._consumes
      _produces = source._produces
      _securityDefinitions = source._securityDefinitions
      _security = source._security
      _externalDocs = source._externalDocs
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_Swagger) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._swagger != other_storage._swagger {return false}
        if _storage._info != other_storage._info {return false}
        if _storage._host != other_storage._host {return false}
        if _storage._basePath != other_storage._basePath {return false}
        if _storage._schemes != other_storage._schemes {return false}
        if _storage._consumes != other_storage._consumes {return false}
        if _storage._produces != other_storage._produces {return false}
        if _storage._securityDefinitions != other_storage._securityDefinitions {return false}
        if _storage._security != other_storage._security {return false}
        if _storage._externalDocs != other_storage._externalDocs {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_Swagger.SwaggerScheme: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN"),
    1: .same(proto: "HTTP"),
    2: .same(proto: "HTTPS"),
    3: .same(proto: "WS"),
    4: .same(proto: "WSS"),
  ]
}

extension Grpc_Gateway_ProtocGenSwagger_Options_Operation: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tags"),
    2: .same(proto: "summary"),
    3: .same(proto: "description"),
    4: .standard(proto: "external_docs"),
    5: .standard(proto: "operation_id"),
    6: .same(proto: "consumes"),
    7: .same(proto: "produces"),
    10: .same(proto: "schemes"),
    11: .same(proto: "deprecated"),
    12: .same(proto: "security"),
  ]

  fileprivate class _StorageClass {
    var _tags: [String] = []
    var _summary: String = String()
    var _description_p: String = String()
    var _externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation? = nil
    var _operationID: String = String()
    var _consumes: [String] = []
    var _produces: [String] = []
    var _schemes: [String] = []
    var _deprecated: Bool = false
    var _security: [Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tags = source._tags
      _summary = source._summary
      _description_p = source._description_p
      _externalDocs = source._externalDocs
      _operationID = source._operationID
      _consumes = source._consumes
      _produces = source._produces
      _schemes = source._schemes
      _deprecated = source._deprecated
      _security = source._security
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_Operation) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._tags != other_storage._tags {return false}
        if _storage._summary != other_storage._summary {return false}
        if _storage._description_p != other_storage._description_p {return false}
        if _storage._externalDocs != other_storage._externalDocs {return false}
        if _storage._operationID != other_storage._operationID {return false}
        if _storage._consumes != other_storage._consumes {return false}
        if _storage._produces != other_storage._produces {return false}
        if _storage._schemes != other_storage._schemes {return false}
        if _storage._deprecated != other_storage._deprecated {return false}
        if _storage._security != other_storage._security {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_Info: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "title"),
    2: .same(proto: "description"),
    3: .standard(proto: "terms_of_service"),
    4: .same(proto: "contact"),
    6: .same(proto: "version"),
  ]

  fileprivate class _StorageClass {
    var _title: String = String()
    var _description_p: String = String()
    var _termsOfService: String = String()
    var _contact: Grpc_Gateway_ProtocGenSwagger_Options_Contact? = nil
    var _version: String = String()

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _title = source._title
      _description_p = source._description_p
      _termsOfService = source._termsOfService
      _contact = source._contact
      _version = source._version
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_Info) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._title != other_storage._title {return false}
        if _storage._description_p != other_storage._description_p {return false}
        if _storage._termsOfService != other_storage._termsOfService {return false}
        if _storage._contact != other_storage._contact {return false}
        if _storage._version != other_storage._version {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_Contact: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "name"),
    2: .same(proto: "url"),
    3: .same(proto: "email"),
  ]

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_Contact) -> Bool {
    if self.name != other.name {return false}
    if self.url != other.url {return false}
    if self.email != other.email {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "description"),
    2: .same(proto: "url"),
  ]

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation) -> Bool {
    if self.description_p != other.description_p {return false}
    if self.url != other.url {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_Schema: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "json_schema"),
    2: .same(proto: "discriminator"),
    3: .standard(proto: "read_only"),
    5: .standard(proto: "external_docs"),
    6: .same(proto: "example"),
  ]

  fileprivate class _StorageClass {
    var _jsonSchema: Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema? = nil
    var _discriminator: String = String()
    var _readOnly: Bool = false
    var _externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation? = nil
    var _example: SwiftProtobuf.Google_Protobuf_Any? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _jsonSchema = source._jsonSchema
      _discriminator = source._discriminator
      _readOnly = source._readOnly
      _externalDocs = source._externalDocs
      _example = source._example
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_Schema) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._jsonSchema != other_storage._jsonSchema {return false}
        if _storage._discriminator != other_storage._discriminator {return false}
        if _storage._readOnly != other_storage._readOnly {return false}
        if _storage._externalDocs != other_storage._externalDocs {return false}
        if _storage._example != other_storage._example {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    5: .same(proto: "title"),
    6: .same(proto: "description"),
    7: .same(proto: "default"),
    10: .standard(proto: "multiple_of"),
    11: .same(proto: "maximum"),
    12: .standard(proto: "exclusive_maximum"),
    13: .same(proto: "minimum"),
    14: .standard(proto: "exclusive_minimum"),
    15: .standard(proto: "max_length"),
    16: .standard(proto: "min_length"),
    17: .same(proto: "pattern"),
    20: .standard(proto: "max_items"),
    21: .standard(proto: "min_items"),
    22: .standard(proto: "unique_items"),
    24: .standard(proto: "max_properties"),
    25: .standard(proto: "min_properties"),
    26: .same(proto: "required"),
    34: .same(proto: "array"),
    35: .same(proto: "type"),
  ]

  fileprivate class _StorageClass {
    var _title: String = String()
    var _description_p: String = String()
    var _default: String = String()
    var _multipleOf: Double = 0
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: UInt64 = 0
    var _minLength: UInt64 = 0
    var _pattern: String = String()
    var _maxItems: UInt64 = 0
    var _minItems: UInt64 = 0
    var _uniqueItems: Bool = false
    var _maxProperties: UInt64 = 0
    var _minProperties: UInt64 = 0
    var _required: [String] = []
    var _array: [String] = []
    var _type: [Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema.JSONSchemaSimpleTypes] = []

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _title = source._title
      _description_p = source._description_p
      _default = source._default
      _multipleOf = source._multipleOf
      _maximum = source._maximum
      _exclusiveMaximum = source._exclusiveMaximum
      _minimum = source._minimum
      _exclusiveMinimum = source._exclusiveMinimum
      _maxLength = source._maxLength
      _minLength = source._minLength
      _pattern = source._pattern
      _maxItems = source._maxItems
      _minItems = source._minItems
      _uniqueItems = source._uniqueItems
      _maxProperties = source._maxProperties
      _minProperties = source._minProperties
      _required = source._required
      _array = source._array
      _type = source._type
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._title != other_storage._title {return false}
        if _storage._description_p != other_storage._description_p {return false}
        if _storage._default != other_storage._default {return false}
        if _storage._multipleOf != other_storage._multipleOf {return false}
        if _storage._maximum != other_storage._maximum {return false}
        if _storage._exclusiveMaximum != other_storage._exclusiveMaximum {return false}
        if _storage._minimum != other_storage._minimum {return false}
        if _storage._exclusiveMinimum != other_storage._exclusiveMinimum {return false}
        if _storage._maxLength != other_storage._maxLength {return false}
        if _storage._minLength != other_storage._minLength {return false}
        if _storage._pattern != other_storage._pattern {return false}
        if _storage._maxItems != other_storage._maxItems {return false}
        if _storage._minItems != other_storage._minItems {return false}
        if _storage._uniqueItems != other_storage._uniqueItems {return false}
        if _storage._maxProperties != other_storage._maxProperties {return false}
        if _storage._minProperties != other_storage._minProperties {return false}
        if _storage._required != other_storage._required {return false}
        if _storage._array != other_storage._array {return false}
        if _storage._type != other_storage._type {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_JSONSchema.JSONSchemaSimpleTypes: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "UNKNOWN"),
    1: .same(proto: "ARRAY"),
    2: .same(proto: "BOOLEAN"),
    3: .same(proto: "INTEGER"),
    4: .same(proto: "NULL"),
    5: .same(proto: "NUMBER"),
    6: .same(proto: "OBJECT"),
    7: .same(proto: "STRING"),
  ]
}

extension Grpc_Gateway_ProtocGenSwagger_Options_Tag: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    2: .same(proto: "description"),
    3: .standard(proto: "external_docs"),
  ]

  fileprivate class _StorageClass {
    var _description_p: String = String()
    var _externalDocs: Grpc_Gateway_ProtocGenSwagger_Options_ExternalDocumentation? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _description_p = source._description_p
      _externalDocs = source._externalDocs
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_Tag) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._description_p != other_storage._description_p {return false}
        if _storage._externalDocs != other_storage._externalDocs {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_SecurityDefinitions: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "security"),
  ]

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_SecurityDefinitions) -> Bool {
    if self.security != other.security {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "type"),
    2: .same(proto: "description"),
    3: .same(proto: "name"),
    4: .same(proto: "in"),
    5: .same(proto: "flow"),
    6: .standard(proto: "authorization_url"),
    7: .standard(proto: "token_url"),
    8: .same(proto: "scopes"),
  ]

  fileprivate class _StorageClass {
    var _type: Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.TypeEnum = .invalid
    var _description_p: String = String()
    var _name: String = String()
    var _in: Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.In = .invalid
    var _flow: Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.Flow = .invalid
    var _authorizationURL: String = String()
    var _tokenURL: String = String()
    var _scopes: Grpc_Gateway_ProtocGenSwagger_Options_Scopes? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _type = source._type
      _description_p = source._description_p
      _name = source._name
      _in = source._in
      _flow = source._flow
      _authorizationURL = source._authorizationURL
      _tokenURL = source._tokenURL
      _scopes = source._scopes
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._type != other_storage._type {return false}
        if _storage._description_p != other_storage._description_p {return false}
        if _storage._name != other_storage._name {return false}
        if _storage._in != other_storage._in {return false}
        if _storage._flow != other_storage._flow {return false}
        if _storage._authorizationURL != other_storage._authorizationURL {return false}
        if _storage._tokenURL != other_storage._tokenURL {return false}
        if _storage._scopes != other_storage._scopes {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "TYPE_INVALID"),
    1: .same(proto: "TYPE_BASIC"),
    2: .same(proto: "TYPE_API_KEY"),
    3: .same(proto: "TYPE_OAUTH2"),
  ]
}

extension Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.In: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "IN_INVALID"),
    1: .same(proto: "IN_QUERY"),
    2: .same(proto: "IN_HEADER"),
  ]
}

extension Grpc_Gateway_ProtocGenSwagger_Options_SecurityScheme.Flow: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "FLOW_INVALID"),
    1: .same(proto: "FLOW_IMPLICIT"),
    2: .same(proto: "FLOW_PASSWORD"),
    3: .same(proto: "FLOW_APPLICATION"),
    4: .same(proto: "FLOW_ACCESS_CODE"),
  ]
}

extension Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .standard(proto: "security_requirement"),
  ]

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement) -> Bool {
    if self.securityRequirement != other.securityRequirement {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement.SecurityRequirementValue: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "scope"),
  ]

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_SecurityRequirement.SecurityRequirementValue) -> Bool {
    if self.scope != other.scope {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Grpc_Gateway_ProtocGenSwagger_Options_Scopes: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "scope"),
  ]

  public func _protobuf_generated_isEqualTo(other: Grpc_Gateway_ProtocGenSwagger_Options_Scopes) -> Bool {
    if self.scope != other.scope {return false}
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
