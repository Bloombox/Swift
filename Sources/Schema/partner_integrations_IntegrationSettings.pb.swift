// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: partner/integrations/IntegrationSettings.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

/// Enumerates all known Bloombox integration partners.
public enum Bloombox_Schema_Partner_Integrations_IntegrationPartner: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// Internal applications and integrations.
  case `internal` // = 0

  /// Salsify - https://www.salsify.com/
  case salsify // = 1

  /// Keen IO - https://keen.io/
  case keen // = 2

  /// Greenbits - https://www.greenbits.com/
  case greenbits // = 3

  /// MailChimp - https://www.mailchimp.com/
  case mailchimp // = 4

  /// Twilio - https://www.twilio.com/
  case twilio // = 5

  /// OnFleet - https://www.onfleet.com/
  case onfleet // = 6

  /// Google GSuite - https://admin.google.com/
  case gsuite // = 7
  case UNRECOGNIZED(Int)

  public init() {
    self = .internal
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .internal
    case 1: self = .salsify
    case 2: self = .keen
    case 3: self = .greenbits
    case 4: self = .mailchimp
    case 5: self = .twilio
    case 6: self = .onfleet
    case 7: self = .gsuite
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .internal: return 0
    case .salsify: return 1
    case .keen: return 2
    case .greenbits: return 3
    case .mailchimp: return 4
    case .twilio: return 5
    case .onfleet: return 6
    case .gsuite: return 7
    case .UNRECOGNIZED(let i): return i
    }
  }

}

/// Specifies a generic set of settings for a given integration.
public struct Bloombox_Schema_Partner_Integrations_GenericIntegrationSettings: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".GenericIntegrationSettings"

  /// Specifies the integration partner to which these settings apply for a given location.
  public var partner: Bloombox_Schema_Partner_Integrations_IntegrationPartner {
    get {return _storage._partner}
    set {_uniqueStorage()._partner = newValue}
  }

  /// Whether this integration is currently enabled.
  public var enabled: Bool {
    get {return _storage._enabled}
    set {_uniqueStorage()._enabled = newValue}
  }

  /// Whether this integration has been fully setup.
  public var fullySetup: Bool {
    get {return _storage._fullySetup}
    set {_uniqueStorage()._fullySetup = newValue}
  }

  /// Timestamp for when this integration was last tested.
  public var lastTested: Opencannabis_Temporal_Instant {
    get {return _storage._lastTested ?? Opencannabis_Temporal_Instant()}
    set {_uniqueStorage()._lastTested = newValue}
  }
  /// Returns true if `lastTested` has been explicitly set.
  public var hasLastTested: Bool {return _storage._lastTested != nil}
  /// Clears the value of `lastTested`. Subsequent reads from it will return its default value.
  public mutating func clearLastTested() {_storage._lastTested = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularEnumField(value: &_storage._partner)
        case 2: try decoder.decodeSingularBoolField(value: &_storage._enabled)
        case 3: try decoder.decodeSingularBoolField(value: &_storage._fullySetup)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._lastTested)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._partner != .internal {
        try visitor.visitSingularEnumField(value: _storage._partner, fieldNumber: 1)
      }
      if _storage._enabled != false {
        try visitor.visitSingularBoolField(value: _storage._enabled, fieldNumber: 2)
      }
      if _storage._fullySetup != false {
        try visitor.visitSingularBoolField(value: _storage._fullySetup, fieldNumber: 3)
      }
      if let v = _storage._lastTested {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// Location-level integration settings.
public struct Bloombox_Schema_Partner_Integrations_LocationIntegrationSettings: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".LocationIntegrationSettings"

  /// Specifies integrations that a specific location has setup.
  public var integrations: [Bloombox_Schema_Partner_Integrations_IntegrationPartner] {
    get {return _storage._integrations}
    set {_uniqueStorage()._integrations = newValue}
  }

  /// Generic settings, specified for each integration.
  public var generic: Dictionary<String,Bloombox_Schema_Partner_Integrations_GenericIntegrationSettings> {
    get {return _storage._generic}
    set {_uniqueStorage()._generic = newValue}
  }

  /// Specifies location-specific integration settings with Greenbits.
  public var greenbits: Bloombox_Schema_Partner_Integrations_Greenbits_GreenbitsSettings {
    get {return _storage._greenbits ?? Bloombox_Schema_Partner_Integrations_Greenbits_GreenbitsSettings()}
    set {_uniqueStorage()._greenbits = newValue}
  }
  /// Returns true if `greenbits` has been explicitly set.
  public var hasGreenbits: Bool {return _storage._greenbits != nil}
  /// Clears the value of `greenbits`. Subsequent reads from it will return its default value.
  public mutating func clearGreenbits() {_storage._greenbits = nil}

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeRepeatedEnumField(value: &_storage._integrations)
        case 2: try decoder.decodeMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Bloombox_Schema_Partner_Integrations_GenericIntegrationSettings>.self, value: &_storage._generic)
        case 10: try decoder.decodeSingularMessageField(value: &_storage._greenbits)
        default: break
        }
      }
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if !_storage._integrations.isEmpty {
        try visitor.visitPackedEnumField(value: _storage._integrations, fieldNumber: 1)
      }
      if !_storage._generic.isEmpty {
        try visitor.visitMapField(fieldType: SwiftProtobuf._ProtobufMessageMap<SwiftProtobuf.ProtobufString,Bloombox_Schema_Partner_Integrations_GenericIntegrationSettings>.self, value: _storage._generic, fieldNumber: 2)
      }
      if let v = _storage._greenbits {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 10)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  fileprivate var _storage = _StorageClass.defaultInstance
}

/// Partner-level integration settings.
public struct Bloombox_Schema_Partner_Integrations_PartnerIntegrationSettings: SwiftProtobuf.Message {
  public static let protoMessageName: String = _protobuf_package + ".PartnerIntegrationSettings"

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public init() {}

  /// Used by the decoding initializers in the SwiftProtobuf library, not generally
  /// used directly. `init(serializedData:)`, `init(jsonUTF8Data:)`, and other decoding
  /// initializers are defined in the SwiftProtobuf library. See the Message and
  /// Message+*Additions` files.
  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  /// Used by the encoding methods of the SwiftProtobuf library, not generally
  /// used directly. `Message.serializedData()`, `Message.jsonUTF8Data()`, and
  /// other serializer methods are defined in the SwiftProtobuf library. See the
  /// `Message` and `Message+*Additions` files.
  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "bloombox.schema.partner.integrations"

extension Bloombox_Schema_Partner_Integrations_IntegrationPartner: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "INTERNAL"),
    1: .same(proto: "SALSIFY"),
    2: .same(proto: "KEEN"),
    3: .same(proto: "GREENBITS"),
    4: .same(proto: "MAILCHIMP"),
    5: .same(proto: "TWILIO"),
    6: .same(proto: "ONFLEET"),
    7: .same(proto: "GSUITE"),
  ]
}

extension Bloombox_Schema_Partner_Integrations_GenericIntegrationSettings: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "partner"),
    2: .same(proto: "enabled"),
    3: .standard(proto: "fully_setup"),
    4: .standard(proto: "last_tested"),
  ]

  fileprivate class _StorageClass {
    var _partner: Bloombox_Schema_Partner_Integrations_IntegrationPartner = .internal
    var _enabled: Bool = false
    var _fullySetup: Bool = false
    var _lastTested: Opencannabis_Temporal_Instant? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _partner = source._partner
      _enabled = source._enabled
      _fullySetup = source._fullySetup
      _lastTested = source._lastTested
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bloombox_Schema_Partner_Integrations_GenericIntegrationSettings) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._partner != other_storage._partner {return false}
        if _storage._enabled != other_storage._enabled {return false}
        if _storage._fullySetup != other_storage._fullySetup {return false}
        if _storage._lastTested != other_storage._lastTested {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bloombox_Schema_Partner_Integrations_LocationIntegrationSettings: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "integrations"),
    2: .same(proto: "generic"),
    10: .same(proto: "greenbits"),
  ]

  fileprivate class _StorageClass {
    var _integrations: [Bloombox_Schema_Partner_Integrations_IntegrationPartner] = []
    var _generic: Dictionary<String,Bloombox_Schema_Partner_Integrations_GenericIntegrationSettings> = [:]
    var _greenbits: Bloombox_Schema_Partner_Integrations_Greenbits_GreenbitsSettings? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _integrations = source._integrations
      _generic = source._generic
      _greenbits = source._greenbits
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public func _protobuf_generated_isEqualTo(other: Bloombox_Schema_Partner_Integrations_LocationIntegrationSettings) -> Bool {
    if _storage !== other._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((_storage, other._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let other_storage = _args.1
        if _storage._integrations != other_storage._integrations {return false}
        if _storage._generic != other_storage._generic {return false}
        if _storage._greenbits != other_storage._greenbits {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if unknownFields != other.unknownFields {return false}
    return true
  }
}

extension Bloombox_Schema_Partner_Integrations_PartnerIntegrationSettings: SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public func _protobuf_generated_isEqualTo(other: Bloombox_Schema_Partner_Integrations_PartnerIntegrationSettings) -> Bool {
    if unknownFields != other.unknownFields {return false}
    return true
  }
}
